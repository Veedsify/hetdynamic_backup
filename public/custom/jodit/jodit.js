((e, t) => {
    if ("object" == typeof exports && "object" == typeof module)
        module.exports = t();
    else if ("function" == typeof define && define.amd) define([], t);
    else {
        var i = t();
        for (var s in i) ("object" == typeof exports ? exports : e)[s] = i[s];
    }
})(self, function () {
    return (function () {
        var e,
            t = {
                52784(e, t, i) {
                    "use strict";
                    function s(e, t, i, s) {
                        var o,
                            r = arguments.length,
                            n =
                                3 > r
                                    ? t
                                    : null === s
                                    ? (s = Object.getOwnPropertyDescriptor(
                                          t,
                                          i
                                      ))
                                    : s;
                        if (
                            "object" == typeof Reflect &&
                            "function" == typeof Reflect.decorate
                        )
                            n = Reflect.decorate(e, t, i, s);
                        else
                            for (var a = e.length - 1; a >= 0; a--)
                                (o = e[a]) &&
                                    (n =
                                        (3 > r
                                            ? o(n)
                                            : r > 3
                                            ? o(t, i, n)
                                            : o(t, i)) || n);
                        return r > 3 && n && Object.defineProperty(t, i, n), n;
                    }
                    i.d(t, {
                        gn() {
                            return s;
                        },
                    });
                },
                43854(e, t, i) {
                    "use strict";
                    i.d(t, {
                        D() {
                            return o;
                        },
                    });
                    var s = i(36257);
                    class o {
                        constructor() {
                            (this.defaultTimeout = 100),
                                (this.namespace = ""),
                                (this.safeMode = !1),
                                (this.width = "auto"),
                                (this.height = "auto"),
                                (this.safePluginsList = [
                                    "about",
                                    "enter",
                                    "backspace",
                                ]),
                                (this.license = ""),
                                (this.preset = "custom"),
                                (this.presets = {
                                    inline: {
                                        inline: !0,
                                        toolbar: !1,
                                        toolbarInline: !0,
                                        toolbarInlineForSelection: !0,
                                        showXPathInStatusbar: !1,
                                        showCharsCounter: !1,
                                        showWordsCounter: !1,
                                        showPlaceholder: !1,
                                    },
                                }),
                                (this.ownerDocument =
                                    "undefined" != typeof document
                                        ? document
                                        : null),
                                (this.ownerWindow =
                                    "undefined" != typeof window
                                        ? window
                                        : null),
                                (this.shadowRoot = null),
                                (this.zIndex = 0),
                                (this.readonly = !1),
                                (this.disabled = !1),
                                (this.activeButtonsInReadOnly = [
                                    "source",
                                    "fullsize",
                                    "print",
                                    "about",
                                    "dots",
                                    "selectall",
                                ]),
                                (this.allowCommandsInReadOnly = [
                                    "selectall",
                                    "preview",
                                    "print",
                                ]),
                                (this.toolbarButtonSize = "middle"),
                                (this.allowTabNavigation = !1),
                                (this.inline = !1),
                                (this.theme = "default"),
                                (this.saveModeInStorage = !1),
                                (this.editorClassName = !1),
                                (this.editorCssClass = !1),
                                (this.className = !1),
                                (this.style = !1),
                                (this.containerStyle = !1),
                                (this.styleValues = {}),
                                (this.triggerChangeEvent = !0),
                                (this.direction = ""),
                                (this.language = "auto"),
                                (this.debugLanguage = !1),
                                (this.i18n = !1),
                                (this.tabIndex = -1),
                                (this.toolbar = !0),
                                (this.statusbar = !0),
                                (this.showTooltip = !0),
                                (this.showTooltipDelay = 1e3),
                                (this.useNativeTooltip = !1),
                                (this.defaultActionOnPaste = s.INSERT_AS_HTML),
                                (this.enter = s.PARAGRAPH),
                                (this.iframe = !1),
                                (this.editHTMLDocumentMode = !1),
                                (this.enterBlock =
                                    "br" !== this.enter
                                        ? this.enter
                                        : s.PARAGRAPH),
                                (this.defaultMode = s.MODE_WYSIWYG),
                                (this.useSplitMode = !1),
                                (this.colors = {
                                    greyscale: [
                                        "#000000",
                                        "#434343",
                                        "#666666",
                                        "#999999",
                                        "#B7B7B7",
                                        "#CCCCCC",
                                        "#D9D9D9",
                                        "#EFEFEF",
                                        "#F3F3F3",
                                        "#FFFFFF",
                                    ],
                                    palette: [
                                        "#980000",
                                        "#FF0000",
                                        "#FF9900",
                                        "#FFFF00",
                                        "#00F0F0",
                                        "#00FFFF",
                                        "#4A86E8",
                                        "#0000FF",
                                        "#9900FF",
                                        "#FF00FF",
                                    ],
                                    full: [
                                        "#E6B8AF",
                                        "#F4CCCC",
                                        "#FCE5CD",
                                        "#FFF2CC",
                                        "#D9EAD3",
                                        "#D0E0E3",
                                        "#C9DAF8",
                                        "#CFE2F3",
                                        "#D9D2E9",
                                        "#EAD1DC",
                                        "#DD7E6B",
                                        "#EA9999",
                                        "#F9CB9C",
                                        "#FFE599",
                                        "#B6D7A8",
                                        "#A2C4C9",
                                        "#A4C2F4",
                                        "#9FC5E8",
                                        "#B4A7D6",
                                        "#D5A6BD",
                                        "#CC4125",
                                        "#E06666",
                                        "#F6B26B",
                                        "#FFD966",
                                        "#93C47D",
                                        "#76A5AF",
                                        "#6D9EEB",
                                        "#6FA8DC",
                                        "#8E7CC3",
                                        "#C27BA0",
                                        "#A61C00",
                                        "#CC0000",
                                        "#E69138",
                                        "#F1C232",
                                        "#6AA84F",
                                        "#45818E",
                                        "#3C78D8",
                                        "#3D85C6",
                                        "#674EA7",
                                        "#A64D79",
                                        "#85200C",
                                        "#990000",
                                        "#B45F06",
                                        "#BF9000",
                                        "#38761D",
                                        "#134F5C",
                                        "#1155CC",
                                        "#0B5394",
                                        "#351C75",
                                        "#733554",
                                        "#5B0F00",
                                        "#660000",
                                        "#783F04",
                                        "#7F6000",
                                        "#274E13",
                                        "#0C343D",
                                        "#1C4587",
                                        "#073763",
                                        "#20124D",
                                        "#4C1130",
                                    ],
                                }),
                                (this.colorPickerDefaultTab = "background"),
                                (this.imageDefaultWidth = 300),
                                (this.removeButtons = []),
                                (this.disablePlugins = []),
                                (this.extraPlugins = []),
                                (this.extraButtons = []),
                                (this.extraIcons = {}),
                                (this.createAttributes = {
                                    table: {
                                        style: "border-collapse:collapse;width: 100%;",
                                    },
                                }),
                                (this.sizeLG = 900),
                                (this.sizeMD = 700),
                                (this.sizeSM = 400),
                                (this.buttons = [
                                    { group: "font-style", buttons: [] },
                                    { group: "list", buttons: [] },
                                    { group: "font", buttons: [] },
                                    "---",
                                    { group: "script", buttons: [] },
                                    { group: "media", buttons: [] },
                                    "\n",
                                    { group: "state", buttons: [] },
                                    { group: "clipboard", buttons: [] },
                                    { group: "insert", buttons: [] },
                                    { group: "indent", buttons: [] },
                                    { group: "color", buttons: [] },
                                    { group: "form", buttons: [] },
                                    "---",
                                    { group: "history", buttons: [] },
                                    { group: "search", buttons: [] },
                                    { group: "source", buttons: [] },
                                    { group: "other", buttons: [] },
                                    { group: "info", buttons: [] },
                                ]),
                                (this.buttonsMD = [
                                    "bold",
                                    "italic",
                                    "|",
                                    "ul",
                                    "ol",
                                    "eraser",
                                    "|",
                                    "font",
                                    "fontsize",
                                    "---",
                                    "image",
                                    "table",
                                    "|",
                                    "link",
                                    "\n",
                                    "brush",
                                    "paragraph",
                                    "align",
                                    "|",
                                    "hr",
                                    "copyformat",
                                    "fullsize",
                                    "---",
                                    "undo",
                                    "redo",
                                    "|",
                                    "dots",
                                ]),
                                (this.buttonsSM = [
                                    "bold",
                                    "italic",
                                    "|",
                                    "ul",
                                    "ol",
                                    "eraser",
                                    "|",
                                    "fontsize",
                                    "brush",
                                    "paragraph",
                                    "---",
                                    "image",
                                    "table",
                                    "\n",
                                    "link",
                                    "|",
                                    "align",
                                    "|",
                                    "undo",
                                    "redo",
                                    "|",
                                    "copyformat",
                                    "fullsize",
                                    "---",
                                    "dots",
                                ]),
                                (this.buttonsXS = [
                                    "bold",
                                    "brush",
                                    "paragraph",
                                    "eraser",
                                    "|",
                                    "fontsize",
                                    "---",
                                    "image",
                                    "\n",
                                    "align",
                                    "undo",
                                    "redo",
                                    "|",
                                    "link",
                                    "table",
                                    "---",
                                    "dots",
                                ]),
                                (this.events = {}),
                                (this.textIcons = !1),
                                (this.showBrowserColorPicker = !0);
                        }
                        static get defaultOptions() {
                            return (
                                o.__defaultOptions ||
                                    (o.__defaultOptions = new o()),
                                o.__defaultOptions
                            );
                        }
                    }
                    o.prototype.controls = {};
                },
                64004(e, t, i) {
                    "use strict";
                    i.d(t, {
                        e() {
                            return c;
                        },
                    });
                    var s = i(21214),
                        o = i(27177),
                        r = i(80721),
                        n = i(47696),
                        a = i(20405),
                        l = i(11991);
                    i(52378);
                    class c {
                        constructor() {
                            var e, t, i, s;
                            (this.timers = new Map()),
                                (this.__callbacks = new Map()),
                                (this.promisesRejections = new Set()),
                                (this.requestsIdle = new Set()),
                                (this.requestsRaf = new Set()),
                                (this.requestIdleCallbackNative =
                                    null !==
                                        (t =
                                            null ===
                                                (e =
                                                    window.requestIdleCallback) ||
                                            void 0 === e
                                                ? void 0
                                                : e.bind(window)) &&
                                    void 0 !== t
                                        ? t
                                        : (e, t) => {
                                              var i;
                                              const s = Date.now();
                                              return this.setTimeout(
                                                  () => {
                                                      e({
                                                          didTimeout: !1,
                                                          timeRemaining() {
                                                              return Math.max(
                                                                  0,
                                                                  50 -
                                                                      (Date.now() -
                                                                          s)
                                                              );
                                                          },
                                                      });
                                                  },
                                                  null !==
                                                      (i =
                                                          null == t
                                                              ? void 0
                                                              : t.timeout) &&
                                                      void 0 !== i
                                                      ? i
                                                      : 1
                                              );
                                          }),
                                (this.cancelIdleCallbackNative =
                                    null !==
                                        (s =
                                            null ===
                                                (i =
                                                    window.cancelIdleCallback) ||
                                            void 0 === i
                                                ? void 0
                                                : i.bind(window)) &&
                                    void 0 !== s
                                        ? s
                                        : (e) => {
                                              this.clearTimeout(e);
                                          }),
                                (this.isDestructed = !1);
                        }
                        delay(e) {
                            return this.promise((t) => this.setTimeout(t, e));
                        }
                        setTimeout(e, t, ...i) {
                            if (this.isDestructed) return 0;
                            let o = {};
                            (0, l.h)(t) || ((o = t), (t = o.timeout || 0)),
                                o.label && this.clearLabel(o.label);
                            const r = (0, s.i)(e, t, ...i),
                                n = o.label || r;
                            return (
                                this.timers.set(n, r),
                                this.__callbacks.set(n, e),
                                r
                            );
                        }
                        updateTimeout(e, t) {
                            if (!e || !this.timers.has(e)) return null;
                            const i = this.__callbacks.get(e);
                            return this.setTimeout(i, { label: e, timeout: t });
                        }
                        clearLabel(e) {
                            e &&
                                this.timers.has(e) &&
                                ((0, s.g)(this.timers.get(e)),
                                this.timers.delete(e),
                                this.__callbacks.delete(e));
                        }
                        clearTimeout(e) {
                            if ((0, a.H)(e)) return this.clearLabel(e);
                            (0, s.g)(e),
                                this.timers.delete(e),
                                this.__callbacks.delete(e);
                        }
                        debounce(e, t, i = !1) {
                            let a = 0,
                                l = !1;
                            const c = [],
                                d = (...t) => {
                                    if (!l) {
                                        a = 0;
                                        const i = e(...t);
                                        if (((l = !0), c.length)) {
                                            const e = () => {
                                                c.forEach((e) => e()),
                                                    (c.length = 0);
                                            };
                                            (0, n.t)(i) ? i.finally(e) : e();
                                        }
                                    }
                                },
                                h = (...r) => {
                                    (l = !1),
                                        t
                                            ? (!a && i && d(...r),
                                              (0, s.g)(a),
                                              (a = this.setTimeout(
                                                  () => d(...r),
                                                  (0, o.m)(t) ? t() : t
                                              )),
                                              this.timers.set(e, a))
                                            : d(...r);
                                };
                            return (0, r.P)(t) && t.promisify
                                ? (...e) => {
                                      const t = this.promise((e) => {
                                          c.push(e);
                                      });
                                      return h(...e), t;
                                  }
                                : h;
                        }
                        throttle(e, t, i = !1) {
                            let s,
                                r,
                                n,
                                a = null;
                            return (...i) => {
                                (s = !0),
                                    (n = i),
                                    t
                                        ? a ||
                                          ((r = () => {
                                              s
                                                  ? (e(...n),
                                                    (s = !1),
                                                    (a = this.setTimeout(
                                                        r,
                                                        (0, o.m)(t) ? t() : t
                                                    )),
                                                    this.timers.set(r, a))
                                                  : (a = null);
                                          }),
                                          r())
                                        : e(...n);
                            };
                        }
                        promise(e) {
                            let t = () => {};
                            const i = new Promise(
                                (i, s) => (
                                    this.promisesRejections.add(s),
                                    (t = s),
                                    e(i, s)
                                )
                            );
                            return (
                                i
                                    .finally(() => {
                                        this.promisesRejections.delete(t);
                                    })
                                    .catch(() => null),
                                (i.rejectCallback = t),
                                i
                            );
                        }
                        promiseState(e) {
                            if (e.status) return e.status;
                            if (!Promise.race)
                                return new Promise((t) => {
                                    e.then(
                                        (e) => (t("fulfilled"), e),
                                        (e) => {
                                            throw (t("rejected"), e);
                                        }
                                    ),
                                        this.setTimeout(() => {
                                            t("pending");
                                        }, 100);
                                });
                            const t = {};
                            return Promise.race([e, t]).then(
                                (e) => (e === t ? "pending" : "fulfilled"),
                                () => "rejected"
                            );
                        }
                        requestIdleCallback(e, t) {
                            const i = this.requestIdleCallbackNative(e, t);
                            return this.requestsIdle.add(i), i;
                        }
                        requestIdlePromise(e) {
                            return this.promise((t) => {
                                const i = this.requestIdleCallback(
                                    () => t(i),
                                    e
                                );
                            });
                        }
                        cancelIdleCallback(e) {
                            return (
                                this.requestsIdle.delete(e),
                                this.cancelIdleCallbackNative(e)
                            );
                        }
                        requestAnimationFrame(e) {
                            const t = requestAnimationFrame(e);
                            return this.requestsRaf.add(t), t;
                        }
                        cancelAnimationFrame(e) {
                            this.requestsRaf.delete(e), cancelAnimationFrame(e);
                        }
                        clear() {
                            this.requestsIdle.forEach((e) =>
                                this.cancelIdleCallback(e)
                            ),
                                this.requestsRaf.forEach((e) =>
                                    this.cancelAnimationFrame(e)
                                ),
                                this.timers.forEach((e) =>
                                    (0, s.g)(this.timers.get(e))
                                ),
                                this.timers.clear(),
                                this.promisesRejections.forEach((e) => e()),
                                this.promisesRejections.clear();
                        }
                        destruct() {
                            this.clear(), (this.isDestructed = !0);
                        }
                    }
                },
                48961(e, t, i) {
                    "use strict";
                    i.d(t, {
                        w() {
                            return l;
                        },
                    });
                    var s = i(47643),
                        o = i(78855),
                        r = i(78680),
                        n = i(64004);
                    const a = new Map();
                    class l {
                        get componentName() {
                            return (
                                this.__componentName ||
                                    (this.__componentName =
                                        "jodit-" +
                                        (0, s.kebabCase)(
                                            ((0, s.isFunction)(this.className)
                                                ? this.className()
                                                : "") ||
                                                (0, s.getClassName)(this)
                                        )),
                                this.__componentName
                            );
                        }
                        getFullElName(e, t, i) {
                            const o = [this.componentName];
                            return (
                                e &&
                                    ((e = e.replace(/[^a-z0-9-]/gi, "-")),
                                    o.push("__" + e)),
                                t &&
                                    (o.push("_", t),
                                    o.push(
                                        "_",
                                        (0, s.isVoid)(i) ? "true" : "" + i
                                    )),
                                o.join("")
                            );
                        }
                        get ownerDocument() {
                            return this.ow.document;
                        }
                        get od() {
                            return this.ownerDocument;
                        }
                        get ow() {
                            return this.ownerWindow;
                        }
                        get(e, t) {
                            return (0, s.get)(e, t || this);
                        }
                        get isReady() {
                            return this.componentStatus === r.n.ready;
                        }
                        get isDestructed() {
                            return this.componentStatus === r.n.destructed;
                        }
                        get isInDestruct() {
                            return (
                                r.n.beforeDestruct === this.componentStatus ||
                                r.n.destructed === this.componentStatus
                            );
                        }
                        bindDestruct(e) {
                            return (
                                e.hookStatus(
                                    r.n.beforeDestruct,
                                    () => !this.isInDestruct && this.destruct()
                                ),
                                this
                            );
                        }
                        constructor() {
                            (this.async = new n.e()),
                                (this.ownerWindow = window),
                                (this.__componentStatus = r.n.beforeInit),
                                (this.uid = "jodit-uid-" + (0, o.fe)());
                        }
                        destruct() {
                            this.setStatus(r.n.destructed),
                                this.async.destruct(),
                                a.get(this) && a.delete(this);
                        }
                        get componentStatus() {
                            return this.__componentStatus;
                        }
                        set componentStatus(e) {
                            this.setStatus(e);
                        }
                        setStatus(e) {
                            return this.setStatusComponent(e, this);
                        }
                        setStatusComponent(e, t) {
                            if (e === this.__componentStatus) return;
                            t === this && (this.__componentStatus = e);
                            const i = Object.getPrototypeOf(this);
                            i &&
                                (0, s.isFunction)(i.setStatusComponent) &&
                                i.setStatusComponent(e, t);
                            const o = a.get(this),
                                r = null == o ? void 0 : o[e];
                            r && r.length && r.forEach((e) => e(t));
                        }
                        hookStatus(e, t) {
                            let i = a.get(this);
                            i || ((i = {}), a.set(this, i)),
                                i[e] || (i[e] = []),
                                i[e].push(t);
                        }
                        static isInstanceOf(e, t) {
                            return e instanceof t;
                        }
                    }
                    l.STATUSES = r.n;
                },
                95950(e, t, i) {
                    "use strict";
                    i.d(t, {
                        wA() {
                            return o.w;
                        },
                        n$() {
                            return s.n;
                        },
                        Hr() {
                            return r;
                        },
                    });
                    var s = i(78680),
                        o = i(48961);
                    class r extends o.w {
                        get j() {
                            return this.jodit;
                        }
                        get defaultTimeout() {
                            return this.j.defaultTimeout;
                        }
                        i18n(e, ...t) {
                            return this.j.i18n(e, ...t);
                        }
                        setParentView(e) {
                            return (
                                (this.jodit = e), e.components.add(this), this
                            );
                        }
                        constructor(e) {
                            super(), this.setParentView(e);
                        }
                        destruct() {
                            return (
                                this.j.components.delete(this), super.destruct()
                            );
                        }
                    }
                },
                78680(e, t, i) {
                    "use strict";
                    i.d(t, {
                        n() {
                            return s;
                        },
                    });
                    const s = {
                        beforeInit: "beforeInit",
                        ready: "ready",
                        beforeDestruct: "beforeDestruct",
                        destructed: "destructed",
                    };
                },
                36257(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            ACCURACY() {
                                return I;
                            },
                            BASE_PATH() {
                                return J;
                            },
                            BR() {
                                return M;
                            },
                            CLIPBOARD_ID() {
                                return Q;
                            },
                            COMMAND_KEYS() {
                                return L;
                            },
                            EMULATE_DBLCLICK_TIMEOUT() {
                                return F;
                            },
                            INSEPARABLE_TAGS() {
                                return m;
                            },
                            INSERT_AS_HTML() {
                                return V;
                            },
                            INSERT_AS_TEXT() {
                                return $;
                            },
                            INSERT_CLEAR_HTML() {
                                return W;
                            },
                            INSERT_ONLY_TEXT() {
                                return U;
                            },
                            INVISIBLE_SPACE() {
                                return s;
                            },
                            INVISIBLE_SPACE_REG_EXP() {
                                return r;
                            },
                            INVISIBLE_SPACE_REG_EXP_END() {
                                return n;
                            },
                            INVISIBLE_SPACE_REG_EXP_START() {
                                return a;
                            },
                            IS_BLOCK() {
                                return h;
                            },
                            IS_IE() {
                                return R;
                            },
                            IS_INLINE() {
                                return u;
                            },
                            IS_MAC() {
                                return G;
                            },
                            KEY_ALIASES() {
                                return K;
                            },
                            KEY_ALT() {
                                return k;
                            },
                            KEY_BACKSPACE() {
                                return v;
                            },
                            KEY_DELETE() {
                                return j;
                            },
                            KEY_DOWN() {
                                return E;
                            },
                            KEY_ENTER() {
                                return y;
                            },
                            KEY_ESC() {
                                return w;
                            },
                            KEY_F3() {
                                return z;
                            },
                            KEY_LEFT() {
                                return C;
                            },
                            KEY_META() {
                                return g;
                            },
                            KEY_RIGHT() {
                                return x;
                            },
                            KEY_SPACE() {
                                return _;
                            },
                            KEY_TAB() {
                                return b;
                            },
                            KEY_UP() {
                                return S;
                            },
                            MARKER_CLASS() {
                                return H;
                            },
                            MODE_SOURCE() {
                                return P;
                            },
                            MODE_SPLIT() {
                                return N;
                            },
                            MODE_WYSIWYG() {
                                return D;
                            },
                            NBSP_SPACE() {
                                return o;
                            },
                            NEARBY() {
                                return T;
                            },
                            NO_EMPTY_TAGS() {
                                return f;
                            },
                            PARAGRAPH() {
                                return A;
                            },
                            SAFE_COUNT_CHANGE_CALL() {
                                return Y;
                            },
                            SOURCE_CONSUMER() {
                                return ee;
                            },
                            SPACE_REG_EXP() {
                                return l;
                            },
                            SPACE_REG_EXP_END() {
                                return d;
                            },
                            SPACE_REG_EXP_START() {
                                return c;
                            },
                            TEMP_ATTR() {
                                return X;
                            },
                            TEXT_HTML() {
                                return B;
                            },
                            TEXT_PLAIN() {
                                return q;
                            },
                            TEXT_RTF() {
                                return O;
                            },
                            lang() {
                                return Z;
                            },
                        });
                    const s = "\ufeff",
                        o = " ",
                        r = () => /[\uFEFF]/g,
                        n = () => /[\uFEFF]+$/g,
                        a = () => /^[\uFEFF]+/g,
                        l = () => /[\s\n\t\r\uFEFF\u200b]+/g,
                        c = () => /^[\s\n\t\r\uFEFF\u200b]+/g,
                        d = () => /[\s\n\t\r\uFEFF\u200b]+$/g,
                        h =
                            /^(ADDRESS|ARTICLE|ASIDE|BLOCKQUOTE|CANVAS|DD|DFN|DIV|DL|DT|FIELDSET|FIGCAPTION|FIGURE|FOOTER|FORM|H[1-6]|HEADER|HGROUP|HR|LI|MAIN|NAV|NOSCRIPT|OUTPUT|P|PRE|RUBY|SCRIPT|STYLE|OBJECT|OL|SECTION|IFRAME|JODIT|JODIT-MEDIA|UL|TR|TD|TH|TBODY|THEAD|TFOOT|TABLE|BODY|HTML|VIDEO)$/i,
                        u = /^(STRONG|SPAN|I|EM|B|SUP|SUB|A|U)$/i,
                        p = [
                            "img",
                            "video",
                            "svg",
                            "iframe",
                            "script",
                            "input",
                            "textarea",
                            "link",
                            "jodit",
                            "jodit-media",
                        ],
                        m = new Set([...p, "br", "hr"]),
                        f = new Set(p),
                        g = "Meta",
                        v = "Backspace",
                        b = "Tab",
                        y = "Enter",
                        w = "Escape",
                        k = "Alt",
                        C = "ArrowLeft",
                        S = "ArrowUp",
                        x = "ArrowRight",
                        E = "ArrowDown",
                        _ = "Space",
                        j = "Delete",
                        z = "F3",
                        T = 5,
                        I = 10,
                        L = [g, v, j, S, E, x, C, y, w, z, b],
                        M = "br",
                        A = "p",
                        D = 1,
                        P = 2,
                        N = 3,
                        R =
                            "undefined" != typeof navigator &&
                            (-1 !== navigator.userAgent.indexOf("MSIE") ||
                                /rv:11.0/i.test(navigator.userAgent)),
                        q = R ? "text" : "text/plain",
                        B = R ? "html" : "text/html",
                        O = R ? "rtf" : "text/rtf",
                        H = "jodit-selection_marker",
                        F = 300,
                        V = "insert_as_html",
                        W = "insert_clear_html",
                        $ = "insert_as_text",
                        U = "insert_only_text",
                        Y = 10,
                        G =
                            "undefined" != typeof window &&
                            /Mac|iPod|iPhone|iPad/.test(
                                window.navigator.platform
                            ),
                        K = {
                            add: "+",
                            break: "pause",
                            cmd: "meta",
                            command: "meta",
                            ctl: "control",
                            ctrl: "control",
                            del: "delete",
                            down: "arrowdown",
                            esc: "escape",
                            ins: "insert",
                            left: "arrowleft",
                            mod: G ? "meta" : "control",
                            opt: "alt",
                            option: "alt",
                            return: "enter",
                            right: "arrowright",
                            space: " ",
                            spacebar: " ",
                            up: "arrowup",
                            win: "meta",
                            windows: "meta",
                        },
                        J = (() => {
                            if ("undefined" == typeof document) return "";
                            const e = document.currentScript,
                                t = (e) => {
                                    const t = e.split("/");
                                    return /\.js/.test(t[t.length - 1])
                                        ? t.slice(0, t.length - 1).join("/") +
                                              "/"
                                        : e;
                                };
                            if (e) return t(e.src);
                            const i = document.querySelectorAll("script[src]");
                            return i && i.length
                                ? t(i[i.length - 1].src)
                                : window.location.href;
                        })(),
                        X = "data-jodit-temp",
                        Z = {},
                        Q = "clipboard",
                        ee = "source-consumer";
                },
                46696(e, t, i) {
                    "use strict";
                    function s(e) {
                        class t extends e {
                            constructor(...e) {
                                super(...e),
                                    this.constructor === t &&
                                        (this instanceof t ||
                                            Object.setPrototypeOf(
                                                this,
                                                t.prototype
                                            ),
                                        this.setStatus("ready"));
                            }
                        }
                        return t;
                    }
                    i.d(t, {
                        w() {
                            return s;
                        },
                    });
                },
                51663(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            autobind() {
                                return C;
                            },
                            cache() {
                                return o;
                            },
                            component() {
                                return r.w;
                            },
                            debounce() {
                                return c;
                            },
                            derive() {
                                return b;
                            },
                            getPropertyDescriptor() {
                                return v.w7;
                            },
                            hook() {
                                return u;
                            },
                            idle() {
                                return h;
                            },
                            nonenumerable() {
                                return p;
                            },
                            persistent() {
                                return f;
                            },
                            throttle() {
                                return d;
                            },
                            wait() {
                                return g;
                            },
                            watch() {
                                return v.YP;
                            },
                        });
                    var s = i(47643);
                    function o(e, t, i) {
                        const o = i.get;
                        if (!o)
                            throw (0, s.error)(
                                "Getter property descriptor expected"
                            );
                        i.get = function () {
                            const e = o.call(this);
                            return (
                                (e && !0 === e.noCache) ||
                                    Object.defineProperty(this, t, {
                                        configurable: i.configurable,
                                        enumerable: i.enumerable,
                                        writable: !1,
                                        value: e,
                                    }),
                                e
                            );
                        };
                    }
                    var r = i(46696),
                        n = i(77574),
                        a = i(95950),
                        l = i(30324);
                    function c(e, t = !1, i = "debounce") {
                        return (s, o) => {
                            const r = s[o];
                            if (!(0, n.mf)(r))
                                throw (0, l.vU)("Handler must be a Function");
                            return (
                                s.hookStatus(a.n$.ready, (s) => {
                                    const { async: r } = s,
                                        a = (0, n.mf)(e) ? e(s) : e;
                                    Object.defineProperty(s, o, {
                                        configurable: !0,
                                        value: r[i](
                                            s[o].bind(s),
                                            (0, n.hj)(a) || (0, n.PO)(a)
                                                ? a
                                                : s.defaultTimeout,
                                            t
                                        ),
                                    });
                                }),
                                {
                                    configurable: !0,
                                    get() {
                                        return r.bind(this);
                                    },
                                }
                            );
                        };
                    }
                    function d(e, t = !1) {
                        return c(e, t, "throttle");
                    }
                    function h() {
                        return (e, t) => {
                            if (!(0, s.isFunction)(e[t]))
                                throw (0, s.error)(
                                    "Handler must be a Function"
                                );
                            e.hookStatus(a.n$.ready, (e) => {
                                const { async: i } = e,
                                    s = e[t];
                                e[t] = (...t) =>
                                    i.requestIdleCallback(s.bind(e, ...t));
                            });
                        };
                    }
                    function u(e) {
                        return (t, i) => {
                            if (!(0, n.mf)(t[i]))
                                throw (0, l.vU)("Handler must be a Function");
                            t.hookStatus(e, (e) => {
                                e[i].call(e);
                            });
                        };
                    }
                    i(52378);
                    const p = (e, t) => {
                        !1 !==
                            (Object.getOwnPropertyDescriptor(e, t) || {})
                                .enumerable &&
                            Object.defineProperty(e, t, {
                                enumerable: !1,
                                set(e) {
                                    Object.defineProperty(this, t, {
                                        enumerable: !1,
                                        writable: !0,
                                        value: e,
                                    });
                                },
                            });
                    };
                    var m = i(47938);
                    function f(e, t) {
                        e.hookStatus(a.n$.ready, (e) => {
                            const i = (0, m.f)(e) ? e : e.jodit,
                                s = `${i.options.namespace}${e.componentName}_prop_${t}`,
                                o = e[t];
                            Object.defineProperty(e, t, {
                                get() {
                                    var e;
                                    return null !== (e = i.storage.get(s)) &&
                                        void 0 !== e
                                        ? e
                                        : o;
                                },
                                set(e) {
                                    i.storage.set(s, e);
                                },
                            });
                        });
                    }
                    function g(e) {
                        return (t, i) => {
                            if (!(0, s.isFunction)(t[i]))
                                throw (0, s.error)(
                                    "Handler must be a Function"
                                );
                            t.hookStatus(a.n$.ready, (t) => {
                                const { async: s } = t,
                                    o = t[i];
                                let r = 0;
                                Object.defineProperty(t, i, {
                                    configurable: !0,
                                    value: function i(...n) {
                                        s.clearTimeout(r),
                                            e(t)
                                                ? o.apply(t, n)
                                                : (r = s.setTimeout(
                                                      () => i(...n),
                                                      10
                                                  ));
                                    },
                                });
                            });
                        };
                    }
                    var v = i(12692);
                    function b(...e) {
                        return (t) => {
                            const i = t.prototype;
                            for (let t = 0; e.length > t; t++) {
                                const s = e[t],
                                    o = Object.getOwnPropertyNames(s.prototype);
                                for (let e = 0; o.length > e; e++) {
                                    const t = o[e],
                                        r = Object.getOwnPropertyDescriptor(
                                            s.prototype,
                                            t
                                        );
                                    null != r &&
                                        (0, n.mf)(r.value) &&
                                        !(0, n.mf)(i[t]) &&
                                        Object.defineProperty(i, t, {
                                            enumerable: !0,
                                            configurable: !0,
                                            writable: !0,
                                            value(...e) {
                                                return r.value.call(this, ...e);
                                            },
                                        });
                                }
                            }
                        };
                    }
                    function y(e) {
                        return (
                            (y =
                                "function" == typeof Symbol &&
                                "symbol" == typeof Symbol.iterator
                                    ? (e) => typeof e
                                    : (e) =>
                                          e &&
                                          "function" == typeof Symbol &&
                                          e.constructor === Symbol &&
                                          e !== Symbol.prototype
                                              ? "symbol"
                                              : typeof e),
                            y(e)
                        );
                    }
                    function w(e, t, i) {
                        var s = i.value;
                        if ("function" != typeof s)
                            throw new TypeError(
                                "@boundMethod decorator can only be applied to methods not: ".concat(
                                    y(s)
                                )
                            );
                        var o = !1;
                        return {
                            configurable: !0,
                            get() {
                                if (
                                    o ||
                                    this === e.prototype ||
                                    this.hasOwnProperty(t) ||
                                    "function" != typeof s
                                )
                                    return s;
                                var i = s.bind(this);
                                return (
                                    (o = !0),
                                    Object.defineProperty(this, t, {
                                        configurable: !0,
                                        get() {
                                            return i;
                                        },
                                        set(e) {
                                            (s = e), delete this[t];
                                        },
                                    }),
                                    (o = !1),
                                    i
                                );
                            },
                            set(e) {
                                s = e;
                            },
                        };
                    }
                    function k(e) {
                        var t;
                        return (
                            "undefined" != typeof Reflect &&
                            "function" == typeof Reflect.ownKeys
                                ? (t = Reflect.ownKeys(e.prototype))
                                : ((t = Object.getOwnPropertyNames(
                                      e.prototype
                                  )),
                                  "function" ==
                                      typeof Object.getOwnPropertySymbols &&
                                      (t = t.concat(
                                          Object.getOwnPropertySymbols(
                                              e.prototype
                                          )
                                      ))),
                            t.forEach((t) => {
                                if ("constructor" !== t) {
                                    var i = Object.getOwnPropertyDescriptor(
                                        e.prototype,
                                        t
                                    );
                                    "function" == typeof i.value &&
                                        Object.defineProperty(
                                            e.prototype,
                                            t,
                                            w(e, t, i)
                                        );
                                }
                            }),
                            e
                        );
                    }
                    function C() {
                        return 1 === arguments.length
                            ? k.apply(void 0, arguments)
                            : w.apply(void 0, arguments);
                    }
                },
                12692(e, t, i) {
                    "use strict";
                    i.d(t, {
                        YP() {
                            return h;
                        },
                        w7() {
                            return d;
                        },
                    });
                    var s = i(27177),
                        o = i(80721),
                        r = i(47938),
                        n = i(17004),
                        a = i(78680),
                        l = i(46861),
                        c = i(30324);
                    function d(e, t) {
                        let i;
                        do {
                            (i = Object.getOwnPropertyDescriptor(e, t)),
                                (e = Object.getPrototypeOf(e));
                        } while (!i && e);
                        return i;
                    }
                    function h(e, t) {
                        return (i, h) => {
                            if (!(0, s.m)(i[h]))
                                throw (0, c.vU)("Handler must be a Function");
                            const u = (a) => {
                                const c = (e, ...t) => {
                                    if (!a.isInDestruct) return a[h](e, ...t);
                                };
                                (0, l.C)(e).forEach((e) => {
                                    if (/:/.test(e)) {
                                        const [i, o] = e.split(":");
                                        let n = t;
                                        const l = (0, r.f)(a) ? a : a.jodit;
                                        return (
                                            i.length && (n = a.get(i)),
                                            (0, s.m)(n) && (n = n(a)),
                                            l.events.on(n || a, o, c),
                                            n || l.events.on(o, c),
                                            void a.hookStatus(
                                                "beforeDestruct",
                                                () => {
                                                    l.events
                                                        .off(n || a, o, c)
                                                        .off(o, c);
                                                }
                                            )
                                        );
                                    }
                                    const l = e.split("."),
                                        [h] = l,
                                        u = l.slice(1);
                                    let p = a[h];
                                    (0, o.P)(p) &&
                                        (0, n.L)(p).on(
                                            "change." + u.join("."),
                                            c
                                        );
                                    const m = d(i, h);
                                    Object.defineProperty(a, h, {
                                        configurable: !0,
                                        set(e) {
                                            const t = p;
                                            t !== e &&
                                                ((p = e),
                                                m && m.set && m.set.call(a, e),
                                                (0, o.P)(p) &&
                                                    ((p = (0, n.L)(p)),
                                                    p.on(
                                                        "change." + u.join("."),
                                                        c
                                                    )),
                                                c(h, t, p));
                                        },
                                        get: () =>
                                            m && m.get ? m.get.call(a) : p,
                                    });
                                });
                            };
                            (0, s.m)(i.hookStatus)
                                ? i.hookStatus(a.n.ready, u)
                                : u(i);
                        };
                    }
                },
                38886(e, t, i) {
                    "use strict";
                    i.d(t, {
                        i() {
                            return c;
                        },
                    });
                    var s = i(36257),
                        o = i(77574),
                        r = i(3790),
                        n = i(65358),
                        a = i(25916),
                        l = i(98768);
                    class c {
                        static detach(e) {
                            for (; e.firstChild; ) e.removeChild(e.firstChild);
                        }
                        static wrapInline(e, t, i) {
                            let s,
                                r = e,
                                n = e;
                            i.s.save();
                            let a = !1;
                            do {
                                (a = !1),
                                    (s = r.previousSibling),
                                    s && !c.isBlock(s) && ((a = !0), (r = s));
                            } while (a);
                            do {
                                (a = !1),
                                    (s = n.nextSibling),
                                    s && !c.isBlock(s) && ((a = !0), (n = s));
                            } while (a);
                            const l = (0, o.HD)(t)
                                ? i.createInside.element(t)
                                : t;
                            r.parentNode && r.parentNode.insertBefore(l, r);
                            let d = r;
                            for (
                                ;
                                d &&
                                ((d = r.nextSibling),
                                l.appendChild(r),
                                r !== n && d);

                            )
                                r = d;
                            return i.s.restore(), l;
                        }
                        static wrap(e, t, i) {
                            const s = (0, o.HD)(t) ? i.element(t) : t;
                            if (c.isNode(e)) {
                                if (!e.parentNode)
                                    throw (0, a.error)(
                                        "Element should be in DOM"
                                    );
                                e.parentNode.insertBefore(s, e),
                                    s.appendChild(e);
                            } else {
                                const t = e.extractContents();
                                e.insertNode(s), s.appendChild(t);
                            }
                            return s;
                        }
                        static unwrap(e) {
                            const t = e.parentNode;
                            if (t) {
                                for (; e.firstChild; )
                                    t.insertBefore(e.firstChild, e);
                                c.safeRemove(e);
                            }
                        }
                        static between(e, t, i) {
                            let s = e;
                            for (; s && s !== t && (e === s || !i(s)); ) {
                                let e = s.firstChild || s.nextSibling;
                                if (!e) {
                                    for (; s && !s.nextSibling; )
                                        s = s.parentNode;
                                    e = null == s ? void 0 : s.nextSibling;
                                }
                                s = e;
                            }
                        }
                        static replace(e, t, i, s = !1, n = !1) {
                            (0, o.FP)(t) && (t = i.fromHTML(t));
                            const a = (0, o.HD)(t) ? i.element(t) : t;
                            if (!n)
                                for (; e.firstChild; )
                                    a.appendChild(e.firstChild);
                            return (
                                s &&
                                    c.isElement(e) &&
                                    c.isElement(a) &&
                                    (0, r.qo)(e.attributes).forEach((e) => {
                                        a.setAttribute(e.name, e.value);
                                    }),
                                e.parentNode && e.parentNode.replaceChild(a, e),
                                a
                            );
                        }
                        static isEmptyTextNode(e) {
                            return (
                                c.isText(e) &&
                                (!e.nodeValue ||
                                    0 ===
                                        e.nodeValue
                                            .replace(
                                                s.INVISIBLE_SPACE_REG_EXP(),
                                                ""
                                            )
                                            .trim().length)
                            );
                        }
                        static isEmptyContent(e) {
                            return c.each(e, (e) => c.isEmptyTextNode(e));
                        }
                        static isContentEditable(e, t) {
                            return (
                                c.isNode(e) &&
                                !c.closest(
                                    e,
                                    (e) =>
                                        c.isElement(e) &&
                                        "false" ===
                                            e.getAttribute("contenteditable"),
                                    t
                                )
                            );
                        }
                        static isEmpty(e, t = s.NO_EMPTY_TAGS) {
                            if (!e) return !0;
                            let i;
                            i = (0, o.mf)(t)
                                ? t
                                : (e) => t.has(e.nodeName.toLowerCase());
                            const r = (e) =>
                                null == e.nodeValue ||
                                0 === (0, n.fy)(e.nodeValue).length;
                            return c.isText(e)
                                ? r(e)
                                : !(c.isElement(e) && i(e)) &&
                                      c.each(e, (e) => {
                                          if (
                                              (c.isText(e) && !r(e)) ||
                                              (c.isElement(e) && i(e))
                                          )
                                              return !1;
                                      });
                        }
                        static isNode(e) {
                            return !!(
                                e &&
                                (0, o.HD)(e.nodeName) &&
                                "number" == typeof e.nodeType &&
                                e.childNodes &&
                                (0, o.mf)(e.appendChild)
                            );
                        }
                        static isCell(e) {
                            return c.isNode(e) && /^(td|th)$/i.test(e.nodeName);
                        }
                        static isImage(e) {
                            return (
                                c.isNode(e) &&
                                /^(img|svg|picture|canvas)$/i.test(e.nodeName)
                            );
                        }
                        static isBlock(e) {
                            return (
                                !(0, o.nj)(e) &&
                                "object" == typeof e &&
                                c.isNode(e) &&
                                s.IS_BLOCK.test(e.nodeName)
                            );
                        }
                        static isText(e) {
                            return !(!e || e.nodeType !== Node.TEXT_NODE);
                        }
                        static isElement(e) {
                            var t;
                            return (
                                !!c.isNode(e) &&
                                !(
                                    !(null === (t = e.ownerDocument) ||
                                    void 0 === t
                                        ? void 0
                                        : t.defaultView) ||
                                    e.nodeType !== Node.ELEMENT_NODE
                                )
                            );
                        }
                        static isFragment(e) {
                            var t;
                            return (
                                !!c.isNode(e) &&
                                !(
                                    !(null === (t = e.ownerDocument) ||
                                    void 0 === t
                                        ? void 0
                                        : t.defaultView) ||
                                    e.nodeType !== Node.DOCUMENT_FRAGMENT_NODE
                                )
                            );
                        }
                        static isHTMLElement(e) {
                            var t;
                            if (!c.isNode(e)) return !1;
                            const i =
                                null === (t = e.ownerDocument) || void 0 === t
                                    ? void 0
                                    : t.defaultView;
                            return !!(i && e instanceof i.HTMLElement);
                        }
                        static isInlineBlock(e) {
                            return (
                                c.isElement(e) &&
                                !/^(BR|HR)$/i.test(e.tagName) &&
                                -1 !==
                                    ["inline", "inline-block"].indexOf(
                                        "" + (0, a.css)(e, "display")
                                    )
                            );
                        }
                        static canSplitBlock(e) {
                            return (
                                !(0, o.nj)(e) &&
                                c.isHTMLElement(e) &&
                                c.isBlock(e) &&
                                !/^(TD|TH|CAPTION|FORM)$/.test(e.nodeName) &&
                                void 0 !== e.style &&
                                !/^(fixed|absolute)/i.test(e.style.position)
                            );
                        }
                        static last(e, t) {
                            let i = null == e ? void 0 : e.lastChild;
                            if (!i) return null;
                            do {
                                if (t(i)) return i;
                                let s = i.lastChild;
                                if (
                                    (s || (s = i.previousSibling),
                                    !s && i.parentNode !== e)
                                ) {
                                    do {
                                        i = i.parentNode;
                                    } while (
                                        i &&
                                        !(null == i
                                            ? void 0
                                            : i.previousSibling) &&
                                        i.parentNode !== e
                                    );
                                    s = null == i ? void 0 : i.previousSibling;
                                }
                                i = s;
                            } while (i);
                            return null;
                        }
                        static prev(e, t, i, s = !0) {
                            return c.find(e, t, i, !1, s);
                        }
                        static next(e, t, i, s = !0) {
                            return c.find(e, t, i, !0, s);
                        }
                        static prevWithClass(e, t) {
                            return c.prev(
                                e,
                                (e) =>
                                    c.isElement(e) && e.classList.contains(t),
                                e.parentNode
                            );
                        }
                        static nextWithClass(e, t) {
                            return c.next(
                                e,
                                (e) =>
                                    c.isElement(e) && e.classList.contains(t),
                                e.parentNode
                            );
                        }
                        static find(e, t, i, s = !0, o = !0) {
                            const r = this.nextGen(e, i, s, o);
                            let n = r.next();
                            for (; !n.done; ) {
                                if (t(n.value)) return n.value;
                                n = r.next();
                            }
                            return null;
                        }
                        static *nextGen(e, t, i = !0, s = !0) {
                            const o = [];
                            let r = e;
                            do {
                                let t = i ? r.nextSibling : r.previousSibling;
                                for (; t; )
                                    o.unshift(t),
                                        (t = i
                                            ? t.nextSibling
                                            : t.previousSibling);
                                yield* this.runInStack(e, o, i, s),
                                    (r = r.parentNode);
                            } while (r && r !== t);
                            return null;
                        }
                        static each(e, t, i = !0) {
                            const s = this.eachGen(e, i);
                            let o = s.next();
                            for (; !o.done; ) {
                                if (!1 === t(o.value)) return !1;
                                o = s.next();
                            }
                            return !0;
                        }
                        static eachGen(e, t = !0) {
                            return this.runInStack(e, [e], t);
                        }
                        static *runInStack(e, t, i, s = !0) {
                            for (; t.length; ) {
                                const o = t.pop();
                                if (s) {
                                    let e = i ? o.lastChild : o.firstChild;
                                    for (; e; )
                                        t.push(e),
                                            (e = i
                                                ? e.previousSibling
                                                : e.nextSibling);
                                }
                                e !== o && (yield o);
                            }
                        }
                        static findWithCurrent(
                            e,
                            t,
                            i,
                            s = "nextSibling",
                            o = "firstChild"
                        ) {
                            let r = e;
                            do {
                                if (t(r)) return r || null;
                                if (o && r && r[o]) {
                                    const e = c.findWithCurrent(
                                        r[o],
                                        t,
                                        r,
                                        s,
                                        o
                                    );
                                    if (e) return e;
                                }
                                for (; r && !r[s] && r !== i; )
                                    r = r.parentNode;
                                r && r[s] && r !== i && (r = r[s]);
                            } while (r && r !== i);
                            return null;
                        }
                        static findSibling(
                            e,
                            t = !0,
                            i = (e) => !c.isEmptyTextNode(e)
                        ) {
                            let s = c.sibling(e, t);
                            for (; s && !i(s); ) s = c.sibling(s, t);
                            return s && i(s) ? s : null;
                        }
                        static findNotEmptySibling(e, t) {
                            return c.findSibling(e, t, (e) => {
                                var t;
                                return (
                                    !c.isEmptyTextNode(e) &&
                                    !!(
                                        !c.isText(e) ||
                                        ((null === (t = e.nodeValue) ||
                                        void 0 === t
                                            ? void 0
                                            : t.length) &&
                                            (0, n.fy)(e.nodeValue))
                                    )
                                );
                            });
                        }
                        static findNotEmptyNeighbor(e, t, i) {
                            return (0, a.call)(
                                t ? c.prev : c.next,
                                e,
                                (e) =>
                                    !(
                                        !e ||
                                        (c.isText(e) &&
                                            !(0, n.fy)(
                                                (null == e
                                                    ? void 0
                                                    : e.nodeValue) || ""
                                            ).length)
                                    ),
                                i
                            );
                        }
                        static sibling(e, t) {
                            return t ? e.previousSibling : e.nextSibling;
                        }
                        static up(e, t, i, s = !1) {
                            let o = e;
                            if (!o) return null;
                            do {
                                if (t(o)) return o;
                                if (o === i || !o.parentNode) break;
                                o = o.parentNode;
                            } while (o && o !== i);
                            return o === i && s && t(o) ? o : null;
                        }
                        static closest(e, t, i) {
                            let s;
                            const r = (e) => e.toLowerCase();
                            if ((0, o.mf)(t)) s = t;
                            else if ((0, o.kJ)(t)) {
                                const e = new Set(t.map(r));
                                s = (t) => !(!t || !e.has(r(t.nodeName)));
                            } else s = (e) => !(!e || r(t) !== r(e.nodeName));
                            return c.up(e, s, i);
                        }
                        static furthest(e, t, i) {
                            let s = null,
                                o = null == e ? void 0 : e.parentElement;
                            for (; o && o !== i; )
                                t(o) && (s = o),
                                    (o = null == o ? void 0 : o.parentElement);
                            return s;
                        }
                        static appendChildFirst(e, t) {
                            const i = e.firstChild;
                            i
                                ? i !== t && e.insertBefore(t, i)
                                : e.appendChild(t);
                        }
                        static after(e, t) {
                            const { parentNode: i } = e;
                            i &&
                                (i.lastChild === e
                                    ? i.appendChild(t)
                                    : i.insertBefore(t, e.nextSibling));
                        }
                        static before(e, t) {
                            const { parentNode: i } = e;
                            i && i.insertBefore(t, e);
                        }
                        static prepend(e, t) {
                            e.insertBefore(t, e.firstChild);
                        }
                        static append(e, t) {
                            (0, o.kJ)(t)
                                ? t.forEach((t) => {
                                      this.append(e, t);
                                  })
                                : e.appendChild(t);
                        }
                        static moveContent(e, t, i = !1, s = () => !0) {
                            const o = (
                                e.ownerDocument || document
                            ).createDocumentFragment();
                            (0, r.qo)(e.childNodes)
                                .filter((e) => !!s(e) || (c.safeRemove(e), !1))
                                .forEach((e) => {
                                    o.appendChild(e);
                                }),
                                i && t.firstChild
                                    ? t.insertBefore(o, t.firstChild)
                                    : t.appendChild(o);
                        }
                        static isOrContains(e, t, i = !1) {
                            return e === t
                                ? !i
                                : !!(
                                      t &&
                                      e &&
                                      this.up(t, (t) => t === e, e, !0)
                                  );
                        }
                        static safeRemove(...e) {
                            e.forEach(
                                (e) =>
                                    c.isNode(e) &&
                                    e.parentNode &&
                                    e.parentNode.removeChild(e)
                            );
                        }
                        static safeInsertNode(e, t) {
                            e.collapsed || e.deleteContents(),
                                e.insertNode(t),
                                [t.nextSibling, t.previousSibling].forEach(
                                    (e) =>
                                        c.isText(e) &&
                                        !e.nodeValue &&
                                        c.safeRemove(e)
                                );
                        }
                        static hide(e) {
                            e &&
                                ((0, a.dataBind)(
                                    e,
                                    "__old_display",
                                    e.style.display
                                ),
                                (e.style.display = "none"));
                        }
                        static show(e) {
                            if (!e) return;
                            const t = (0, a.dataBind)(e, "__old_display");
                            "none" === e.style.display &&
                                (e.style.display = t || "");
                        }
                        static isTag(e, t) {
                            if (!this.isElement(e)) return !1;
                            const i = e.tagName.toLowerCase(),
                                s = e.tagName.toUpperCase();
                            if (t instanceof Set) return t.has(i) || t.has(s);
                            const o = (0, r._2)(t).map((e) =>
                                (e + "").toLowerCase()
                            );
                            for (let e = 0; o.length > e; e += 1)
                                if (i === o[e] || s === o[e]) return !0;
                            return !1;
                        }
                        static markTemporary(e, t) {
                            return (
                                t && (0, a.attr)(e, t),
                                (0, a.attr)(e, s.TEMP_ATTR, !0),
                                e
                            );
                        }
                        static isTemporary(e) {
                            return (
                                !!c.isElement(e) &&
                                ((0, l._)(e) ||
                                    "true" === (0, a.attr)(e, s.TEMP_ATTR))
                            );
                        }
                        static replaceTemporaryFromString(e) {
                            return e.replace(
                                /<([a-z]+)[^>]+data-jodit-temp[^>]+>(.+?)<\/\1>/gi,
                                "$2"
                            );
                        }
                        static temporaryList(e) {
                            return (0, a.$$)(`[${s.TEMP_ATTR}]`, e);
                        }
                    }
                },
                97039(e, t, i) {
                    "use strict";
                    i.d(t, {
                        b() {
                            return o.b;
                        },
                        i() {
                            return s.i;
                        },
                    });
                    var s = i(38886),
                        o = i(29235);
                },
                29235(e, t, i) {
                    "use strict";
                    i.d(t, {
                        b() {
                            return a;
                        },
                    });
                    var s = i(52784),
                        o = i(63900),
                        r = i(51663),
                        n = i(38886);
                    class a extends o.a {
                        setWork(e) {
                            return (
                                this.isWorked && this.break(),
                                (this.workNodes = n.i.eachGen(
                                    e,
                                    !this.options.reverse
                                )),
                                (this.isFinished = !1),
                                this.startIdleRequest(),
                                this
                            );
                        }
                        constructor(e, t = {}) {
                            super(),
                                (this.async = e),
                                (this.options = t),
                                (this.workNodes = null),
                                (this.hadAffect = !1),
                                (this.isWorked = !1),
                                (this.isFinished = !1),
                                (this.idleId = 0);
                        }
                        startIdleRequest() {
                            var e;
                            this.idleId = this.async.requestIdleCallback(
                                this.workPerform,
                                {
                                    timeout:
                                        null !== (e = this.options.timeout) &&
                                        void 0 !== e
                                            ? e
                                            : 10,
                                }
                            );
                        }
                        break(e) {
                            this.isWorked &&
                                (this.stop(), this.emit("break", e));
                        }
                        end() {
                            this.isWorked &&
                                (this.stop(),
                                this.emit("end", this.hadAffect),
                                (this.hadAffect = !1));
                        }
                        stop() {
                            (this.isWorked = !1),
                                (this.isFinished = !0),
                                (this.workNodes = null),
                                this.async.cancelIdleCallback(this.idleId);
                        }
                        destruct() {
                            super.destruct(), this.stop();
                        }
                        workPerform(e) {
                            var t;
                            if (this.workNodes) {
                                this.isWorked = !0;
                                let i = 0;
                                const s =
                                    null !==
                                        (t = this.options.timeoutChunkSize) &&
                                    void 0 !== t
                                        ? t
                                        : 50;
                                for (
                                    ;
                                    !this.isFinished &&
                                    (e.timeRemaining() > 0 ||
                                        (e.didTimeout && s >= i));

                                ) {
                                    const e = this.workNodes.next();
                                    if (
                                        ((i += 1),
                                        this.visitNode(e.value) &&
                                            (this.hadAffect = !0),
                                        e.done)
                                    )
                                        return void this.end();
                                }
                            } else this.end();
                            this.isFinished || this.startIdleRequest();
                        }
                        visitNode(e) {
                            var t;
                            return (
                                !(
                                    !e ||
                                    (void 0 !== this.options.whatToShow &&
                                        e.nodeType !== this.options.whatToShow)
                                ) &&
                                null !== (t = this.emit("visit", e)) &&
                                void 0 !== t &&
                                t
                            );
                        }
                    }
                    (0, s.gn)([r.autobind], a.prototype, "workPerform", null);
                },
                63900(e, t, i) {
                    "use strict";
                    i.d(t, {
                        a() {
                            return s;
                        },
                    });
                    class s {
                        constructor() {
                            this.__map = new Map();
                        }
                        on(e, t) {
                            var i;
                            return (
                                this.__map.has(e) ||
                                    this.__map.set(e, new Set()),
                                null === (i = this.__map.get(e)) ||
                                    void 0 === i ||
                                    i.add(t),
                                this
                            );
                        }
                        off(e, t) {
                            var i;
                            return (
                                this.__map.has(e) &&
                                    (null === (i = this.__map.get(e)) ||
                                        void 0 === i ||
                                        i.delete(t)),
                                this
                            );
                        }
                        destruct() {
                            this.__map.clear();
                        }
                        emit(e, ...t) {
                            var i;
                            let s;
                            return (
                                this.__map.has(e) &&
                                    (null === (i = this.__map.get(e)) ||
                                        void 0 === i ||
                                        i.forEach((e) => {
                                            s = e(...t);
                                        })),
                                s
                            );
                        }
                    }
                },
                77009(e, t, i) {
                    "use strict";
                    i.d(t, {
                        vp() {
                            return h;
                        },
                        DG() {
                            return r;
                        },
                        aN() {
                            return u.a;
                        },
                        rO() {
                            return o;
                        },
                        LO() {
                            return p.L;
                        },
                    }),
                        i(52378);
                    var s = i(21305);
                    const o = "JoditEventDefaultNamespace";
                    class r {
                        constructor() {
                            this.__store = new Map();
                        }
                        get(e, t) {
                            if (this.__store.has(t))
                                return this.__store.get(t)[e];
                        }
                        indexOf(e, t, i) {
                            const s = this.get(e, t);
                            if (s)
                                for (let e = 0; s.length > e; e += 1)
                                    if (s[e].originalCallback === i) return e;
                            return !1;
                        }
                        namespaces(e = !1) {
                            const t = (0, s.q)(this.__store.keys());
                            return e ? t.filter((e) => e !== o) : t;
                        }
                        events(e) {
                            const t = this.__store.get(e);
                            return t ? Object.keys(t) : [];
                        }
                        set(e, t, i, s = !1) {
                            let o = this.__store.get(t);
                            o || ((o = {}), this.__store.set(t, o)),
                                void 0 === o[e] && (o[e] = []),
                                s ? o[e].unshift(i) : o[e].push(i);
                        }
                        clear() {
                            this.__store.clear();
                        }
                        clearEvents(e, t) {
                            const i = this.__store.get(e);
                            i &&
                                i[t] &&
                                (delete i[t],
                                Object.keys(i).length ||
                                    this.__store.delete(e));
                        }
                        isEmpty() {
                            return 0 === this.__store.size;
                        }
                    }
                    var n = i(20405),
                        a = i(27177),
                        l = i(67493),
                        c = i(30324),
                        d = i(46861);
                    class h {
                        mute(e) {
                            return (
                                this.__mutedEvents.add(null != e ? e : "*"),
                                this
                            );
                        }
                        isMuted(e) {
                            return (
                                !(!e || !this.__mutedEvents.has(e)) ||
                                this.__mutedEvents.has("*")
                            );
                        }
                        unmute(e) {
                            return (
                                this.__mutedEvents.delete(null != e ? e : "*"),
                                this
                            );
                        }
                        __eachEvent(e, t) {
                            (0, d.C)(e)
                                .map((e) => e.trim())
                                .forEach((e) => {
                                    const i = e.split(".");
                                    t.call(this, i[0], i[1] || o);
                                });
                        }
                        __getStore(e) {
                            if (!e) throw (0, c.vU)("Need subject");
                            if (void 0 === e[this.__key]) {
                                const t = new r();
                                Object.defineProperty(e, this.__key, {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !0,
                                    value: t,
                                });
                            }
                            return e[this.__key];
                        }
                        __removeStoreFromSubject(e) {
                            void 0 !== e[this.__key] &&
                                Object.defineProperty(e, this.__key, {
                                    enumerable: !1,
                                    configurable: !0,
                                    writable: !0,
                                    value: void 0,
                                });
                        }
                        __triggerNativeEvent(e, t) {
                            const i = this.__doc.createEvent("HTMLEvents");
                            (0, n.H)(t)
                                ? i.initEvent(t, !0, !0)
                                : (i.initEvent(t.type, t.bubbles, t.cancelable),
                                  [
                                      "screenX",
                                      "screenY",
                                      "clientX",
                                      "clientY",
                                      "target",
                                      "srcElement",
                                      "currentTarget",
                                      "timeStamp",
                                      "which",
                                      "keyCode",
                                  ].forEach((e) => {
                                      Object.defineProperty(i, e, {
                                          value: t[e],
                                          enumerable: !0,
                                      });
                                  }),
                                  Object.defineProperty(i, "originalEvent", {
                                      value: t,
                                      enumerable: !0,
                                  })),
                                e.dispatchEvent(i);
                        }
                        get current() {
                            return this.currents[this.currents.length - 1];
                        }
                        on(e, t, i, s) {
                            let o, r, d, h;
                            if (
                                ((0, n.H)(e) || (0, n.G)(e)
                                    ? ((o = this), (r = e), (d = t), (h = i))
                                    : ((o = e), (r = t), (d = i), (h = s)),
                                (!(0, n.H)(r) && !(0, n.G)(r)) ||
                                    0 === r.length)
                            )
                                throw (0, c.vU)("Need events names");
                            if (!(0, a.m)(d))
                                throw (0, c.vU)("Need event handler");
                            if ((0, l.k)(o))
                                return (
                                    o.forEach((e) => {
                                        this.on(e, r, d, h);
                                    }),
                                    this
                                );
                            const u = o,
                                p = this.__getStore(u),
                                m = (0, a.m)(u.addEventListener),
                                f = this;
                            let g = function (e, ...t) {
                                if (!f.isMuted(e))
                                    return d && d.call(this, ...t);
                            };
                            return (
                                m &&
                                    (g = function (e) {
                                        if (!f.isMuted(e.type))
                                            return (
                                                f.__prepareEvent(e),
                                                d && !1 === d.call(this, e)
                                                    ? (e.preventDefault(),
                                                      e.stopImmediatePropagation(),
                                                      !1)
                                                    : void 0
                                            );
                                    }),
                                this.__eachEvent(r, (e, t) => {
                                    if (0 === e.length)
                                        throw (0, c.vU)("Need event name");
                                    if (
                                        !1 === p.indexOf(e, t, d) &&
                                        (p.set(
                                            e,
                                            t,
                                            {
                                                event: e,
                                                originalCallback: d,
                                                syntheticCallback: g,
                                            },
                                            null == h ? void 0 : h.top
                                        ),
                                        m)
                                    ) {
                                        const t = !![
                                            "touchstart",
                                            "touchend",
                                            "scroll",
                                            "mousewheel",
                                            "mousemove",
                                            "touchmove",
                                        ].includes(e) && { passive: !0 };
                                        u.addEventListener(e, g, t);
                                    }
                                }),
                                this
                            );
                        }
                        one(e, t, i, s) {
                            let o, r, a, l;
                            (0, n.H)(e) || (0, n.G)(e)
                                ? ((o = this), (r = e), (a = t), (l = i))
                                : ((o = e), (r = t), (a = i), (l = s));
                            const c = (...e) => (this.off(o, r, c), a(...e));
                            return this.on(o, r, c, l), this;
                        }
                        off(e, t, i) {
                            let s, r, c;
                            if (
                                ((0, n.H)(e) || (0, n.G)(e)
                                    ? ((s = this), (r = e), (c = t))
                                    : ((s = e), (r = t), (c = i)),
                                (0, l.k)(s))
                            )
                                return (
                                    s.forEach((e) => {
                                        this.off(e, r, c);
                                    }),
                                    this
                                );
                            const d = s,
                                h = this.__getStore(d);
                            if (
                                (!(0, n.H)(r) && !(0, n.G)(r)) ||
                                0 === r.length
                            )
                                return (
                                    h.namespaces().forEach((e) => {
                                        this.off(d, "." + e);
                                    }),
                                    this.__removeStoreFromSubject(d),
                                    this
                                );
                            const u = (0, a.m)(d.removeEventListener),
                                p = (e) => {
                                    u &&
                                        d.removeEventListener(
                                            e.event,
                                            e.syntheticCallback,
                                            !1
                                        );
                                },
                                m = (e, t) => {
                                    if ("" === e)
                                        return void h.events(t).forEach((e) => {
                                            "" !== e && m(e, t);
                                        });
                                    const i = h.get(e, t);
                                    if (i && i.length)
                                        if ((0, a.m)(c)) {
                                            const s = h.indexOf(e, t, c);
                                            !1 !== s &&
                                                (p(i[s]),
                                                i.splice(s, 1),
                                                i.length ||
                                                    h.clearEvents(t, e));
                                        } else
                                            i.forEach(p),
                                                (i.length = 0),
                                                h.clearEvents(t, e);
                                };
                            return (
                                this.__eachEvent(r, (e, t) => {
                                    t === o
                                        ? h.namespaces().forEach((t) => {
                                              m(e, t);
                                          })
                                        : m(e, t);
                                }),
                                h.isEmpty() && this.__removeStoreFromSubject(d),
                                this
                            );
                        }
                        stopPropagation(e, t) {
                            const i = (0, n.H)(e) ? this : e,
                                s = (0, n.H)(e) ? e : t;
                            if ("string" != typeof s)
                                throw (0, c.vU)("Need event names");
                            const r = this.__getStore(i);
                            this.__eachEvent(s, (e, t) => {
                                const s = r.get(e, t);
                                s && this.__stopped.push(s),
                                    t === o &&
                                        r
                                            .namespaces(!0)
                                            .forEach((t) =>
                                                this.stopPropagation(
                                                    i,
                                                    e + "." + t
                                                )
                                            );
                            });
                        }
                        __removeStop(e) {
                            if (e) {
                                const t = this.__stopped.indexOf(e);
                                -1 !== t && this.__stopped.splice(0, t + 1);
                            }
                        }
                        __isStopped(e) {
                            return (
                                void 0 !== e && -1 !== this.__stopped.indexOf(e)
                            );
                        }
                        fire(e, t, ...i) {
                            let s, r;
                            const l = (0, n.H)(e) ? this : e,
                                d = (0, n.H)(e) ? e : t,
                                h = (0, n.H)(e) ? [t, ...i] : i,
                                u = (0, a.m)(l.dispatchEvent);
                            if (!u && !(0, n.H)(d))
                                throw (0, c.vU)("Need events names");
                            const p = this.__getStore(l);
                            return (
                                !(0, n.H)(d) && u
                                    ? this.__triggerNativeEvent(l, t)
                                    : this.__eachEvent(d, (e, t) => {
                                          if (u)
                                              this.__triggerNativeEvent(l, e);
                                          else {
                                              const i = p.get(e, t);
                                              if (i)
                                                  try {
                                                      [...i].every(
                                                          (t) =>
                                                              !this.__isStopped(
                                                                  i
                                                              ) &&
                                                              (this.currents.push(
                                                                  e
                                                              ),
                                                              (r =
                                                                  t.syntheticCallback.call(
                                                                      l,
                                                                      e,
                                                                      ...h
                                                                  )),
                                                              this.currents.pop(),
                                                              void 0 !== r &&
                                                                  (s = r),
                                                              !0)
                                                      );
                                                  } finally {
                                                      this.__removeStop(i);
                                                  }
                                              t !== o ||
                                                  u ||
                                                  p
                                                      .namespaces()
                                                      .filter((e) => e !== t)
                                                      .forEach((t) => {
                                                          const i =
                                                              this.fire.call(
                                                                  this,
                                                                  l,
                                                                  e + "." + t,
                                                                  ...h
                                                              );
                                                          void 0 !== i &&
                                                              (s = i);
                                                      });
                                          }
                                      }),
                                s
                            );
                        }
                        constructor(e) {
                            (this.__mutedEvents = new Set()),
                                (this.__key = "__JoditEventEmitterNamespaces"),
                                (this.__doc = document),
                                (this.__prepareEvent = (e) => {
                                    e.cancelBubble ||
                                        (e.composed &&
                                            (0, a.m)(e.composedPath) &&
                                            e.composedPath()[0] &&
                                            Object.defineProperty(e, "target", {
                                                value: e.composedPath()[0],
                                                configurable: !0,
                                                enumerable: !0,
                                            }),
                                        e.type.match(/^touch/) &&
                                            e.changedTouches &&
                                            e.changedTouches.length &&
                                            [
                                                "clientX",
                                                "clientY",
                                                "pageX",
                                                "pageY",
                                            ].forEach((t) => {
                                                Object.defineProperty(e, t, {
                                                    value: e.changedTouches[0][
                                                        t
                                                    ],
                                                    configurable: !0,
                                                    enumerable: !0,
                                                });
                                            }),
                                        e.originalEvent ||
                                            (e.originalEvent = e),
                                        "paste" === e.type &&
                                            void 0 === e.clipboardData &&
                                            this.__doc.defaultView
                                                .clipboardData &&
                                            Object.defineProperty(
                                                e,
                                                "clipboardData",
                                                {
                                                    get: () =>
                                                        this.__doc.defaultView
                                                            .clipboardData,
                                                    configurable: !0,
                                                    enumerable: !0,
                                                }
                                            ));
                                }),
                                (this.currents = []),
                                (this.__stopped = []),
                                (this.__isDestructed = !1),
                                e && (this.__doc = e),
                                (this.__key += new Date().getTime());
                        }
                        destruct() {
                            this.__isDestructed &&
                                ((this.__isDestructed = !0),
                                this.off(this),
                                this.__getStore(this).clear(),
                                this.__removeStoreFromSubject(this));
                        }
                    }
                    var u = i(63900),
                        p = i(17004);
                },
                17004(e, t, i) {
                    "use strict";
                    i.d(t, {
                        L() {
                            return c;
                        },
                    });
                    var s = i(67493),
                        o = i(98767),
                        r = i(80721),
                        n = i(12692);
                    const a = Symbol("observable-object");
                    function l(e) {
                        return void 0 !== e[a];
                    }
                    function c(e) {
                        if (l(e)) return e;
                        const t = {},
                            i = {},
                            c = (t, o) =>
                                (0, s.k)(t)
                                    ? (t.map((e) => c(e, o)), e)
                                    : (i[t] || (i[t] = []), i[t].push(o), e),
                            d = (o, ...r) => {
                                if ((0, s.k)(o)) o.map((e) => d(e, ...r));
                                else
                                    try {
                                        !t[o] &&
                                            i[o] &&
                                            ((t[o] = !0),
                                            i[o].forEach((t) =>
                                                t.call(e, ...r)
                                            ));
                                    } finally {
                                        t[o] = !1;
                                    }
                            },
                            h = (t, i = []) => {
                                const s = {};
                                l(t) ||
                                    (Object.defineProperty(t, a, {
                                        enumerable: !1,
                                        value: !0,
                                    }),
                                    Object.keys(t).forEach((a) => {
                                        const l = a,
                                            c = i
                                                .concat(l)
                                                .filter((e) => e.length);
                                        s[l] = t[l];
                                        const u = (0, n.w7)(t, l);
                                        Object.defineProperty(t, l, {
                                            set(t) {
                                                const i = s[l];
                                                if (!(0, o.L)(s[l], t)) {
                                                    d(
                                                        [
                                                            "beforeChange",
                                                            "beforeChange." +
                                                                c.join("."),
                                                        ],
                                                        l,
                                                        t
                                                    ),
                                                        (0, r.P)(t) && h(t, c),
                                                        u && u.set
                                                            ? u.set.call(e, t)
                                                            : (s[l] = t);
                                                    const o = [];
                                                    d(
                                                        [
                                                            "change",
                                                            ...c.reduce(
                                                                (e, t) => (
                                                                    o.push(t),
                                                                    e.push(
                                                                        "change." +
                                                                            o.join(
                                                                                "."
                                                                            )
                                                                    ),
                                                                    e
                                                                ),
                                                                []
                                                            ),
                                                        ],
                                                        c.join("."),
                                                        i,
                                                        (
                                                            null == t
                                                                ? void 0
                                                                : t.valueOf
                                                        )
                                                            ? t.valueOf()
                                                            : t
                                                    );
                                                }
                                            },
                                            get() {
                                                return u && u.get
                                                    ? u.get.call(e)
                                                    : s[l];
                                            },
                                            enumerable: !0,
                                            configurable: !0,
                                        }),
                                            (0, r.P)(s[l]) && h(s[l], c);
                                    }),
                                    Object.defineProperty(e, "on", {
                                        value: c,
                                    }));
                            };
                        return h(e), e;
                    }
                },
                78855(e, t, i) {
                    "use strict";
                    i.d(t, {
                        TB() {
                            return w;
                        },
                        ZO() {
                            return y;
                        },
                        as() {
                            return h;
                        },
                        fe() {
                            return m;
                        },
                        pw() {
                            return f;
                        },
                        qz() {
                            return g;
                        },
                        xl() {
                            return v;
                        },
                    });
                    var s = i(4596),
                        o = i(97039),
                        r = i(77009),
                        n = i(99820),
                        a = i(47938),
                        l = i(52915),
                        c = i(8194),
                        d = i(36257);
                    const h = {};
                    let u = 1;
                    const p = new Set();
                    function m() {
                        function e() {
                            return (
                                (u += 10 * (Math.random() + 1)),
                                Math.round(u).toString(16)
                            );
                        }
                        let t = e();
                        for (; p.has(t); ) t = e();
                        return p.add(t), t;
                    }
                    const f = new s.h(),
                        g = {},
                        v = (e) => {
                            Object.keys(e).forEach((t) => {
                                d.lang[t]
                                    ? Object.assign(d.lang[t], e[t])
                                    : (d.lang[t] = e[t]);
                            });
                        },
                        b = new WeakMap();
                    function y(e, t, i = "div", s = !1) {
                        const r = t ? (0, l.g)(t.prototype) : "jodit-utils",
                            d = b.get(e) || {},
                            h = r + i,
                            u = (0, a.f)(e) ? e : e.j;
                        if (!d[h]) {
                            let t = u.c,
                                a =
                                    (0, n.Z)(e) && e.o.shadowRoot
                                        ? e.o.shadowRoot
                                        : e.od.body;
                            if (s && (0, n.Z)(e) && e.od !== e.ed) {
                                t = e.createInside;
                                const s = "style" === i ? e.ed.head : e.ed.body;
                                a =
                                    (0, n.Z)(e) && e.o.shadowRoot
                                        ? e.o.shadowRoot
                                        : s;
                            }
                            const l = t.element(i, {
                                className: `jodit jodit-${(0, c.G)(
                                    r
                                )}-container jodit-box`,
                            });
                            l.classList.add(
                                "jodit_theme_" + (u.o.theme || "default")
                            ),
                                a.appendChild(l),
                                (d[h] = l),
                                e.hookStatus("beforeDestruct", () => {
                                    o.i.safeRemove(l),
                                        delete d[h],
                                        Object.keys(d).length && b.delete(e);
                                }),
                                b.set(e, d);
                        }
                        return (
                            d[h].classList.remove(
                                "jodit_theme_default",
                                "jodit_theme_dark"
                            ),
                            d[h].classList.add(
                                "jodit_theme_" + (u.o.theme || "default")
                            ),
                            d[h]
                        );
                    }
                    const w = new r.vp();
                },
                3790(e, t, i) {
                    "use strict";
                    i.d(t, {
                        _2() {
                            return o;
                        },
                        C1() {
                            return r.C;
                        },
                        qo() {
                            return n.q;
                        },
                    });
                    var s = i(67493);
                    const o = (e) => ((0, s.k)(e) ? e : [e]);
                    var r = i(46861),
                        n = i(21305);
                },
                46861(e, t, i) {
                    "use strict";
                    function s(e) {
                        return Array.isArray(e) ? e : e.split(/[,\s]+/);
                    }
                    i.d(t, {
                        C() {
                            return s;
                        },
                    });
                },
                21305(e, t, i) {
                    "use strict";
                    i.d(t, {
                        q() {
                            return r;
                        },
                    });
                    var s = i(83080),
                        o = i(17660);
                    const r = (...e) => {
                        var t;
                        return (
                            (0, o.Q)(Array.from)
                                ? Array.from
                                : null !== (t = (0, s.m)("Array.from")) &&
                                  void 0 !== t
                                ? t
                                : Array.from
                        ).apply(Array, e);
                    };
                },
                58152(e, t, i) {
                    "use strict";
                    i.d(t, {
                        g() {
                            return s.g;
                        },
                        i() {
                            return s.i;
                        },
                    });
                    var s = i(21214);
                },
                21214(e, t, i) {
                    "use strict";
                    function s(e, t, ...i) {
                        return t
                            ? window.setTimeout(e, t, ...i)
                            : (e.call(null, ...i), 0);
                    }
                    function o(e) {
                        window.clearTimeout(e);
                    }
                    i.d(t, {
                        g() {
                            return o;
                        },
                        i() {
                            return s;
                        },
                    });
                },
                77574(e, t, i) {
                    "use strict";
                    function s() {
                        let e = !0;
                        try {
                            const t = document.createElement("input");
                            (t.type = "color"),
                                (t.value = "!"),
                                (e = "color" === t.type && "!" !== t.value);
                        } catch (t) {
                            e = !1;
                        }
                        return e;
                    }
                    i.d(t, {
                        EO() {
                            return s;
                        },
                        Zt() {
                            return f;
                        },
                        kJ() {
                            return o.k;
                        },
                        jn() {
                            return r.j;
                        },
                        Z$() {
                            return m;
                        },
                        Xy() {
                            return n.X;
                        },
                        LP() {
                            return n.L;
                        },
                        mf() {
                            return a.m;
                        },
                        FP() {
                            return c;
                        },
                        I4() {
                            return d;
                        },
                        Gu() {
                            return p;
                        },
                        GN() {
                            return v;
                        },
                        Zu() {
                            return b.Z;
                        },
                        A1() {
                            return w;
                        },
                        _V() {
                            return z._;
                        },
                        QC() {
                            return k.Q;
                        },
                        hj() {
                            return C.h;
                        },
                        kE() {
                            return g.k;
                        },
                        PO() {
                            return S.P;
                        },
                        tI() {
                            return x.t;
                        },
                        HD() {
                            return l.H;
                        },
                        GI() {
                            return l.G;
                        },
                        PX() {
                            return E.P;
                        },
                        r1() {
                            return _;
                        },
                        f2() {
                            return y.f;
                        },
                        nj() {
                            return u.n;
                        },
                        FJ() {
                            return j.F;
                        },
                    });
                    var o = i(67493),
                        r = i(92886),
                        n = i(98767),
                        a = i(27177),
                        l = i(20405);
                    const c = (e) =>
                        (0, l.H)(e) &&
                        /<([A-Za-z][A-Za-z0-9]*)\b[^>]*>(.*?)<\/\1>/m.test(
                            e.replace(/[\r\n]/g, "")
                        );
                    function d(e) {
                        return (
                            -1 !==
                                e.search(/<meta.*?Microsoft Excel\s[\d].*?>/) ||
                            -1 !==
                                e.search(/<meta.*?Microsoft Word\s[\d].*?>/) ||
                            (-1 !== e.search(/style="[^"]*mso-/) &&
                                -1 !== e.search(/<font/))
                        );
                    }
                    var h = i(38886),
                        u = i(33713);
                    function p(e) {
                        return !(0, u.n)(e) && (0, a.m)(e.init);
                    }
                    function m(e) {
                        return !(0, u.n)(e) && (0, a.m)(e.destruct);
                    }
                    function f(e) {
                        return !(0, u.n)(e) && h.i.isElement(e.container);
                    }
                    var g = i(88795);
                    function v(e) {
                        return (
                            (0, l.H)(e) && (0, g.k)(e) && (e = parseFloat(e)),
                            "number" == typeof e &&
                                Number.isFinite(e) &&
                                !(e % 1)
                        );
                    }
                    var b = i(99820),
                        y = i(47938);
                    const w = (e) =>
                        (0, l.H)(e) &&
                        23 === e.length &&
                        /^[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}-[a-z0-9]{5}$/i.test(
                            e
                        );
                    var k = i(17660),
                        C = i(11991),
                        S = i(80721),
                        x = i(47696),
                        E = i(49107);
                    function _(e) {
                        return (
                            !!e.length && !/[^0-9A-Za-zа-яА-ЯЁё\w\-_.]/.test(e)
                        );
                    }
                    var j = i(13536),
                        z = i(98768);
                },
                67493(e, t, i) {
                    "use strict";
                    function s(e) {
                        return Array.isArray(e);
                    }
                    i.d(t, {
                        k() {
                            return s;
                        },
                    });
                },
                92886(e, t, i) {
                    "use strict";
                    function s(e) {
                        return "boolean" == typeof e;
                    }
                    i.d(t, {
                        j() {
                            return s;
                        },
                    });
                },
                98767(e, t, i) {
                    "use strict";
                    i.d(t, {
                        L() {
                            return r;
                        },
                        X() {
                            return o;
                        },
                    });
                    var s = i(88012);
                    function o(e, t) {
                        return e === t || (0, s.P)(e) === (0, s.P)(t);
                    }
                    function r(e, t) {
                        return e === t;
                    }
                },
                27177(e, t, i) {
                    "use strict";
                    function s(e) {
                        return "function" == typeof e;
                    }
                    i.d(t, {
                        m() {
                            return s;
                        },
                    });
                },
                99820(e, t, i) {
                    "use strict";
                    i.d(t, {
                        Z() {
                            return o;
                        },
                    });
                    var s = i(27177);
                    function o(e) {
                        return !!(
                            e &&
                            e instanceof Object &&
                            (0, s.m)(e.constructor) &&
                            (("undefined" != typeof Jodit &&
                                e instanceof Jodit) ||
                                e.isJodit)
                        );
                    }
                },
                98768(e, t, i) {
                    "use strict";
                    i.d(t, {
                        _() {
                            return r;
                        },
                    });
                    var s = i(38886),
                        o = i(36257);
                    function r(e) {
                        return (
                            s.i.isNode(e) &&
                            s.i.isTag(e, "span") &&
                            e.hasAttribute("data-" + o.MARKER_CLASS)
                        );
                    }
                },
                17660(e, t, i) {
                    "use strict";
                    function s(e) {
                        return (
                            !!e &&
                            "function" === (typeof e).toLowerCase() &&
                            (e === Function.prototype ||
                                /^\s*function\s*(\b[a-z$_][a-z0-9$_]*\b)*\s*\((|([a-z$_][a-z0-9$_]*)(\s*,[a-z$_][a-z0-9$_]*)*)\)\s*{\s*\[native code]\s*}\s*$/i.test(
                                    e + ""
                                ))
                        );
                    }
                    i.d(t, {
                        Q() {
                            return s;
                        },
                    });
                },
                11991(e, t, i) {
                    "use strict";
                    function s(e) {
                        return "number" == typeof e && !isNaN(e) && isFinite(e);
                    }
                    i.d(t, {
                        h() {
                            return s;
                        },
                    });
                },
                88795(e, t, i) {
                    "use strict";
                    i.d(t, {
                        k() {
                            return o;
                        },
                    });
                    var s = i(20405);
                    function o(e) {
                        if ((0, s.H)(e)) {
                            if (
                                !e.match(
                                    /^([+-])?[0-9]+(\.?)([0-9]+)?(e[0-9]+)?$/
                                )
                            )
                                return !1;
                            e = parseFloat(e);
                        }
                        return "number" == typeof e && !isNaN(e) && isFinite(e);
                    }
                },
                80721(e, t, i) {
                    "use strict";
                    i.d(t, {
                        P() {
                            return o;
                        },
                    });
                    var s = i(13536);
                    function o(e) {
                        return !(
                            !e ||
                            "object" != typeof e ||
                            e.nodeType ||
                            (0, s.F)(e) ||
                            (e.constructor &&
                                !{}.hasOwnProperty.call(
                                    e.constructor.prototype,
                                    "isPrototypeOf"
                                ))
                        );
                    }
                },
                47696(e, t, i) {
                    "use strict";
                    function s(e) {
                        return e && "function" == typeof e.then;
                    }
                    i.d(t, {
                        t() {
                            return s;
                        },
                    });
                },
                20405(e, t, i) {
                    "use strict";
                    i.d(t, {
                        G() {
                            return r;
                        },
                        H() {
                            return o;
                        },
                    });
                    var s = i(67493);
                    function o(e) {
                        return "string" == typeof e;
                    }
                    function r(e) {
                        return (0, s.k)(e) && o(e[0]);
                    }
                },
                49107(e, t, i) {
                    "use strict";
                    function s(e) {
                        if (e.includes(" ")) return !1;
                        if ("undefined" != typeof URL)
                            try {
                                const t = new URL(e);
                                return [
                                    "https:",
                                    "http:",
                                    "ftp:",
                                    "file:",
                                    "rtmp:",
                                ].includes(t.protocol);
                            } catch (e) {
                                return !1;
                            }
                        const t = document.createElement("a");
                        return (t.href = e), !!t.hostname;
                    }
                    i.d(t, {
                        P() {
                            return s;
                        },
                    });
                },
                47938(e, t, i) {
                    "use strict";
                    i.d(t, {
                        f() {
                            return o;
                        },
                    });
                    var s = i(27177);
                    function o(e) {
                        return !!(
                            e &&
                            e instanceof Object &&
                            (0, s.m)(e.constructor) &&
                            e.isView
                        );
                    }
                },
                33713(e, t, i) {
                    "use strict";
                    function s(e) {
                        return null == e;
                    }
                    i.d(t, {
                        n() {
                            return s;
                        },
                    });
                },
                13536(e, t, i) {
                    "use strict";
                    function s(e) {
                        return null != e && e === e.window;
                    }
                    i.d(t, {
                        F() {
                            return s;
                        },
                    });
                },
                6357(e, t, i) {
                    "use strict";
                    i.d(t, {
                        h() {
                            return s;
                        },
                    });
                    const s = (e) => {
                        if ("rgba(0, 0, 0, 0)" === e || "" === e) return !1;
                        if (!e) return "#000000";
                        if ("#" === e.substr(0, 1)) return e;
                        const t =
                            /([\s\n\t\r]*?)rgb\((\d+), (\d+), (\d+)\)/.exec(
                                e
                            ) ||
                            /([\s\n\t\r]*?)rgba\((\d+), (\d+), (\d+), ([\d.]+)\)/.exec(
                                e
                            );
                        if (!t) return "#000000";
                        const i = parseInt(t[2], 10),
                            s = parseInt(t[3], 10);
                        let o = (parseInt(t[4], 10) | (s << 8) | (i << 16))
                            .toString(16)
                            .toUpperCase();
                        for (; 6 > o.length; ) o = "0" + o;
                        return t[1] + "#" + o;
                    };
                },
                35833(e, t, i) {
                    "use strict";
                    i.d(t, {
                        h() {
                            return s.h;
                        },
                    });
                    var s = i(6357);
                },
                74145(e, t, i) {
                    "use strict";
                    i.d(t, {
                        Zs() {
                            return a;
                        },
                        pQ() {
                            return c;
                        },
                        $_() {
                            return d;
                        },
                        hU() {
                            return m;
                        },
                        eV() {
                            return p.e;
                        },
                        nA() {
                            return p.n;
                        },
                        oN() {
                            return u;
                        },
                    });
                    var s = i(38886),
                        o = i(25916),
                        r = i(95049);
                    function n(e) {
                        return e
                            .replace(/mso-[a-z-]+:[\s]*[^;]+;/gi, "")
                            .replace(/mso-[a-z-]+:[\s]*[^";']+$/gi, "")
                            .replace(/border[a-z-]*:[\s]*[^;]+;/gi, "")
                            .replace(/([0-9.]+)(pt|cm)/gi, (e, t, i) => {
                                switch (i.toLowerCase()) {
                                    case "pt":
                                        return (
                                            (1.328 * parseFloat(t)).toFixed(0) +
                                            "px"
                                        );
                                    case "cm":
                                        return (
                                            (
                                                0.02645833 * parseFloat(t)
                                            ).toFixed(0) + "px"
                                        );
                                }
                                return e;
                            });
                    }
                    function a(e) {
                        if (-1 === e.indexOf("<html ")) return e;
                        e = (e = e.substring(
                            e.indexOf("<html "),
                            e.length
                        )).substring(0, e.lastIndexOf("</html>") + 7);
                        const t = document.createElement("iframe");
                        (t.style.display = "none"),
                            document.body.appendChild(t);
                        let i = "",
                            a = [];
                        try {
                            const l =
                                t.contentDocument ||
                                (t.contentWindow
                                    ? t.contentWindow.document
                                    : null);
                            if (l) {
                                l.open(), l.write(e), l.close();
                                try {
                                    for (
                                        let e = 0;
                                        l.styleSheets.length > e;
                                        e += 1
                                    ) {
                                        const t = l.styleSheets[e].cssRules;
                                        for (let e = 0; t.length > e; e += 1)
                                            "" !== t[e].selectorText &&
                                                ((a = (0, o.$$)(
                                                    t[e].selectorText,
                                                    l.body
                                                )),
                                                a.forEach((i) => {
                                                    i.style.cssText = n(
                                                        t[e].style.cssText +
                                                            ";" +
                                                            i.style.cssText
                                                    );
                                                }));
                                    }
                                } catch (e) {}
                                s.i.each(l.body, (e) => {
                                    if (s.i.isElement(e)) {
                                        const t = e,
                                            i = t.getAttribute("style");
                                        i && (t.style.cssText = n(i)),
                                            t.hasAttribute("style") &&
                                                !t.getAttribute("style") &&
                                                t.removeAttribute("style");
                                    }
                                }),
                                    (i = l.firstChild
                                        ? (0, r.f)(l.body.innerHTML)
                                        : "");
                            }
                        } catch (e) {
                        } finally {
                            s.i.safeRemove(t);
                        }
                        return (
                            i && (e = i),
                            (0, r.f)(
                                e
                                    .replace(
                                        /<(\/)?(html|colgroup|col|o:p)[^>]*>/g,
                                        ""
                                    )
                                    .replace(/<!--[^>]*>/g, "")
                            )
                        );
                    }
                    var l = i(21305);
                    function c(e) {
                        -1 !== e.indexOf("<html ") &&
                            (e = (e = e.substring(
                                e.indexOf("<html "),
                                e.length
                            )).substring(0, e.lastIndexOf("</html>") + 7));
                        let t = "";
                        try {
                            const i = document.createElement("div");
                            i.innerHTML = e;
                            const o = [];
                            i.firstChild &&
                                s.i.each(i, (e) => {
                                    if (e)
                                        switch (e.nodeType) {
                                            case Node.ELEMENT_NODE:
                                                switch (e.nodeName) {
                                                    case "STYLE":
                                                    case "LINK":
                                                    case "META":
                                                        o.push(e);
                                                        break;
                                                    case "W:SDT":
                                                    case "W:SDTPR":
                                                    case "FONT":
                                                        s.i.unwrap(e);
                                                        break;
                                                    default:
                                                        (0, l.q)(
                                                            e.attributes
                                                        ).forEach((t) => {
                                                            -1 ===
                                                                [
                                                                    "src",
                                                                    "href",
                                                                    "rel",
                                                                    "content",
                                                                ].indexOf(
                                                                    t.name.toLowerCase()
                                                                ) &&
                                                                e.removeAttribute(
                                                                    t.name
                                                                );
                                                        });
                                                }
                                                break;
                                            case Node.TEXT_NODE:
                                                break;
                                            default:
                                                o.push(e);
                                        }
                                }),
                                s.i.safeRemove.apply(null, o),
                                (t = i.innerHTML);
                        } catch (e) {}
                        return (
                            t && (e = t),
                            (e = e.split(/(\n)/).filter(r.f).join("\n"))
                                .replace(
                                    /<(\/)?(html|colgroup|col|o:p)[^>]*>/g,
                                    ""
                                )
                                .replace(/<!--[^>]*>/g, "")
                        );
                    }
                    function d(e) {
                        const t = document.createElement("div");
                        return (t.textContent = e), t.innerHTML;
                    }
                    var h = i(20405);
                    function u(e, t = document) {
                        const i = t.createElement("div");
                        return (
                            (0, h.H)(e) ? (i.innerHTML = e) : i.appendChild(e),
                            (0, o.$$)(
                                "DIV, P, BR, H1, H2, H3, H4, H5, H6, HR",
                                i
                            ).forEach((e) => {
                                const i = e.parentNode;
                                if (!i) return;
                                const o = e.nextSibling;
                                (s.i.isText(o) &&
                                    /^\s/.test(o.nodeValue || "")) ||
                                    (o &&
                                        i.insertBefore(
                                            t.createTextNode(" "),
                                            o
                                        ));
                            }),
                            (0, r.f)(i.innerText) || ""
                        );
                    }
                    var p = i(84159);
                    function m(e) {
                        return e.replace(/\r\n|\r|\n/g, "<br/>");
                    }
                },
                84159(e, t, i) {
                    "use strict";
                    i.d(t, {
                        e() {
                            return r;
                        },
                        n() {
                            return n;
                        },
                    });
                    var s = i(25916),
                        o = i(38886);
                    function r(e, t) {
                        (o.i.isElement(e) || o.i.isFragment(e)) &&
                            (t.removeOnError &&
                                (n(e),
                                (0, s.$$)("[onerror]", e).forEach((e) =>
                                    n(e, t)
                                )),
                            t.safeJavaScriptLink &&
                                (n(e),
                                (0, s.$$)('a[href^="javascript"]', e).forEach(
                                    (e) => n(e, t)
                                )));
                    }
                    function n(
                        e,
                        { safeJavaScriptLink: t, removeOnError: i } = {
                            safeJavaScriptLink: !0,
                            removeOnError: !0,
                        }
                    ) {
                        if (!o.i.isElement(e)) return !1;
                        let r = !1;
                        i &&
                            e.hasAttribute("onerror") &&
                            ((0, s.attr)(e, "onerror", null), (r = !0));
                        const n = e.getAttribute("href");
                        return (
                            t &&
                                n &&
                                0 === n.trim().indexOf("javascript") &&
                                ((0, s.attr)(
                                    e,
                                    "href",
                                    location.protocol + "//" + n
                                ),
                                (r = !0)),
                            r
                        );
                    }
                },
                47643(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            CamelCaseToKebabCase() {
                                return p.gP;
                            },
                            NUMBER_FIELDS_REG() {
                                return h.DO;
                            },
                            applyStyles() {
                                return d.Zs;
                            },
                            asArray() {
                                return n._2;
                            },
                            camelCase() {
                                return p.eV;
                            },
                            cleanFromWord() {
                                return d.pQ;
                            },
                            clearTimeout() {
                                return a.g;
                            },
                            colorToHex() {
                                return c.h;
                            },
                            fuzzySearchIndex() {
                                return p.Qy;
                            },
                            getContentWidth() {
                                return u.FK;
                            },
                            getScrollParent() {
                                return u.rP;
                            },
                            hasBrowserColorPicker() {
                                return l.EO;
                            },
                            hasContainer() {
                                return l.Zt;
                            },
                            htmlspecialchars() {
                                return d.$_;
                            },
                            i18n() {
                                return p.ag;
                            },
                            innerWidth() {
                                return u.x9;
                            },
                            isArray() {
                                return l.kJ;
                            },
                            isBoolean() {
                                return l.jn;
                            },
                            isDestructable() {
                                return l.Z$;
                            },
                            isEqual() {
                                return l.Xy;
                            },
                            isFastEqual() {
                                return l.LP;
                            },
                            isFunction() {
                                return l.mf;
                            },
                            isHTML() {
                                return l.FP;
                            },
                            isHtmlFromWord() {
                                return l.I4;
                            },
                            isInitable() {
                                return l.Gu;
                            },
                            isInt() {
                                return l.GN;
                            },
                            isJoditObject() {
                                return l.Zu;
                            },
                            isLicense() {
                                return l.A1;
                            },
                            isMarker() {
                                return l._V;
                            },
                            isNativeFunction() {
                                return l.QC;
                            },
                            isNumber() {
                                return l.hj;
                            },
                            isNumeric() {
                                return l.kE;
                            },
                            isPlainObject() {
                                return l.PO;
                            },
                            isPromise() {
                                return l.tI;
                            },
                            isString() {
                                return l.HD;
                            },
                            isStringArray() {
                                return l.GI;
                            },
                            isURL() {
                                return l.PX;
                            },
                            isValidName() {
                                return l.r1;
                            },
                            isViewObject() {
                                return l.f2;
                            },
                            isVoid() {
                                return l.nj;
                            },
                            isWindow() {
                                return l.FJ;
                            },
                            kebabCase() {
                                return p.GL;
                            },
                            nl2br() {
                                return d.hU;
                            },
                            normalizeColor() {
                                return h.ut;
                            },
                            normalizeCssNumericValue() {
                                return h.xI;
                            },
                            normalizeCssValue() {
                                return h.Zh;
                            },
                            normalizeKeyAliases() {
                                return h.T2;
                            },
                            normalizeLicense() {
                                return h.Pd;
                            },
                            normalizeNode() {
                                return h.Tz;
                            },
                            normalizePath() {
                                return h.AH;
                            },
                            normalizeRelativePath() {
                                return h.Jf;
                            },
                            normalizeSize() {
                                return h.aC;
                            },
                            normalizeUrl() {
                                return h.D5;
                            },
                            offset() {
                                return u.cv;
                            },
                            position() {
                                return u.eL;
                            },
                            safeHTML() {
                                return d.eV;
                            },
                            sanitizeHTMLElement() {
                                return d.nA;
                            },
                            setTimeout() {
                                return a.i;
                            },
                            size() {
                                return u.dp;
                            },
                            splitArray() {
                                return n.C1;
                            },
                            sprintf() {
                                return p.gB;
                            },
                            stringify() {
                                return p.Pz;
                            },
                            stripTags() {
                                return d.oN;
                            },
                            toArray() {
                                return n.qo;
                            },
                            trim() {
                                return p.fy;
                            },
                            trimInv() {
                                return p.as;
                            },
                            ucfirst() {
                                return p.Ps;
                            },
                        });
                    var s = i(25916),
                        o = {};
                    for (var r in s)
                        "default" !== r && (o[r] = ((e) => s[e]).bind(0, r));
                    i.d(t, o);
                    var n = i(3790),
                        a = i(58152),
                        l = i(77574),
                        c = i(35833),
                        d = i(74145),
                        h = i(94585),
                        u = i(75543),
                        p = i(65358);
                },
                94585(e, t, i) {
                    "use strict";
                    i.d(t, {
                        DO() {
                            return p.DO;
                        },
                        ut() {
                            return f;
                        },
                        xI() {
                            return p.xI;
                        },
                        Zh() {
                            return p.Zh;
                        },
                        T2() {
                            return r;
                        },
                        Pd() {
                            return n;
                        },
                        Tz() {
                            return a.T;
                        },
                        AH() {
                            return c;
                        },
                        Jf() {
                            return d;
                        },
                        aC() {
                            return h;
                        },
                        D5() {
                            return u;
                        },
                    });
                    var s = i(95049),
                        o = i(36257);
                    function r(e) {
                        const t = {},
                            i = {
                                meta: 1,
                                ctrl: 2,
                                control: 2,
                                alt: 3,
                                shift: 4,
                            };
                        return e
                            .replace(/\+\+/g, "+add")
                            .split(/[\s]*\+[\s]*/)
                            .map((e) => (0, s.f)(e.toLowerCase()))
                            .map((e) => o.KEY_ALIASES[e] || e)
                            .sort((e, t) =>
                                i[e] && !i[t]
                                    ? -1
                                    : !i[e] && i[t]
                                    ? 1
                                    : i[e] && i[t]
                                    ? i[e] - i[t]
                                    : e > t
                                    ? 1
                                    : -1
                            )
                            .filter((e) => !t[e] && "" !== e && (t[e] = !0))
                            .join("+");
                    }
                    const n = (e, t = 8) => {
                        const i = [];
                        for (; e.length; )
                            i.push(e.substr(0, t)), (e = e.substr(t));
                        return (
                            (i[1] = i[1].replace(/./g, "*")),
                            (i[2] = i[2].replace(/./g, "*")),
                            i.join("-")
                        );
                    };
                    var a = i(74555),
                        l = i(65358);
                    const c = (...e) =>
                            e
                                .filter((e) => (0, l.fy)(e).length)
                                .map(
                                    (t, i) => (
                                        (t = t.replace(/([^:])[\\/]+/g, "$1/")),
                                        i && (t = t.replace(/^\//, "")),
                                        i !== e.length - 1 &&
                                            (t = t.replace(/\/$/, "")),
                                        t
                                    )
                                )
                                .join("/"),
                        d = (e) =>
                            e
                                .split("/")
                                .reduce((e, t) => {
                                    switch (t) {
                                        case "":
                                        case ".":
                                            break;
                                        case "..":
                                            e.pop();
                                            break;
                                        default:
                                            e.push(t);
                                    }
                                    return e;
                                }, [])
                                .join("/") + (e.endsWith("/") ? "/" : ""),
                        h = (e) =>
                            /^[0-9]+$/.test("" + e) ? e + "px" : "" + e,
                        u = (...e) =>
                            e
                                .filter((e) => e.length)
                                .map((e) => e.replace(/\/$/, ""))
                                .join("/")
                                .replace(/([^:])[\\/]+/g, "$1/");
                    var p = i(49082),
                        m = i(6357);
                    const f = (e) => {
                        const t = ["#"];
                        let i = (0, m.h)(e);
                        if (!i) return !1;
                        if (
                            ((i = (0, l.fy)(i.toUpperCase())),
                            (i = i.substr(1)),
                            3 === i.length)
                        ) {
                            for (let e = 0; 3 > e; e += 1)
                                t.push(i[e]), t.push(i[e]);
                            return t.join("");
                        }
                        return i.length > 6 && (i = i.substr(0, 6)), "#" + i;
                    };
                },
                49082(e, t, i) {
                    "use strict";
                    i.d(t, {
                        DO() {
                            return a;
                        },
                        Zh() {
                            return c;
                        },
                        xI() {
                            return l;
                        },
                    });
                    var s = i(88795),
                        o = i(8194),
                        r = i(6357),
                        n = i(33713);
                    const a =
                        /^(left|top|bottom|right|width|min|max|height|margin|padding|fontsize|font-size)/i;
                    function l(e, t) {
                        return !(0, n.n)(t) && a.test(e) && (0, s.k)("" + t)
                            ? parseInt("" + t, 10) + "px"
                            : t;
                    }
                    function c(e, t) {
                        if ("font-weight" === (0, o.G)(e)) {
                            switch (("" + t).toLowerCase()) {
                                case "700":
                                case "bold":
                                    return 700;
                                case "400":
                                case "normal":
                                    return 400;
                                case "900":
                                case "heavy":
                                    return 900;
                            }
                            return (0, s.k)(t) ? Number(t) : t;
                        }
                        return (
                            (/color/i.test(e) &&
                                /^rgb/i.test("" + t) &&
                                (0, r.h)("" + t)) ||
                            t
                        );
                    }
                },
                74555(e, t, i) {
                    "use strict";
                    i.d(t, {
                        T() {
                            return r;
                        },
                    });
                    var s = i(36257),
                        o = i(38886);
                    function r(e) {
                        if (e) {
                            if (
                                o.i.isText(e) &&
                                null != e.nodeValue &&
                                e.parentNode
                            )
                                for (; o.i.isText(e.nextSibling); )
                                    null != e.nextSibling.nodeValue &&
                                        (e.nodeValue +=
                                            e.nextSibling.nodeValue),
                                        (e.nodeValue = e.nodeValue.replace(
                                            (0, s.INVISIBLE_SPACE_REG_EXP)(),
                                            ""
                                        )),
                                        o.i.safeRemove(e.nextSibling);
                            else r(e.firstChild);
                            r(e.nextSibling);
                        }
                    }
                },
                75543(e, t, i) {
                    "use strict";
                    i.d(t, {
                        FK() {
                            return s;
                        },
                        rP() {
                            return n;
                        },
                        x9() {
                            return a;
                        },
                        cv() {
                            return l;
                        },
                        eL() {
                            return d;
                        },
                        dp() {
                            return h.d;
                        },
                    });
                    const s = (e, t) => {
                        const i = (e) => parseInt(e, 10),
                            s = t.getComputedStyle(e);
                        return (
                            e.offsetWidth -
                            i(s.getPropertyValue("padding-left") || "0") -
                            i(s.getPropertyValue("padding-right") || "0")
                        );
                    };
                    var o = i(25916),
                        r = i(38886);
                    function n(e) {
                        if (!e) return null;
                        const t = r.i.isHTMLElement(e),
                            i = t && (0, o.css)(e, "overflowY");
                        return t &&
                            "visible" !== i &&
                            "hidden" !== i &&
                            e.scrollHeight >= e.clientHeight
                            ? e
                            : n(e.parentNode) ||
                                  document.scrollingElement ||
                                  document.body;
                    }
                    const a = (e, t) => {
                            const i = t.getComputedStyle(e);
                            let s = e.clientWidth;
                            return (
                                (s -=
                                    parseFloat(i.paddingLeft || "0") +
                                    parseFloat(i.paddingRight || "0")),
                                s
                            );
                        },
                        l = (e, t, i, s = !1) => {
                            let o;
                            try {
                                o = e.getBoundingClientRect();
                            } catch (e) {
                                o = {
                                    top: 0,
                                    bottom: 0,
                                    left: 0,
                                    right: 0,
                                    width: 0,
                                    height: 0,
                                };
                            }
                            const r = i.body,
                                n = i.documentElement || {
                                    clientTop: 0,
                                    clientLeft: 0,
                                    scrollTop: 0,
                                    scrollLeft: 0,
                                },
                                a = i.defaultView || i.parentWindow,
                                c = a.pageYOffset || n.scrollTop || r.scrollTop,
                                d =
                                    a.pageXOffset ||
                                    n.scrollLeft ||
                                    r.scrollLeft,
                                h = n.clientTop || r.clientTop || 0,
                                u = n.clientLeft || r.clientLeft || 0;
                            let p, m;
                            const f = t.iframe;
                            if (!s && t && t.options && t.o.iframe && f) {
                                const { top: e, left: i } = l(f, t, t.od, !0);
                                (p = o.top + e), (m = o.left + i);
                            } else (p = o.top + c - h), (m = o.left + d - u);
                            return {
                                top: Math.round(p),
                                left: Math.round(m),
                                width: o.width,
                                height: o.height,
                            };
                        };
                    var c = i(99820);
                    function d(e, t, i = !1) {
                        const s = e.getBoundingClientRect();
                        let o = s.left,
                            r = s.top;
                        if (
                            (0, c.Z)(t) &&
                            t.iframe &&
                            t.ed.body.contains(e) &&
                            !i
                        ) {
                            const { left: e, top: i } = d(t.iframe, t, !0);
                            (o += e), (r += i);
                        }
                        return {
                            left: Math.round(o),
                            top: Math.round(r),
                            width: Math.round(e.offsetWidth),
                            height: Math.round(e.offsetHeight),
                        };
                    }
                    var h = i(55490);
                },
                55490(e, t, i) {
                    "use strict";
                    i.d(t, {
                        d() {
                            return o;
                        },
                    });
                    var s = i(77574);
                    function o(e) {
                        return (0, s.HD)(e) || (0, s.kJ)(e)
                            ? e.length
                            : (0, s.PO)(e)
                            ? Object.keys(e).length
                            : 0;
                    }
                },
                85140(e, t, i) {
                    "use strict";
                    i.d(t, {
                        e() {
                            return s;
                        },
                    });
                    const s = (e) =>
                        e.replace(/([-_])(.)/g, (e, t, i) => i.toUpperCase());
                },
                27147(e, t, i) {
                    "use strict";
                    i.d(t, {
                        Q() {
                            return o;
                        },
                    });
                    var s = i(36257);
                    function o(e, t, i = 0, o = 1) {
                        let r = 0,
                            n = 0,
                            a = -1,
                            l = 0,
                            c = 0;
                        for (n = i; e.length > r && t.length > n; )
                            e[r].toLowerCase() === t[n].toLowerCase()
                                ? (r++, l++, (c = 0), -1 === a && (a = n))
                                : r > 0 &&
                                  (o > c || t[n] === s.INVISIBLE_SPACE
                                      ? (c++, l++)
                                      : ((r = 0),
                                        (a = -1),
                                        (l = 0),
                                        (c = 0),
                                        n--)),
                                n++;
                        return r === e.length ? [a, l] : [-1, 0];
                    }
                },
                65358(e, t, i) {
                    "use strict";
                    i.d(t, {
                        gP() {
                            return u.g;
                        },
                        eV() {
                            return s.e;
                        },
                        Qy() {
                            return o.Q;
                        },
                        ag() {
                            return h;
                        },
                        GL() {
                            return u.G;
                        },
                        gB() {
                            return d;
                        },
                        Pz() {
                            return p.P;
                        },
                        fy() {
                            return m.f;
                        },
                        as() {
                            return m.a;
                        },
                        Ps() {
                            return l.P;
                        },
                    });
                    var s = i(85140),
                        o = i(27147),
                        r = i(43854),
                        n = i(25916),
                        a = i(20405),
                        l = i(5990),
                        c = i(36257);
                    const d = (e, t) => {
                        if (!t || !t.length) return e;
                        const i = /%([sd])/g;
                        let s = i.exec(e),
                            o = e,
                            r = 0;
                        for (; s && void 0 !== t[r]; )
                            (o = o.replace(s[0], "" + t[r])),
                                (r += 1),
                                (s = i.exec(e));
                        return o;
                    };
                    function h(e, t, i) {
                        if (!(0, a.H)(e))
                            throw (0, n.error)(
                                "i18n: Need string in first argument"
                            );
                        if (!e.length) return e;
                        const s = !!(null == i ? void 0 : i.debugLanguage);
                        let o = {};
                        const h = (e) => (t && t.length ? d(e, t) : e),
                            u = (0, n.defaultLanguage)(
                                r.D.defaultOptions.language,
                                r.D.defaultOptions.language
                            ),
                            p = (0, n.defaultLanguage)(
                                null == i ? void 0 : i.language,
                                u
                            ),
                            m = (t) => {
                                if (!t) return;
                                if ((0, a.H)(t[e])) return h(t[e]);
                                const i = e.toLowerCase();
                                if ((0, a.H)(t[i])) return h(t[i]);
                                const s = (0, l.P)(e);
                                return (0, a.H)(t[s]) ? h(t[s]) : void 0;
                            };
                        void 0 !== c.lang[p]
                            ? (o = c.lang[p])
                            : s ||
                              (o =
                                  void 0 !== c.lang[u] ? c.lang[u] : c.lang.en);
                        const f = null == i ? void 0 : i.i18n;
                        if (f && f[p]) {
                            const e = m(f[p]);
                            if (e) return e;
                        }
                        return (
                            m(o) ||
                            (!s &&
                            c.lang.en &&
                            (0, a.H)(c.lang.en[e]) &&
                            c.lang.en[e]
                                ? h(c.lang.en[e])
                                : s
                                ? "{" + e + "}"
                                : h(e))
                        );
                    }
                    var u = i(8194),
                        p = i(88012),
                        m = i(95049);
                },
                8194(e, t, i) {
                    "use strict";
                    i.d(t, {
                        G() {
                            return s;
                        },
                        g() {
                            return o;
                        },
                    });
                    const s = (e) =>
                            e
                                .replace(/([A-Z])([A-Z])([a-z])/g, "$1-$2$3")
                                .replace(/([a-z])([A-Z])/g, "$1-$2")
                                .replace(/[\s_]+/g, "-")
                                .toLowerCase(),
                        o = (e) =>
                            e
                                .replace(/([A-Z])([A-Z])([a-z])/g, "$1-$2$3")
                                .replace(/([a-z])([A-Z])/g, "$1-$2")
                                .toLowerCase();
                },
                88012(e, t, i) {
                    "use strict";
                    function s(e, t = {}) {
                        if ("object" != typeof e) return e + "";
                        const i = new Set(t.excludeKeys),
                            s = new WeakMap();
                        return JSON.stringify(
                            e,
                            (e, t) => {
                                if (!i.has(e)) {
                                    if ("object" == typeof t && null != t) {
                                        if (s.get(t)) return "[refObject]";
                                        s.set(t, !0);
                                    }
                                    return t;
                                }
                            },
                            t.prettify
                        );
                    }
                    i.d(t, {
                        P() {
                            return s;
                        },
                    });
                },
                95049(e, t, i) {
                    "use strict";
                    i.d(t, {
                        a() {
                            return r;
                        },
                        f() {
                            return o;
                        },
                    });
                    var s = i(36257);
                    function o(e) {
                        return e
                            .replace((0, s.SPACE_REG_EXP_END)(), "")
                            .replace((0, s.SPACE_REG_EXP_START)(), "");
                    }
                    function r(e) {
                        return e
                            .replace((0, s.INVISIBLE_SPACE_REG_EXP_END)(), "")
                            .replace(
                                (0, s.INVISIBLE_SPACE_REG_EXP_START)(),
                                ""
                            );
                    }
                },
                5990(e, t, i) {
                    "use strict";
                    function s(e) {
                        return e.length ? e[0].toUpperCase() + e.substr(1) : "";
                    }
                    i.d(t, {
                        P() {
                            return s;
                        },
                    });
                },
                99705(e, t, i) {
                    "use strict";
                    i.d(t, {
                        E3() {
                            return a;
                        },
                        wL() {
                            return n;
                        },
                        zC() {
                            return r;
                        },
                    });
                    var s = i(97039),
                        o = i(47077);
                    function r(e, t) {
                        t && "normal" !== t
                            ? "center" !== t
                                ? ((0, o.i)(e, "float", t), (0, o.b)(e))
                                : (0, o.i)(e, {
                                      float: "",
                                      display: "block",
                                      marginLeft: "auto",
                                      marginRight: "auto",
                                  })
                            : ((0, o.i)(e, "float") &&
                                  -1 !==
                                      ["right", "left"].indexOf(
                                          (
                                              "" + (0, o.i)(e, "float")
                                          ).toLowerCase()
                                      ) &&
                                  (0, o.i)(e, "float", ""),
                              (0, o.b)(e));
                    }
                    function n(e) {
                        s.i.each(e, (e) => {
                            s.i.isHTMLElement(e) &&
                                e.style.textAlign &&
                                ((e.style.textAlign = ""),
                                e.style.cssText.trim().length ||
                                    e.removeAttribute("style"));
                        });
                    }
                    function a(e, t) {
                        if (s.i.isNode(t) && s.i.isElement(t))
                            switch ((n(t), e.toLowerCase())) {
                                case "justifyfull":
                                    t.style.textAlign = "justify";
                                    break;
                                case "justifyright":
                                    t.style.textAlign = "right";
                                    break;
                                case "justifyleft":
                                    t.style.textAlign = "left";
                                    break;
                                case "justifycenter":
                                    t.style.textAlign = "center";
                            }
                    }
                },
                40069(e, t, i) {
                    "use strict";
                    i.d(t, {
                        GX() {
                            return u;
                        },
                        JL() {
                            return c;
                        },
                        Nf() {
                            return d;
                        },
                        uR() {
                            return l;
                        },
                        wY() {
                            return h;
                        },
                    });
                    var s = i(7458),
                        o = i(27177),
                        r = i(20405);
                    const n = new Map(),
                        a = (e) => async (t, i) => {
                            if (n.has(i)) return n.get(i);
                            const s = e(t, i);
                            return n.set(i, s), s;
                        },
                        l = (e, t, i) => {
                            const r = e.c.element("script");
                            return (
                                (r.type = "text/javascript"),
                                (r.async = !0),
                                (0, o.m)(i) &&
                                    !e.isInDestruct &&
                                    e.e.on(r, "load", i),
                                r.src || (r.src = (0, s.W)(t)),
                                e.od.body.appendChild(r),
                                { callback: i, element: r }
                            );
                        },
                        c = a(
                            (e, t) =>
                                new Promise((i, s) => {
                                    const { element: o } = l(e, t, i);
                                    !e.isInDestruct && e.e.on(o, "error", s);
                                })
                        ),
                        d = a(
                            (e, t) =>
                                new Promise((i, o) => {
                                    const r = e.c.element("link");
                                    (r.rel = "stylesheet"),
                                        (r.media = "all"),
                                        (r.crossOrigin = "anonymous"),
                                        !e.isInDestruct &&
                                            e.e
                                                .on(r, "load", () => i(r))
                                                .on(r, "error", o),
                                        (r.href = (0, s.W)(t)),
                                        e.o.shadowRoot
                                            ? e.o.shadowRoot.appendChild(r)
                                            : e.od.body.appendChild(r);
                                })
                        ),
                        h = (e, t, i = 0) =>
                            (0, r.H)(t[i])
                                ? c(e, t[i]).then(() => h(e, t, i + 1))
                                : Promise.resolve(),
                        u = (e, t, i = 0) =>
                            (0, r.H)(t[i])
                                ? d(e, t[i]).then(() => u(e, t, i + 1))
                                : Promise.resolve();
                },
                10173(e, t, i) {},
                43229(e, t, i) {
                    "use strict";
                    i.d(t, {
                        X() {
                            return s;
                        },
                    });
                    const s = (e) => {
                        const t = navigator.userAgent.toLowerCase(),
                            i =
                                /(firefox)[\s/]([\w.]+)/.exec(t) ||
                                /(chrome)[\s/]([\w.]+)/.exec(t) ||
                                /(webkit)[\s/]([\w.]+)/.exec(t) ||
                                /(opera)(?:.*version)[\s/]([\w.]+)/.exec(t) ||
                                /(msie)[\s]([\w.]+)/.exec(t) ||
                                /(trident)\/([\w.]+)/.exec(t) ||
                                0 > t.indexOf("compatible") ||
                                [];
                        return "version" === e
                            ? i[2]
                            : "webkit" === e
                            ? "chrome" === i[1] || "webkit" === i[1]
                            : "ff" === e
                            ? "firefox" === i[1]
                            : "msie" === e
                            ? "trident" === i[1] || "msie" === i[1]
                            : i[1] === e;
                    };
                },
                86653(e, t, i) {
                    "use strict";
                    i.d(t, {
                        X() {
                            return o;
                        },
                    });
                    var s = i(80721);
                    const o = (e, t) => {
                        const i = [],
                            r = encodeURIComponent;
                        for (const n in e)
                            if (Object.prototype.hasOwnProperty.call(e, n)) {
                                const a = t ? t + "[" + n + "]" : n,
                                    l = e[n];
                                i.push(
                                    (0, s.P)(l) ? o(l, a) : r(a) + "=" + r(l)
                                );
                            }
                        return i.join("&");
                    };
                },
                7458(e, t, i) {
                    "use strict";
                    i.d(t, {
                        W() {
                            return s;
                        },
                    });
                    const s = (e) => (
                        "file:" === window.location.protocol &&
                            /^\/\//.test(e) &&
                            (e = "https:" + e),
                        e
                    );
                },
                65892(e, t, i) {
                    "use strict";
                    i.d(t, {
                        I() {
                            return d;
                        },
                        t() {
                            return h;
                        },
                    });
                    var s = i(40042),
                        o = i(67493),
                        r = i(80721),
                        n = i(20405),
                        a = i(33713),
                        l = i(43854),
                        c = i(69403);
                    function d(e, t, i = 0) {
                        if (Object.getPrototypeOf(e) !== Object.prototype)
                            return e;
                        const c = l.D.defaultOptions;
                        if ((0, n.H)(e.preset)) {
                            if (void 0 !== c.presets[e.preset]) {
                                const t = c.presets[e.preset];
                                Object.keys(t).forEach((i) => {
                                    (0, a.n)(e[i]) && (e[i] = t[i]);
                                });
                            }
                            delete e.preset;
                        }
                        const h = {};
                        return (
                            Object.keys(e).forEach((n) => {
                                const a = e[n],
                                    l = t ? t[n] : null;
                                h[n] =
                                    (0, r.P)(a) && (0, r.P)(l) && !(0, s.J8)(a)
                                        ? d(a, l, i + 1)
                                        : 0 !== i &&
                                          (0, o.k)(a) &&
                                          !(0, s.J8)(a) &&
                                          (0, o.k)(l)
                                        ? [...a, ...l.slice(a.length)]
                                        : a;
                            }),
                            Object.setPrototypeOf(h, t),
                            h
                        );
                    }
                    function h(e) {
                        return (0, c.XP)(e, !1).reduce(
                            (t, i) => ((t[i] = e[i]), t),
                            {}
                        );
                    }
                },
                84579(e, t, i) {
                    "use strict";
                    i.d(t, {
                        U() {
                            return r;
                        },
                    });
                    var s = i(49107),
                        o = i(32423);
                    const r = (e, t = 400, i = 345) => {
                        if (!(0, s.P)(e)) return e;
                        const r = document.createElement("a"),
                            n =
                                /(?:http?s?:\/\/)?(?:www\.)?(?:vimeo\.com)\/?(.+)/g;
                        (r.href = e), t || (t = 400), i || (i = 345);
                        const a = r.protocol || "";
                        switch (r.hostname) {
                            case "www.vimeo.com":
                            case "vimeo.com":
                                return n.test(e)
                                    ? e.replace(
                                          n,
                                          '<iframe width="' +
                                              t +
                                              '" height="' +
                                              i +
                                              '" src="' +
                                              a +
                                              '//player.vimeo.com/video/$1" frameborder="0" allowfullscreen></iframe>'
                                      )
                                    : e;
                            case "youtube.com":
                            case "www.youtube.com":
                            case "youtu.be":
                            case "www.youtu.be": {
                                const s = r.search
                                    ? (0, o.m)(r.search)
                                    : { v: r.pathname.substr(1) };
                                return s.v
                                    ? '<iframe width="' +
                                          t +
                                          '" height="' +
                                          i +
                                          '" src="' +
                                          a +
                                          "//www.youtube.com/embed/" +
                                          s.v +
                                          '" frameborder="0" allowfullscreen></iframe>'
                                    : e;
                            }
                        }
                        return e;
                    };
                },
                47077(e, t, i) {
                    "use strict";
                    i.d(t, {
                        b() {
                            return c;
                        },
                        i() {
                            return l;
                        },
                    });
                    var s = i(80721),
                        o = i(92886),
                        r = i(49082),
                        n = i(85140),
                        a = i(8194);
                    function l(e, t, i, c = !1) {
                        if (
                            ((0, o.j)(i) && ((c = i), (i = void 0)),
                            (0, s.P)(t) || void 0 !== i)
                        ) {
                            const o = (e, t, i) => {
                                void 0 === (i = (0, r.xI)(t, i)) ||
                                    (null != i &&
                                        l(e, t, !0) === (0, r.Zh)(t, i)) ||
                                    (e.style[t] = i);
                            };
                            if ((0, s.P)(t)) {
                                const i = Object.keys(t);
                                for (let s = 0; i.length > s; s += 1)
                                    o(e, (0, n.e)(i[s]), t[i[s]]);
                            } else o(e, (0, n.e)(t), i);
                            return "";
                        }
                        const d = (0, a.G)(t),
                            h = e.ownerDocument || document,
                            u = !!h && (h.defaultView || h.parentWindow),
                            p = e.style[t];
                        let m = "";
                        return (
                            void 0 !== p && "" !== p
                                ? (m = p)
                                : u &&
                                  !c &&
                                  (m = u
                                      .getComputedStyle(e)
                                      .getPropertyValue(d)),
                            r.DO.test(t) &&
                                /^[-+]?[0-9.]+px$/.test("" + m) &&
                                (m = parseInt("" + m, 10)),
                            (0, r.Zh)(t, m)
                        );
                    }
                    const c = (e) => {
                        "block" === l(e, "display") && l(e, "display", "");
                        const { style: t } = e;
                        "auto" === t.marginLeft &&
                            "auto" === t.marginRight &&
                            ((t.marginLeft = ""), (t.marginRight = ""));
                    };
                },
                47075(e, t, i) {
                    "use strict";
                    i.d(t, {
                        k() {
                            return s;
                        },
                    });
                    const s = (e) => {
                        if (
                            "undefined" != typeof navigator &&
                            -1 !== navigator.userAgent.indexOf("Mac OS X")
                        ) {
                            if (e.metaKey && !e.altKey) return !0;
                        } else if (e.ctrlKey && !e.altKey) return !0;
                        return !1;
                    };
                },
                69003(e, t, i) {
                    "use strict";
                    i.d(t, {
                        q() {
                            return r;
                        },
                    });
                    var s = i(47938);
                    const o = new WeakMap(),
                        r = (e, t, i) => {
                            let r = o.get(e);
                            if (!r) {
                                (r = {}), o.set(e, r);
                                let t = null;
                                (0, s.f)(e.j) && (t = e.j.e),
                                    (0, s.f)(e) && (t = e.e),
                                    t &&
                                        t.on("beforeDestruct", () => {
                                            o.delete(e);
                                        });
                            }
                            return void 0 === i ? r[t] : ((r[t] = i), i);
                        };
                },
                37056(e, t, i) {
                    "use strict";
                    i.d(t, {
                        X() {
                            return o;
                        },
                    });
                    var s = i(20405);
                    const o = (e, t = "en") =>
                        "auto" !== e && (0, s.H)(e)
                            ? e
                            : document.documentElement &&
                              document.documentElement.lang
                            ? document.documentElement.lang
                            : navigator.language
                            ? navigator.language.substring(0, 2)
                            : t;
                },
                30324(e, t, i) {
                    "use strict";
                    i.d(t, {
                        _L() {
                            return s;
                        },
                        hY() {
                            return o;
                        },
                        tW() {
                            return r;
                        },
                        JG() {
                            return c;
                        },
                        ZI() {
                            return a;
                        },
                        vU() {
                            return n;
                        },
                        PQ() {
                            return d;
                        },
                        YM() {
                            return l;
                        },
                    });
                    class s extends Error {
                        constructor(e) {
                            super(e), Object.setPrototypeOf(this, s.prototype);
                        }
                    }
                    class o extends Error {
                        constructor(e) {
                            super(e), Object.setPrototypeOf(this, o.prototype);
                        }
                    }
                    class r extends TypeError {
                        constructor(e) {
                            super(e), Object.setPrototypeOf(this, r.prototype);
                        }
                    }
                    function n(e) {
                        return new TypeError(e);
                    }
                    function a(e) {
                        return new o(e);
                    }
                    function l(e) {
                        return new r(e);
                    }
                    function c(e) {
                        return new s(e);
                    }
                    function d(e) {
                        return e instanceof s;
                    }
                },
                40042(e, t, i) {
                    "use strict";
                    i.d(t, {
                        J8() {
                            return o;
                        },
                        V8() {
                            return n;
                        },
                        XT() {
                            return r;
                        },
                    });
                    var s = i(88012);
                    function o(e) {
                        return e && e.isAtom;
                    }
                    function r(e) {
                        return (
                            Object.defineProperty(e, "isAtom", {
                                enumerable: !1,
                                value: !0,
                                configurable: !1,
                            }),
                            e
                        );
                    }
                    function n(e) {
                        return JSON.parse((0, s.P)(e));
                    }
                },
                52915(e, t, i) {
                    "use strict";
                    i.d(t, {
                        g() {
                            return r;
                        },
                        k() {
                            return o;
                        },
                    });
                    var s = i(27177);
                    const o = new Map(),
                        r = (e) => {
                            var t;
                            if ((0, s.m)(e.className)) return e.className();
                            const i =
                                (null === (t = e.constructor) || void 0 === t
                                    ? void 0
                                    : t.originalConstructor) || e.constructor;
                            if (o.has(i)) return o.get(i);
                            if (i.name) return i.name;
                            const r = RegExp(/^\s*function\s*(\S*)\s*\(/),
                                n = ("" + i).match(r);
                            return n ? n[1] : "";
                        };
                },
                54693(e, t, i) {
                    "use strict";
                    i.d(t, {
                        U() {
                            return r;
                        },
                    });
                    var s = i(20405),
                        o = i(33713);
                    function r(e, t) {
                        if (!(0, s.H)(e) || !e.length) return null;
                        const i = e.split(".");
                        let r = t;
                        try {
                            for (const e of i) {
                                if ((0, o.n)(r[e])) return null;
                                r = r[e];
                            }
                        } catch (e) {
                            return null;
                        }
                        return (0, o.n)(r) ? null : r;
                    }
                },
                83833(e, t, i) {
                    "use strict";
                    i.d(t, {
                        w() {
                            return s;
                        },
                    });
                    const s = (e) => {
                        if (/^[0-9.]+$/.test("" + e)) return parseFloat(e);
                        const t = e.substr(-2, 2).toUpperCase(),
                            i = ["KB", "MB", "GB", "TB"],
                            s = parseFloat(e.substr(0, e.length - 2));
                        return -1 !== i.indexOf(t)
                            ? s * Math.pow(1024, i.indexOf(t) + 1)
                            : parseInt(e, 10);
                    };
                },
                25916(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            $$() {
                                return j.$$;
                            },
                            AbortError() {
                                return v._L;
                            },
                            ConfigFlatten() {
                                return h.t;
                            },
                            ConfigProto() {
                                return h.I;
                            },
                            ConnectionError() {
                                return v.hY;
                            },
                            LimitedStack() {
                                return T.l;
                            },
                            OptionsError() {
                                return v.tW;
                            },
                            abort() {
                                return v.JG;
                            },
                            alignElement() {
                                return s.E3;
                            },
                            appendScript() {
                                return o.uR;
                            },
                            appendScriptAsync() {
                                return o.JL;
                            },
                            appendStyleAsync() {
                                return o.Nf;
                            },
                            attr() {
                                return I.Lj;
                            },
                            browser() {
                                return l.X;
                            },
                            buildQuery() {
                                return c.X;
                            },
                            call() {
                                return I.RE;
                            },
                            callPromise() {
                                return I.C6;
                            },
                            clearAlign() {
                                return s.wL;
                            },
                            clearCenterAlign() {
                                return p.b;
                            },
                            cns() {
                                return C.H;
                            },
                            completeUrl() {
                                return d.W;
                            },
                            connection() {
                                return v.ZI;
                            },
                            convertMediaUrlToVideoEmbed() {
                                return u.U;
                            },
                            css() {
                                return p.i;
                            },
                            cssPath() {
                                return j.iN;
                            },
                            ctrlKey() {
                                return m.k;
                            },
                            dataBind() {
                                return f.q;
                            },
                            defaultLanguage() {
                                return g.X;
                            },
                            error() {
                                return v.vU;
                            },
                            fastClone() {
                                return b.V8;
                            },
                            get() {
                                return y.U;
                            },
                            getClassName() {
                                return w.g;
                            },
                            getDataTransfer() {
                                return I.qu;
                            },
                            getXPathByElement() {
                                return j.BR;
                            },
                            hAlignElement() {
                                return s.zC;
                            },
                            humanSizeToBytes() {
                                return k.w;
                            },
                            inView() {
                                return _.j;
                            },
                            isAbort() {
                                return v.PQ;
                            },
                            isAtom() {
                                return b.J8;
                            },
                            keepNames() {
                                return w.k;
                            },
                            keys() {
                                return I.XP;
                            },
                            loadImage() {
                                return I.po;
                            },
                            loadNext() {
                                return o.wY;
                            },
                            loadNextStyle() {
                                return o.GX;
                            },
                            markAsAtomic() {
                                return b.XT;
                            },
                            markDeprecated() {
                                return C.Q;
                            },
                            markOwner() {
                                return I.MN;
                            },
                            memorizeExec() {
                                return I.u3;
                            },
                            options() {
                                return v.YM;
                            },
                            parseQuery() {
                                return S.m;
                            },
                            previewBox() {
                                return x.$;
                            },
                            refs() {
                                return j.xL;
                            },
                            reset() {
                                return E.m;
                            },
                            resolveElement() {
                                return j.W2;
                            },
                            scrollIntoViewIfNeeded() {
                                return _.n;
                            },
                            set() {
                                return z.t;
                            },
                            val() {
                                return L.P;
                            },
                        });
                    var s = i(99705),
                        o = i(40069),
                        r = i(52378),
                        n = {};
                    for (var a in r)
                        0 >
                            [
                                "default",
                                "alignElement",
                                "clearAlign",
                                "hAlignElement",
                                "appendScript",
                                "appendScriptAsync",
                                "appendStyleAsync",
                                "loadNext",
                                "loadNextStyle",
                            ].indexOf(a) && (n[a] = ((e) => r[e]).bind(0, a));
                    i.d(t, n);
                    var l = i(43229),
                        c = i(86653),
                        d = i(7458),
                        h = i(65892),
                        u = i(84579),
                        p = i(47077),
                        m = i(47075),
                        f = i(69003),
                        g = i(37056),
                        v = i(30324),
                        b = i(40042),
                        y = i(54693),
                        w = i(52915),
                        k = i(83833),
                        C = i(31992),
                        S = i(32423),
                        x = i(57652),
                        E = i(83080),
                        _ = i(57999),
                        j = i(85641),
                        z = i(8449),
                        T = i(58968),
                        I = i(69403),
                        L = i(25250);
                },
                31992(e, t, i) {
                    "use strict";
                    i.d(t, {
                        H() {
                            return s;
                        },
                        Q() {
                            return o;
                        },
                    });
                    const s = console;
                    function o(e, t = [""], i = null) {
                        return (...o) => (
                            s.warn(
                                `Method "${t[0]}" deprecated.` +
                                    (t[1] ? ` Use "${t[1]}" instead` : "")
                            ),
                            e.call(i, ...o)
                        );
                    }
                },
                32423(e, t, i) {
                    "use strict";
                    i.d(t, {
                        m() {
                            return s;
                        },
                    });
                    const s = (e) => {
                        const t = {},
                            i = e.substring(1).split("&");
                        for (let e = 0; i.length > e; e += 1) {
                            const s = i[e].split("=");
                            t[decodeURIComponent(s[0])] = decodeURIComponent(
                                s[1] || ""
                            );
                        }
                        return t;
                    };
                },
                57652(e, t, i) {
                    "use strict";
                    i.d(t, {
                        $() {
                            return l;
                        },
                    });
                    var s = i(20405),
                        o = i(38886),
                        r = i(47077),
                        n = i(69403),
                        a = i(85641);
                    function l(e, t, i = "px", l = null) {
                        const c = ((e, t) => {
                            const i = [];
                            try {
                                (0, a.$$)("img", e.editor).forEach((s) => {
                                    const r = [
                                        (0, n.Lj)(s, "width"),
                                        (0, n.Lj)(s, "height"),
                                        s.src,
                                    ];
                                    (0, n.Lj)(s, {
                                        width: s.offsetWidth + t,
                                        height: s.offsetHeight + t,
                                    });
                                    const a = e.createInside.a();
                                    e.ed.body.appendChild(a),
                                        (a.href = s.src),
                                        (s.src = a.href),
                                        o.i.safeRemove(a),
                                        i.push(() => {
                                            var e;
                                            (s.src =
                                                null !== (e = r[2]) &&
                                                void 0 !== e
                                                    ? e
                                                    : ""),
                                                (0, n.Lj)(s, {
                                                    width: r[0] || null,
                                                    height: r[1] || null,
                                                });
                                        });
                                });
                            } catch (e) {
                                throw (
                                    (i.forEach((e) => e()), (i.length = 0), e)
                                );
                            }
                            return i;
                        })(e, i);
                        try {
                            const a = e.e.fire("beforePreviewBox", t, i);
                            if (null != a) return a;
                            let d = e.c.div("jodit__preview-box jodit-context");
                            l && l.appendChild(d),
                                (0, r.i)(d, {
                                    position: "relative",
                                    padding: 16,
                                });
                            const h =
                                e.value ||
                                `<div style='position: absolute;left:50%;top:50%;transform: translateX(-50%) translateY(-50%);color:#ccc;'>${e.i18n(
                                    "Empty"
                                )}</div>`;
                            if (e.iframe) {
                                const t = e.create.element("iframe");
                                (0, r.i)(t, {
                                    minWidth: 800,
                                    minHeight: 600,
                                    border: 0,
                                }),
                                    d.appendChild(t);
                                const i = t.contentWindow;
                                if (
                                    i &&
                                    (e.e.fire(
                                        "generateDocumentStructure.iframe",
                                        i.document,
                                        e
                                    ),
                                    (d = i.document.body),
                                    "function" == typeof ResizeObserver)
                                ) {
                                    const s = new ResizeObserver((e) => {
                                        t.style.height =
                                            i.document.body.offsetHeight +
                                            20 +
                                            "px";
                                    });
                                    s.observe(i.document.body),
                                        e.e.on("beforeDestruct", () => {
                                            s.unobserve(i.document.body);
                                        });
                                }
                            } else
                                (0, r.i)(d, {
                                    minWidth: 1024,
                                    minHeight: 600,
                                    border: 0,
                                });
                            const u = (t, i) => {
                                const r = (0, s.H)(i) ? e.c.div() : i;
                                (0, s.H)(i) && (r.innerHTML = i);
                                for (
                                    let e = 0;
                                    r.childNodes.length > e;
                                    e += 1
                                ) {
                                    const i = r.childNodes[e];
                                    if (o.i.isElement(i)) {
                                        const e = t.ownerDocument.createElement(
                                            i.nodeName
                                        );
                                        for (
                                            let t = 0;
                                            i.attributes.length > t;
                                            t += 1
                                        )
                                            (0, n.Lj)(
                                                e,
                                                i.attributes[t].nodeName,
                                                i.attributes[t].nodeValue
                                            );
                                        0 === i.childNodes.length ||
                                        o.i.isTag(i, ["table"])
                                            ? "SCRIPT" === i.nodeName
                                                ? i.textContent &&
                                                  (e.textContent =
                                                      i.textContent)
                                                : i.innerHTML &&
                                                  (e.innerHTML = i.innerHTML)
                                            : u(e, i);
                                        try {
                                            t.appendChild(e);
                                        } catch (e) {}
                                    } else
                                        try {
                                            t.appendChild(i.cloneNode(!0));
                                        } catch (e) {}
                                }
                            };
                            return u(d, h), e.e.fire("afterPreviewBox", d), d;
                        } finally {
                            c.forEach((e) => e());
                        }
                    }
                },
                83080(e, t, i) {
                    "use strict";
                    i.d(t, {
                        m() {
                            return n;
                        },
                    });
                    var s = i(54693),
                        o = i(27177);
                    const r = {},
                        n = (e) => {
                            var t, i;
                            if (!(e in r)) {
                                const i = document.createElement("iframe");
                                try {
                                    if (
                                        ((i.src = "about:blank"),
                                        document.body.appendChild(i),
                                        !i.contentWindow)
                                    )
                                        return null;
                                    const n = (0, s.U)(e, i.contentWindow),
                                        a = (0, s.U)(
                                            e.split(".").slice(0, -1).join("."),
                                            i.contentWindow
                                        );
                                    (0, o.m)(n) && (r[e] = n.bind(a));
                                } catch (e) {
                                } finally {
                                    null === (t = i.parentNode) ||
                                        void 0 === t ||
                                        t.removeChild(i);
                                }
                            }
                            return null !== (i = r[e]) && void 0 !== i
                                ? i
                                : null;
                        };
                },
                57999(e, t, i) {
                    "use strict";
                    i.d(t, {
                        j() {
                            return o;
                        },
                        n() {
                            return r;
                        },
                    });
                    var s = i(38886);
                    const o = (e, t, i) => {
                        let s = e.getBoundingClientRect(),
                            o = e;
                        const r = s.top,
                            n = s.height;
                        do {
                            if (o && o.parentNode) {
                                if (
                                    ((o = o.parentNode),
                                    (s = o.getBoundingClientRect()),
                                    r > s.bottom)
                                )
                                    return !1;
                                if (s.top >= r + n) return !1;
                            }
                        } while (o && o !== t && o.parentNode);
                        return (
                            ((i.documentElement &&
                                i.documentElement.clientHeight) ||
                                0) >= r
                        );
                    };
                    function r(e, t, i) {
                        s.i.isHTMLElement(e) &&
                            !o(e, t, i) &&
                            (t.clientHeight !== t.scrollHeight &&
                                (t.scrollTop = e.offsetTop),
                            o(e, t, i) || e.scrollIntoView());
                    }
                },
                85641(e, t, i) {
                    "use strict";
                    i.d(t, {
                        $$() {
                            return d;
                        },
                        BR() {
                            return h;
                        },
                        W2() {
                            return m;
                        },
                        iN() {
                            return p;
                        },
                        xL() {
                            return u;
                        },
                    }),
                        i(36257);
                    var s = i(20405),
                        o = i(25916),
                        r = i(38886),
                        n = i(85140),
                        a = i(21305),
                        l = i(10783),
                        c = i(48961);
                    function d(e, t) {
                        let i;
                        return (i = t.querySelectorAll(e)), [].slice.call(i);
                    }
                    const h = (e, t) => {
                            if (!e || e.nodeType !== Node.ELEMENT_NODE)
                                return "";
                            if (!e.parentNode || t === e) return "";
                            if (e.id) return "//*[@id='" + e.id + "']";
                            const i = [].filter.call(
                                e.parentNode.childNodes,
                                (t) => t.nodeName === e.nodeName
                            );
                            return (
                                h(e.parentNode, t) +
                                "/" +
                                e.nodeName.toLowerCase() +
                                (i.length > 1
                                    ? "[" + ((0, a.q)(i).indexOf(e) + 1) + "]"
                                    : "")
                            );
                        },
                        u = (e) => (
                            c.w.isInstanceOf(e, l.u) && (e = e.container),
                            d("[ref],[data-ref]", e).reduce((e, t) => {
                                const i = (0, o.attr)(t, "-ref");
                                return (
                                    i &&
                                        (0, s.H)(i) &&
                                        ((e[(0, n.e)(i)] = t), (e[i] = t)),
                                    e
                                );
                            }, {})
                        ),
                        p = (e) => {
                            if (!r.i.isElement(e)) return null;
                            const t = [];
                            let i = e;
                            for (; i && i.nodeType === Node.ELEMENT_NODE; ) {
                                let e = i.nodeName.toLowerCase();
                                if (i.id) {
                                    (e += "#" + i.id), t.unshift(e);
                                    break;
                                }
                                {
                                    let t = i,
                                        s = 1;
                                    do {
                                        (t = t.previousElementSibling),
                                            t &&
                                                t.nodeName.toLowerCase() ===
                                                    e &&
                                                s++;
                                    } while (t);
                                    e += ":nth-of-type(" + s + ")";
                                }
                                t.unshift(e), (i = i.parentNode);
                            }
                            return t.join(" > ");
                        };
                    function m(e, t) {
                        let i = e;
                        if ((0, s.H)(e))
                            try {
                                i = t.querySelector(e);
                            } catch (t) {
                                throw (0, o.error)(
                                    'String "' +
                                        e +
                                        '" should be valid HTML selector'
                                );
                            }
                        if (
                            !i ||
                            "object" != typeof i ||
                            !r.i.isElement(i) ||
                            !i.cloneNode
                        )
                            throw (0, o.error)(
                                'Element "' +
                                    e +
                                    '" should be string or HTMLElement instance'
                            );
                        return i;
                    }
                },
                8449(e, t, i) {
                    "use strict";
                    i.d(t, {
                        t() {
                            return a;
                        },
                    });
                    var s = i(20405),
                        o = i(88795),
                        r = i(67493),
                        n = i(80721);
                    function a(e, t, i) {
                        if (!(0, s.H)(e) || !e.length) return;
                        const a = e.split(".");
                        let l = i,
                            c = a[0];
                        for (let e = 0; a.length - 1 > e; e += 1)
                            (c = a[e]),
                                (0, r.k)(l[c]) ||
                                    (0, n.P)(l[c]) ||
                                    (l[c] = (0, o.k)(a[e + 1]) ? [] : {}),
                                (l = l[c]);
                        l && (l[a[a.length - 1]] = t);
                    }
                },
                58968(e, t, i) {
                    "use strict";
                    i.d(t, {
                        l() {
                            return s;
                        },
                    });
                    class s {
                        constructor(e) {
                            (this.limit = e), (this.stack = []);
                        }
                        push(e) {
                            return (
                                this.stack.push(e),
                                this.stack.length > this.limit &&
                                    this.stack.shift(),
                                this
                            );
                        }
                        pop() {
                            return this.stack.pop();
                        }
                        find(e) {
                            return this.stack.find(e);
                        }
                    }
                },
                69403(e, t, i) {
                    "use strict";
                    i.d(t, {
                        C6() {
                            return m;
                        },
                        Lj() {
                            return u;
                        },
                        MN() {
                            return p;
                        },
                        RE() {
                            return h;
                        },
                        XP() {
                            return g;
                        },
                        po() {
                            return f;
                        },
                        qu() {
                            return b;
                        },
                        u3() {
                            return v;
                        },
                    });
                    var s = i(27177),
                        o = i(47696),
                        r = i(33713),
                        n = i(80721),
                        a = i(20405),
                        l = i(69003),
                        c = i(47077),
                        d = i(8194);
                    function h(e, ...t) {
                        return e(...t);
                    }
                    function u(e, t, i) {
                        if (!e || !(0, s.m)(e.getAttribute)) return null;
                        if (!(0, a.H)(t))
                            return (
                                Object.keys(t).forEach((i) => {
                                    const s = t[i];
                                    (0, n.P)(s) && "style" === i
                                        ? (0, c.i)(e, s)
                                        : ("className" === i && (i = "class"),
                                          u(e, i, s));
                                }),
                                null
                            );
                        let o = (0, d.g)(t);
                        if (/^-/.test(o)) {
                            const t = u(e, "data" + o);
                            if (t) return t;
                            o = o.substr(1);
                        }
                        if (void 0 !== i) {
                            if (null != i)
                                return e.setAttribute(o, "" + i), "" + i;
                            e.hasAttribute(o) && e.removeAttribute(o);
                        }
                        return e.getAttribute(o);
                    }
                    function p(e, t) {
                        u(t, "data-editor_id", e.id),
                            !t.component &&
                                Object.defineProperty(t, "jodit", { value: e });
                    }
                    function m(e, t) {
                        return (0, o.t)(e) ? e.finally(t) : t();
                    }
                    const f = (e, t) =>
                            t.async.promise((i, s) => {
                                const o = new Image(),
                                    r = () => {
                                        t.e.off(o), null == s || s();
                                    },
                                    n = () => {
                                        t.e.off(o), i(o);
                                    };
                                t.e
                                    .one(o, "load", n)
                                    .one(o, "error", r)
                                    .one(o, "abort", r),
                                    (o.src = e),
                                    o.complete && n();
                            }),
                        g = (e, t = !0) => {
                            if (t) return Object.keys(e);
                            const i = [];
                            for (const t in e) i.push(t);
                            return i;
                        },
                        v = (e, t, { control: i }, s) => {
                            var o;
                            const n = "button" + i.command;
                            let a =
                                null !== (o = i.args && i.args[0]) &&
                                void 0 !== o
                                    ? o
                                    : (0, l.q)(e, n);
                            if ((0, r.n)(a)) return !1;
                            (0, l.q)(e, n, a),
                                s && (a = s(a)),
                                e.execCommand(
                                    i.command,
                                    !1,
                                    null != a ? a : void 0
                                );
                        },
                        b = (e) => {
                            if (e.clipboardData) return e.clipboardData;
                            try {
                                return e.dataTransfer || new DataTransfer();
                            } catch (e) {
                                return null;
                            }
                        };
                },
                25250(e, t, i) {
                    "use strict";
                    i.d(t, {
                        P() {
                            return s;
                        },
                    });
                    const s = (e, t, i) => {
                        const s = e.querySelector(t);
                        return s ? (i && (s.value = i), s.value) : "";
                    };
                },
                10818(e, t, i) {
                    "use strict";
                    i.d(t, {
                        S() {
                            return s.S;
                        },
                    }),
                        i(4596);
                    var s = i(27056);
                },
                4596(e, t, i) {
                    "use strict";
                    i.d(t, {
                        h() {
                            return c;
                        },
                    });
                    var s = i(77574),
                        o = i(40069),
                        r = i(3790),
                        n = i(65358),
                        a = i(69403),
                        l = i(78855);
                    class c {
                        constructor() {
                            this._items = new Map();
                        }
                        normalizeName(e) {
                            return (0, n.GL)(e).toLowerCase();
                        }
                        items(e) {
                            const t = [];
                            return (
                                this._items.forEach((e, i) => {
                                    t.push([i, e]);
                                }),
                                t.filter(([t]) => !e || e.includes(t))
                            );
                        }
                        add(e, t) {
                            this._items.set(this.normalizeName(e), t),
                                l.TB.fire(`plugin:${e}:ready`);
                        }
                        get(e) {
                            return this._items.get(this.normalizeName(e));
                        }
                        remove(e) {
                            this._items.delete(this.normalizeName(e));
                        }
                        init(e) {
                            const t = e.o.extraPlugins.map((e) =>
                                    (0, s.HD)(e) ? { name: e } : e
                                ),
                                i = (0, r.C1)(e.o.disablePlugins).map((e) =>
                                    this.normalizeName(e)
                                ),
                                o = [],
                                n = {},
                                l = [],
                                d = {},
                                h = ([t, r]) => {
                                    if (i.includes(t) || o.includes(t) || n[t])
                                        return;
                                    const a = null == r ? void 0 : r.requires;
                                    if (
                                        a &&
                                        (0, s.kJ)(a) &&
                                        this.hasDisabledRequires(i, a)
                                    )
                                        return;
                                    const h = c.makePluginInstance(e, r);
                                    h &&
                                        (this.initOrWait(e, t, h, o, n),
                                        l.push(h),
                                        (d[t] = h));
                                },
                                u = this.loadExtras(e, t);
                            return (0, a.C6)(u, () => {
                                e.isInDestruct ||
                                    (this.items(
                                        e.o.safeMode
                                            ? e.o.safePluginsList.concat(
                                                  t.map((e) => e.name)
                                              )
                                            : null
                                    ).forEach(h),
                                    this.addListenerOnBeforeDestruct(e, l),
                                    (e.__plugins = d));
                            });
                        }
                        wait(e) {
                            return new Promise((t) => {
                                if (this.get(e)) return t();
                                const i = () => {
                                    t(), l.TB.off(`plugin:${e}:ready`, i);
                                };
                                l.TB.on(`plugin:${e}:ready`, i);
                            });
                        }
                        hasDisabledRequires(e, t) {
                            return !(
                                !(null == t ? void 0 : t.length) ||
                                !e.some((e) => t.includes(e))
                            );
                        }
                        static makePluginInstance(e, t) {
                            try {
                                try {
                                    return (0, s.mf)(t) ? new t(e) : t;
                                } catch (i) {
                                    if ((0, s.mf)(t) && !t.prototype)
                                        return t(e);
                                }
                            } catch (e) {}
                            return null;
                        }
                        initOrWait(e, t, i, o, r) {
                            const n = (t, i) => {
                                if ((0, s.Gu)(i)) {
                                    const s = i.requires;
                                    if (
                                        (null == s ? void 0 : s.length) &&
                                        !s.every((e) => o.includes(e))
                                    )
                                        return (r[t] = i), !1;
                                    try {
                                        i.init(e);
                                    } catch (e) {}
                                    o.push(t);
                                } else o.push(t);
                                return i.hasStyle && c.loadStyle(e, t), !0;
                            };
                            n(t, i),
                                Object.keys(r).forEach((e) => {
                                    const t = r[e];
                                    t &&
                                        n(e, t) &&
                                        ((r[e] = void 0), delete r[e]);
                                });
                        }
                        addListenerOnBeforeDestruct(e, t) {
                            e.e.on("beforeDestruct", () => {
                                t.forEach((t) => {
                                    (0, s.Z$)(t) && t.destruct(e);
                                }),
                                    (t.length = 0),
                                    delete e.__plugins;
                            });
                        }
                        load(e, t) {
                            return Promise.all(
                                t.map((t) => {
                                    const i =
                                        t.url || c.getFullUrl(e, t.name, !0);
                                    return (0, o.JL)(e, i).then(
                                        (e) => ({ v: e, status: "fulfilled" }),
                                        (e) => ({ e, status: "rejected" })
                                    );
                                })
                            );
                        }
                        static async loadStyle(e, t) {
                            const i = c.getFullUrl(e, t, !1);
                            if (!this.styles.has(i))
                                return this.styles.add(i), (0, o.Nf)(e, i);
                        }
                        static getFullUrl(e, t, i) {
                            return (
                                (t = (0, n.GL)(t)),
                                e.basePath +
                                    "plugins/" +
                                    t +
                                    "/" +
                                    t +
                                    "." +
                                    (i ? "js" : "css")
                            );
                        }
                        loadExtras(e, t) {
                            if (t && t.length)
                                try {
                                    const i = t.filter(
                                        (e) =>
                                            !this._items.has(
                                                this.normalizeName(e.name)
                                            )
                                    );
                                    if (i.length) return this.load(e, i);
                                } catch (e) {}
                        }
                    }
                    c.styles = new Set();
                },
                27056(e, t, i) {
                    "use strict";
                    i.d(t, {
                        S() {
                            return a;
                        },
                    });
                    var s = i(52784),
                        o = i(95950),
                        r = i(51663),
                        n = i(47643);
                    class a extends o.Hr {
                        className() {
                            return "";
                        }
                        constructor(e) {
                            super(e),
                                (this.requires = []),
                                (this.buttons = []),
                                (this.hasStyle = !1),
                                e.e
                                    .on("afterPluginSystemInit", () => {
                                        var t;
                                        (0, n.isJoditObject)(e) &&
                                            (null === (t = this.buttons) ||
                                                void 0 === t ||
                                                t.forEach((t) => {
                                                    e.registerButton(t);
                                                }));
                                    })
                                    .on("afterInit", () => {
                                        this.setStatus(o.n$.ready),
                                            this.afterInit(e);
                                    })
                                    .on("beforeDestruct", this.destruct);
                        }
                        init(e) {}
                        destruct() {
                            var e, t, i;
                            if (this.isReady) {
                                this.setStatus(o.n$.beforeDestruct);
                                const { j: s } = this;
                                (0, n.isJoditObject)(s) &&
                                    (null === (e = this.buttons) ||
                                        void 0 === e ||
                                        e.forEach((e) => {
                                            null == s || s.unregisterButton(e);
                                        })),
                                    null ===
                                        (i =
                                            null === (t = this.j) ||
                                            void 0 === t
                                                ? void 0
                                                : t.events) ||
                                        void 0 === i ||
                                        i.off("beforeDestruct", this.destruct),
                                    this.beforeDestruct(this.j),
                                    super.destruct();
                            }
                        }
                    }
                    (0, s.gn)([r.autobind], a.prototype, "destruct", null);
                },
                81997(e, t, i) {
                    "use strict";
                    i.d(t, {
                        t() {
                            return d;
                        },
                    });
                    var s = i(52784),
                        o = i(43854),
                        r = i(47643),
                        n = i(30324),
                        a = i(85135),
                        l = i(64004),
                        c = i(51663);
                    o.D.prototype.defaultAjaxOptions = {
                        successStatuses: [200, 201, 202],
                        method: "GET",
                        url: "",
                        data: null,
                        contentType:
                            "application/x-www-form-urlencoded; charset=UTF-8",
                        headers: { "X-REQUESTED-WITH": "XMLHttpRequest" },
                        withCredentials: !1,
                        xhr: () => new XMLHttpRequest(),
                    };
                    class d {
                        constructor(e, t = o.D.prototype.defaultAjaxOptions) {
                            (this.__async = new l.e()),
                                (this.__isFulfilled = !1),
                                (this.__activated = !1),
                                (this.__isDestructed = !1),
                                (this.options = (0, r.ConfigProto)(e || {}, t)),
                                (this.xhr = this.o.xhr
                                    ? this.o.xhr()
                                    : new XMLHttpRequest());
                        }
                        __buildParams(e, t) {
                            return (0, r.isPlainObject)(e) &&
                                this.options.contentType &&
                                this.options.contentType.includes(
                                    "application/json"
                                )
                                ? JSON.stringify(e)
                                : (0, r.isFunction)(this.o.queryBuild)
                                ? this.o.queryBuild.call(this, e, t)
                                : (0, r.isString)(e) ||
                                  e instanceof window.FormData ||
                                  ("object" == typeof e &&
                                      null != e &&
                                      (0, r.isFunction)(e.append))
                                ? e
                                : (0, r.buildQuery)(e);
                        }
                        get o() {
                            return this.options;
                        }
                        abort() {
                            if (this.__isFulfilled) return this;
                            try {
                                (this.__isFulfilled = !0), this.xhr.abort();
                            } catch (e) {}
                            return this;
                        }
                        send() {
                            this.__activated = !0;
                            const { xhr: e, o: t } = this,
                                i = this.prepareRequest();
                            return this.__async.promise(async (s, o) => {
                                var l;
                                const c = () => {
                                        (this.__isFulfilled = !0),
                                            o(n.ZI("Connection error"));
                                    },
                                    d = () => {
                                        (this.__isFulfilled = !0),
                                            s(
                                                new a.H(
                                                    i,
                                                    e.status,
                                                    e.statusText,
                                                    e.responseType
                                                        ? e.response
                                                        : e.responseText
                                                )
                                            );
                                    };
                                (e.onload = d),
                                    (e.onabort = () => {
                                        (this.__isFulfilled = !0),
                                            o(n.JG("Abort connection"));
                                    }),
                                    (e.onerror = c),
                                    (e.ontimeout = c),
                                    t.responseType &&
                                        (e.responseType = t.responseType),
                                    (e.onprogress = (e) => {
                                        var t, i;
                                        let s = 0;
                                        e.lengthComputable &&
                                            (s = (e.loaded / e.total) * 100),
                                            null ===
                                                (i = (t = this.options)
                                                    .onProgress) ||
                                                void 0 === i ||
                                                i.call(t, s);
                                    }),
                                    (e.onreadystatechange = () => {
                                        var i, s;
                                        null ===
                                            (s = (i = this.options)
                                                .onProgress) ||
                                            void 0 === s ||
                                            s.call(i, 10),
                                            e.readyState ===
                                                XMLHttpRequest.DONE &&
                                                (t.successStatuses.includes(
                                                    e.status
                                                )
                                                    ? d()
                                                    : e.statusText &&
                                                      ((this.__isFulfilled =
                                                          !0),
                                                      o(n.ZI(e.statusText))));
                                    }),
                                    (e.withCredentials =
                                        null !== (l = t.withCredentials) &&
                                        void 0 !== l &&
                                        l);
                                const { url: h, data: u, method: p } = i;
                                e.open(p, h, !0),
                                    t.contentType &&
                                        e.setRequestHeader &&
                                        e.setRequestHeader(
                                            "Content-type",
                                            t.contentType
                                        );
                                let { headers: m } = t;
                                (0, r.isFunction)(m) &&
                                    (m = await m.call(this)),
                                    m &&
                                        e.setRequestHeader &&
                                        Object.keys(m).forEach((t) => {
                                            e.setRequestHeader(t, m[t]);
                                        }),
                                    this.__async.setTimeout(() => {
                                        e.send(
                                            u ? this.__buildParams(u) : void 0
                                        );
                                    }, 0);
                            });
                        }
                        prepareRequest() {
                            if (!this.o.url)
                                throw n.vU("Need URL for AJAX request");
                            let e = this.o.url;
                            const t = this.o.data,
                                i = (this.o.method || "get").toLowerCase();
                            if ("get" === i && t && (0, r.isPlainObject)(t)) {
                                const i = e.indexOf("?");
                                if (-1 !== i) {
                                    const s = (0, r.parseQuery)(e);
                                    e =
                                        e.substring(0, i) +
                                        "?" +
                                        (0, r.buildQuery)({ ...s, ...t });
                                } else
                                    e += "?" + (0, r.buildQuery)(this.o.data);
                            }
                            const s = { url: e, method: i, data: t };
                            return d.log.splice(100), d.log.push(s), s;
                        }
                        destruct() {
                            this.__isDestructed ||
                                ((this.__isDestructed = !0),
                                this.__activated &&
                                    !this.__isFulfilled &&
                                    (this.abort(), (this.__isFulfilled = !0)),
                                this.__async.destruct());
                        }
                    }
                    (d.log = []),
                        (0, s.gn)([c.autobind], d.prototype, "destruct", null);
                },
                67106(e, t, i) {
                    "use strict";
                    i.d(t, {
                        H() {
                            return o.H;
                        },
                        t() {
                            return s.t;
                        },
                    });
                    var s = i(81997),
                        o = i(85135);
                },
                85135(e, t, i) {
                    "use strict";
                    i.d(t, {
                        H() {
                            return s;
                        },
                    });
                    class s {
                        get url() {
                            return this.request.url;
                        }
                        constructor(e, t, i, s) {
                            (this.request = e),
                                (this.status = t),
                                (this.statusText = i),
                                (this.body = s);
                        }
                        async json() {
                            return JSON.parse(this.body);
                        }
                        text() {
                            return Promise.resolve(this.body);
                        }
                        async blob() {
                            return this.body;
                        }
                    }
                },
                5936(e, t, i) {
                    "use strict";
                    i.d(t, {
                        F() {
                            return r;
                        },
                        f() {
                            return n;
                        },
                    });
                    var s = i(97039),
                        o = i(36257);
                    function r(e, t, i) {
                        let r = s.i.findSibling(t, i),
                            n = s.i.findSibling(t, !i);
                        for (
                            ;
                            s.i.isElement(r) &&
                            !s.i.isTag(r, o.INSEPARABLE_TAGS) &&
                            s.i.isContentEditable(r, e.editor) &&
                            (!n || !s.i.closest(t, s.i.isElement, e.editor));

                        )
                            i || !r.firstChild
                                ? r.appendChild(t)
                                : s.i.before(r.firstChild, t),
                                (r = s.i.sibling(t, i)),
                                (n = s.i.sibling(t, !i));
                    }
                    function n(e, t, i) {
                        let o = e;
                        for (; o && o !== i; ) {
                            if (s.i.findSibling(o, t)) return;
                            (o = o.parentElement),
                                o &&
                                    o !== i &&
                                    (t ? s.i.before(o, e) : s.i.after(o, e));
                        }
                    }
                },
                61833(e, t, i) {
                    "use strict";
                    i.d(t, {
                        Ve() {
                            return X;
                        },
                        RP() {
                            return ie;
                        },
                        _X() {
                            return Q;
                        },
                        J5() {
                            return ee;
                        },
                        Ph() {
                            return ne;
                        },
                        p() {
                            return Z;
                        },
                        Nc() {
                            return J;
                        },
                        Qu() {
                            return K;
                        },
                    });
                    var s = i(36257),
                        o = i(85140),
                        r = i(74555),
                        n = i(25916),
                        a = i(47077),
                        l = i(69003),
                        c = i(8194),
                        d = i(49082),
                        h = i(55490),
                        u = i(38886),
                        p = i(78855),
                        m = i(77574);
                    const f = "toggleAttributes";
                    function g(e, t, i, s, o = !1) {
                        if (!o && e.isApplied(t, f)) return s;
                        !o && e.setApplied(t, f);
                        const { attributes: r } = e.options;
                        return (
                            r &&
                                (0, h.d)(r) > 0 &&
                                Object.keys(r).forEach((h) => {
                                    const m = r[h];
                                    switch (h) {
                                        case "style":
                                            s = ((e, t, i, s, o, r) => (
                                                Object.keys(i).forEach((n) => {
                                                    const h =
                                                            s.style.getPropertyValue(
                                                                (0, c.G)(n)
                                                            ),
                                                        m = i[n];
                                                    if ("" !== h || null != m) {
                                                        if (
                                                            ((e, t, i) => {
                                                                const s =
                                                                    e.create.element(
                                                                        t.tagName.toLowerCase()
                                                                    );
                                                                (s.style.cssText =
                                                                    t.style.cssText),
                                                                    ((e) => {
                                                                        var t;
                                                                        if (
                                                                            void 0 !==
                                                                            (0,
                                                                            l.q)(
                                                                                e,
                                                                                "shadowRoot"
                                                                            )
                                                                        )
                                                                            return (0,
                                                                            l.q)(
                                                                                e,
                                                                                "shadowRoot"
                                                                            );
                                                                        const i =
                                                                                (0,
                                                                                p.ZO)(
                                                                                    e
                                                                                ),
                                                                            s =
                                                                                document.createElement(
                                                                                    "iframe"
                                                                                );
                                                                        (0,
                                                                        a.i)(
                                                                            s,
                                                                            {
                                                                                width: 0,
                                                                                height: 0,
                                                                                position:
                                                                                    "absolute",
                                                                                border: 0,
                                                                            }
                                                                        ),
                                                                            (s.src =
                                                                                "about:blank"),
                                                                            i.appendChild(
                                                                                s
                                                                            );
                                                                        const o =
                                                                                null ===
                                                                                    (t =
                                                                                        s.contentWindow) ||
                                                                                void 0 ===
                                                                                    t
                                                                                    ? void 0
                                                                                    : t.document,
                                                                            r =
                                                                                o
                                                                                    ? o.body
                                                                                    : e
                                                                                          .od
                                                                                          .body;
                                                                        return (
                                                                            (0,
                                                                            l.q)(
                                                                                e,
                                                                                "shadowRoot",
                                                                                r
                                                                            ),
                                                                            r
                                                                        );
                                                                    })(
                                                                        e
                                                                    ).appendChild(
                                                                        s
                                                                    );
                                                                const o = (0,
                                                                a.i)(s, i);
                                                                return (
                                                                    u.i.safeRemove(
                                                                        s
                                                                    ),
                                                                    o
                                                                );
                                                            })(t, s, n) ===
                                                            (0, d.Zh)(n, m)
                                                        ) {
                                                            if (!h) return;
                                                            return (
                                                                !o &&
                                                                    (0, a.i)(
                                                                        s,
                                                                        n,
                                                                        null
                                                                    ),
                                                                void (r = v(
                                                                    e,
                                                                    s,
                                                                    (r = Z)
                                                                ))
                                                            );
                                                        }
                                                        (r = X),
                                                            o ||
                                                                ((0, a.i)(
                                                                    s,
                                                                    n,
                                                                    m
                                                                ),
                                                                (r = v(
                                                                    e,
                                                                    s,
                                                                    r
                                                                )));
                                                    }
                                                }),
                                                r
                                            ))(e, i, m, t, o, s);
                                            break;
                                        case "class":
                                            s = ((e, t, i, s, o) => {
                                                const r = e.e.fire.bind(
                                                    e.e,
                                                    te + "AfterToggleAttribute"
                                                );
                                                return (
                                                    i.classList.contains("" + t)
                                                        ? ((s = Z),
                                                          o ||
                                                              (i.classList.remove(
                                                                  t
                                                              ),
                                                              0 ===
                                                                  i.classList
                                                                      .length &&
                                                                  ((0, n.attr)(
                                                                      i,
                                                                      "class",
                                                                      null
                                                                  ),
                                                                  r(
                                                                      s,
                                                                      i,
                                                                      "class",
                                                                      null
                                                                  ))))
                                                        : ((s = X),
                                                          o ||
                                                              (i.classList.add(
                                                                  t
                                                              ),
                                                              r(
                                                                  s,
                                                                  i,
                                                                  "class",
                                                                  t
                                                              ))),
                                                    s
                                                );
                                            })(i, m, t, s, o);
                                            break;
                                        default:
                                            s = ((e, t, i, s, o, r) => {
                                                const a = e.e.fire.bind(
                                                    e.e,
                                                    te + "AfterToggleAttribute"
                                                );
                                                return (0, n.attr)(i, s) === t
                                                    ? (!o &&
                                                          (0, n.attr)(
                                                              i,
                                                              s,
                                                              null
                                                          ),
                                                      (r = Z),
                                                      !o && a(r, i, s, t),
                                                      r)
                                                    : ((r = X),
                                                      o ||
                                                          ((0, n.attr)(i, s, t),
                                                          a(r, i, s, t)),
                                                      r);
                                            })(i, m, t, h, o, s);
                                    }
                                }),
                            s
                        );
                    }
                    function v(e, t, i) {
                        return (
                            (0, n.attr)(t, "style") ||
                                ((0, n.attr)(t, "style", null),
                                t.tagName.toLowerCase() === e.defaultTag &&
                                    (u.i.unwrap(t), (i = J))),
                            i
                        );
                    }
                    i(52378);
                    var b = i(69403),
                        y = i(95049),
                        w = i(98768);
                    function k(e, t, i) {
                        const s = i.s.createRange(),
                            o = (0, w._)(t.previousSibling)
                                ? t.previousSibling
                                : t;
                        s.setStartBefore(e), s.setEndBefore(o), C(e, s, !0);
                        const r = (0, w._)(t.nextSibling) ? t.nextSibling : t;
                        s.setStartAfter(r), s.setEndAfter(e), C(e, s, !1);
                    }
                    function C(e, t, i) {
                        const s = t.extractContents();
                        (s.textContent && (0, y.f)(s.textContent).length) ||
                            !s.firstChild ||
                            u.i.unwrap(s.firstChild),
                            e.parentNode &&
                                (0, b.RE)(i ? u.i.before : u.i.after, e, s);
                    }
                    function S(e, t, i, s) {
                        if (!t) return s;
                        const o = t.parentElement;
                        if (!o) return s;
                        const r = i.e.fire(te + "BeforeToggleList", s, e, o);
                        if (void 0 !== r) return r;
                        const n = i.e.fire.bind(i.e, te + "AfterToggleList");
                        if (s !== J) {
                            const r = g(e, t.parentElement, i, Q, !0) === X;
                            if (
                                s === ee ||
                                r ||
                                o.tagName.toLowerCase() !== e.element
                            ) {
                                const s = _(e, x(ee, o, t, i, e), i);
                                return n(ee, s, e), ee;
                            }
                        }
                        const a = x(J, o, t, i, e);
                        return n(J, a, e), J;
                    }
                    function x(e, t, i, s, o) {
                        return (
                            s.e.fire(te + "BeforeUnwrapList", e, t, o) ||
                            (k(t, i, s),
                            u.i.unwrap(i.parentElement),
                            u.i.replace(i, s.o.enter, s.createInside))
                        );
                    }
                    var E = i(97039);
                    function _(e, t, i) {
                        const s = i.e.fire(te + "BeforeWrapList", ee, t, e),
                            o =
                                null != s
                                    ? s
                                    : E.i.replace(t, "li", i.createInside),
                            r = o.previousElementSibling,
                            a = o.nextElementSibling;
                        let l = E.i.isTag(r, e.element) ? r : null;
                        var c, d, u, p;
                        return (
                            null != l ||
                                (l = E.i.isTag(a, e.element) ? a : null),
                            (E.i.isTag(l, ["ul", "ol"]) &&
                                ((p = e.options.attributes),
                                (!(u = l).attributes.length && !(0, h.d)(p)) ||
                                    !(0, h.d)(p) ||
                                    Object.keys(p).every((e) =>
                                        "class" === e
                                            ? u.classList.contains(p[e])
                                            : "style" === e
                                            ? z(u, p[e])
                                            : (0, n.attr)(u, e) === p[e]
                                    ))) ||
                                ((l = i.createInside.element(e.element)),
                                g(e, l, i, Q),
                                E.i.before(o, l)),
                            r === l ? E.i.append(l, o) : E.i.prepend(l, o),
                            E.i.isTag(l.nextElementSibling, e.element) &&
                                (c = l).attributes.length ===
                                    (d = l.nextElementSibling).attributes
                                        .length &&
                                Array.from(c.attributes).every(
                                    (e) =>
                                        d.hasAttribute(e.name) &&
                                        d.getAttribute(e.name) === e.value
                                ) &&
                                (E.i.append(
                                    l,
                                    Array.from(l.nextElementSibling.childNodes)
                                ),
                                E.i.safeRemove(l.nextElementSibling)),
                            i.e.fire(te + "AfterWrapList", K, l, e),
                            l
                        );
                    }
                    var j = i(33713);
                    function z(e, t) {
                        return !(
                            u.i.isTag(e, "font") ||
                            !u.i.isHTMLElement(e) ||
                            !Object.keys(t).every((i) => {
                                const s = (0, a.i)(e, i, !0);
                                return (
                                    ("" === s &&
                                        ("" === t[i] || null == t[i])) ||
                                    (!(0, j.n)(s) &&
                                        "" !== s &&
                                        !(0, j.n)(t[i]) &&
                                        (
                                            "" + (0, d.Zh)(i, t[i])
                                        ).toLowerCase() ===
                                            ("" + s).toLowerCase())
                                );
                            })
                        );
                    }
                    function T(e, t) {
                        return !(
                            u.i.isTag(e, "font") ||
                            !u.i.isHTMLElement(e) ||
                            !Object.keys(t).every((t) => {
                                const i = (0, a.i)(e, t, !0);
                                return !(0, j.n)(i);
                            })
                        );
                    }
                    (document.createElement("div").style.color = "red"),
                        i(10173);
                    class I {
                        setState(e) {
                            this.__previewsStates.add(e), (this.__state = e);
                        }
                        getState() {
                            return this.__state;
                        }
                        disableSilent() {
                            this.silent = !1;
                        }
                        constructor(e, t) {
                            (this.transitions = t),
                                (this.silent = !0),
                                (this.__previewsStates = new Set()),
                                this.setState(e);
                        }
                        dispatch(e, t) {
                            const i = this.transitions[this.getState()][e];
                            if (i) {
                                const e = i.call(this, t);
                                return this.setState(e.next), e;
                            }
                            throw Error(
                                `invalid action: ${this.getState()}.${"" + e}`
                            );
                        }
                    }
                    function L(e) {
                        return !(
                            !e ||
                            u.i.isEmptyTextNode(e) ||
                            u.i.isTemporary(e) ||
                            (0, w._)(e)
                        );
                    }
                    function M(e, t, i) {
                        var s;
                        if (!t) return !1;
                        const {
                                element: o,
                                elementIsDefault: r,
                                options: n,
                            } = e,
                            a = !(
                                !(null === (s = n.attributes) || void 0 === s
                                    ? void 0
                                    : s.style) || !z(t, n.attributes.style)
                            ),
                            l =
                                t.nodeName.toLowerCase() === o ||
                                (u.i.isTag(t, ["ul", "ol"]) && e.elementIsList);
                        return !(
                            ((r && i) || !l) &&
                            (!a || !L(t) || e.elementIsList) &&
                            (l || i || !r || !u.i.isInlineBlock(t))
                        );
                    }
                    function A(e, t, i) {
                        return u.i.closest(t, (t) => M(e, t, !0), i);
                    }
                    function D(e, t) {
                        var i, s;
                        const { element: o, options: r } = e;
                        if (!t || !L(t)) return !1;
                        const n = t.nodeName.toLowerCase() === o,
                            a = !(
                                !(null === (i = r.attributes) || void 0 === i
                                    ? void 0
                                    : i.style) ||
                                !T(
                                    t,
                                    null === (s = r.attributes) || void 0 === s
                                        ? void 0
                                        : s.style
                                )
                            );
                        return n && a;
                    }
                    function P(e, t, i) {
                        const { parentNode: s } = t;
                        return s === i ||
                            !u.i.isHTMLElement(s) ||
                            u.i.next(t, L, s) ||
                            u.i.prev(t, L, s)
                            ? null
                            : e.isElementCommit &&
                              e.elementIsBlock &&
                              !u.i.isBlock(s)
                            ? P(e, s, i)
                            : !M(e, s, !1) ||
                              (u.i.isBlock(s) && !e.elementIsBlock)
                            ? e.isElementCommit && !u.i.isBlock(s)
                                ? P(e, s, i)
                                : null
                            : s;
                    }
                    var N = i(47643);
                    const R = "START",
                        q = "ELEMENT",
                        B = "UNWRAP",
                        O = "UNWRAP_CHILDREN",
                        H = "CHANGE",
                        F = "REPLACE_DEFAULT",
                        V = "LIST",
                        W = "TOGGLE_LIST",
                        $ = "WRAP",
                        U = "EXTRACT",
                        Y = "END",
                        G = {
                            [R]: {
                                exec(e) {
                                    const {
                                        element: t,
                                        jodit: i,
                                        style: s,
                                        mode: o,
                                    } = e;
                                    if (
                                        u.i.closest(
                                            t,
                                            ["style", "script"],
                                            i.editor
                                        ) ||
                                        E.i.isEmptyContent(t)
                                    )
                                        return { ...e, next: Y };
                                    const r =
                                        P(s, t, i.editor) ||
                                        ((e, t) => {
                                            let { firstChild: i } = t;
                                            for (; i && !L(i); )
                                                if (((i = i.nextSibling), !i))
                                                    return null;
                                            return i &&
                                                !u.i.next(i, L, t) &&
                                                M(e, i, !1)
                                                ? i
                                                : null;
                                        })(s, t);
                                    if (r) return { ...e, next: q, element: r };
                                    const n = A(s, t, i.editor);
                                    return s.elementIsList &&
                                        E.i.isTag(n, ["ul", "ol"])
                                        ? { ...e, next: V }
                                        : n
                                        ? { ...e, next: U }
                                        : { ...e, next: o !== J ? O : Y };
                                },
                            },
                            [V]: {
                                exec(e) {
                                    const { element: t, jodit: i, mode: s } = e;
                                    if (s !== Q && s !== J && s !== ee)
                                        return { ...e, next: Y };
                                    const o = E.i.closest(t, "li", i.editor);
                                    return o &&
                                        E.i.closest(t, ["ul", "ol"], i.editor)
                                        ? { ...e, element: o, next: W }
                                        : { ...e, next: Y };
                                },
                            },
                            [W]: {
                                exec: (e) => ({
                                    ...e,
                                    mode: S(
                                        e.style,
                                        e.element,
                                        e.jodit,
                                        e.mode
                                    ),
                                    next: Y,
                                }),
                            },
                            [U]: {
                                exec(e) {
                                    const {
                                            element: t,
                                            jodit: i,
                                            style: s,
                                        } = e,
                                        o = A(s, t, i.editor);
                                    return (
                                        s.elementIsBlock || k(o, t, i),
                                        { ...e, element: o, next: q }
                                    );
                                },
                            },
                            [O]: {
                                exec(e) {
                                    const { element: t, style: i } = e;
                                    return ((e, t) => {
                                        var i;
                                        const s = [],
                                            o = [];
                                        let r;
                                        const n =
                                            null ===
                                                (i = e.options.attributes) ||
                                            void 0 === i
                                                ? void 0
                                                : i.style;
                                        if (t.firstChild) {
                                            const i = u.i.eachGen(t);
                                            let a = i.next();
                                            for (; !a.done; ) {
                                                const t = a.value;
                                                !M(e, t, !0) || (n && !T(t, n))
                                                    ? n && D(e, t)
                                                        ? (void 0 === r &&
                                                              (r = !1),
                                                          o.push(() => {
                                                              (0, N.css)(
                                                                  t,
                                                                  Object.keys(
                                                                      n
                                                                  ).reduce(
                                                                      (
                                                                          e,
                                                                          t
                                                                      ) => (
                                                                          (e[
                                                                              t
                                                                          ] =
                                                                              null),
                                                                          e
                                                                      ),
                                                                      {}
                                                                  )
                                                              ),
                                                                  (0, N.attr)(
                                                                      t,
                                                                      "style"
                                                                  ) ||
                                                                      (0,
                                                                      N.attr)(
                                                                          t,
                                                                          "style",
                                                                          null
                                                                      ),
                                                                  (0, N.attr)(
                                                                      t,
                                                                      "style"
                                                                  ) ||
                                                                      t.nodeName.toLowerCase() !==
                                                                          e.element ||
                                                                      s.push(t);
                                                          }))
                                                        : u.i.isEmptyTextNode(
                                                              t
                                                          ) ||
                                                          (void 0 === r &&
                                                              (r = !1))
                                                    : (void 0 === r && (r = !0),
                                                      s.push(t)),
                                                    (a = i.next());
                                            }
                                        }
                                        return (
                                            o.forEach((e) => e()),
                                            s.forEach(u.i.unwrap),
                                            !!r
                                        );
                                    })(i, t)
                                        ? { ...e, mode: J, next: Y }
                                        : { ...e, next: $ };
                                },
                            },
                            [$]: {
                                exec(e) {
                                    const {
                                            element: t,
                                            jodit: i,
                                            style: s,
                                        } = e,
                                        o = ((e, t, i) => {
                                            const s = ((e, t, i) =>
                                                e.elementIsBlock
                                                    ? E.i.up(
                                                          t,
                                                          (e) =>
                                                              E.i.isBlock(e) &&
                                                              !E.i.isTag(e, [
                                                                  "td",
                                                                  "th",
                                                                  "tr",
                                                                  "tbody",
                                                                  "table",
                                                                  "li",
                                                                  "ul",
                                                                  "ol",
                                                              ]),
                                                          i.editor
                                                      ) ||
                                                      ((e, t, i) => {
                                                          const s = i.editor,
                                                              o =
                                                                  i.createInside,
                                                              r = (
                                                                  e,
                                                                  t = "previousSibling"
                                                              ) => {
                                                                  let o = e,
                                                                      r = e;
                                                                  for (
                                                                      ;
                                                                      r &&
                                                                      !(0, w._)(
                                                                          r
                                                                      ) &&
                                                                      !u.i.isTag(
                                                                          r,
                                                                          i.o
                                                                              .enter
                                                                      ) &&
                                                                      ((o = r),
                                                                      (r = r[t]
                                                                          ? r[t]
                                                                          : r.parentNode &&
                                                                            !u.i.isBlock(
                                                                                r.parentNode
                                                                            ) &&
                                                                            r.parentNode !==
                                                                                s
                                                                          ? r.parentNode
                                                                          : null),
                                                                      !u.i.isBlock(
                                                                          r
                                                                      ));

                                                                  );
                                                                  return o;
                                                              },
                                                              n = r(t),
                                                              a = r(
                                                                  t,
                                                                  "nextSibling"
                                                              ),
                                                              l =
                                                                  i.s.createRange();
                                                          l.setStartBefore(n),
                                                              l.setEndAfter(a);
                                                          const c =
                                                                  l.extractContents(),
                                                              d = o.element(
                                                                  e.element
                                                              );
                                                          return (
                                                              d.appendChild(c),
                                                              u.i.safeInsertNode(
                                                                  l,
                                                                  d
                                                              ),
                                                              e.elementIsBlock &&
                                                                  u.i.isEmpty(
                                                                      d
                                                                  ) &&
                                                                  !u.i.isTag(
                                                                      d.firstElementChild,
                                                                      "br"
                                                                  ) &&
                                                                  d.appendChild(
                                                                      o.element(
                                                                          "br"
                                                                      )
                                                                  ),
                                                              d
                                                          );
                                                      })(e, t, i)
                                                    : ((0, b.Lj)(
                                                          t,
                                                          "size",
                                                          null
                                                      ),
                                                      t))(e, t, i);
                                            return e.elementIsList
                                                ? _(e, s, i)
                                                : E.i.replace(
                                                      s,
                                                      e.element,
                                                      i.createInside,
                                                      !0
                                                  );
                                        })(s, t, i);
                                    return {
                                        ...e,
                                        next: s.elementIsList ? Y : H,
                                        mode: K,
                                        element: o,
                                    };
                                },
                            },
                            [q]: {
                                exec(e) {
                                    const {
                                        style: t,
                                        element: i,
                                        jodit: s,
                                    } = e;
                                    return g(t, i, s, Q, !0) !== Q
                                        ? { ...e, next: H }
                                        : { ...e, next: B };
                                },
                            },
                            [H]: {
                                exec(e) {
                                    const {
                                            style: t,
                                            element: i,
                                            jodit: s,
                                            mode: o,
                                        } = e,
                                        r = g(t, i, s, e.mode);
                                    return o !== K &&
                                        r === Z &&
                                        !i.attributes.length &&
                                        E.i.isTag(i, t.element)
                                        ? { ...e, next: B }
                                        : { ...e, mode: r, next: Y };
                                },
                            },
                            [B]: {
                                exec: (e) =>
                                    e.element.attributes.length &&
                                    E.i.isTag(e.element, e.style.element)
                                        ? { ...e, next: F }
                                        : (E.i.unwrap(e.element),
                                          { ...e, mode: J, next: Y }),
                            },
                            [F]: {
                                exec: (e) => (
                                    E.i.replace(
                                        e.element,
                                        e.style.defaultTag,
                                        e.jodit.createInside,
                                        !0
                                    ),
                                    { ...e, mode: ee, next: Y }
                                ),
                            },
                            [Y]: { exec: (e) => e },
                        },
                        K = "wrap",
                        J = "unwrap",
                        X = "change",
                        Z = "unset",
                        Q = "initial",
                        ee = "replace",
                        te = "commitStyle";
                    class ie {
                        isApplied(e, t) {
                            const i = this.__applyMap.get(e);
                            return !!i && i[t];
                        }
                        setApplied(e, t) {
                            var i;
                            const s =
                                null !== (i = this.__applyMap.get(e)) &&
                                void 0 !== i
                                    ? i
                                    : {};
                            (s[t] = !0), this.__applyMap.set(e, s);
                        }
                        get elementIsList() {
                            return !(
                                !this.options.element ||
                                !["ul", "ol"].includes(this.options.element)
                            );
                        }
                        get element() {
                            return this.options.element || this.defaultTag;
                        }
                        get elementIsBlock() {
                            return !(
                                !this.options.element ||
                                !s.IS_BLOCK.test(this.options.element)
                            );
                        }
                        get isElementCommit() {
                            return !(
                                !this.options.element ||
                                this.options.element === this.options.defaultTag
                            );
                        }
                        get defaultTag() {
                            return this.options.defaultTag
                                ? this.options.defaultTag
                                : this.elementIsBlock
                                ? "p"
                                : "span";
                        }
                        get elementIsDefault() {
                            return this.element === this.defaultTag;
                        }
                        constructor(e) {
                            (this.options = e),
                                (this.__applyMap = new WeakMap()),
                                (e.attributes = ((e, t) => {
                                    const { style: i, className: s } =
                                        e.options;
                                    return (
                                        i &&
                                            (t
                                                ? (t.style = i)
                                                : (t = { style: i }),
                                            delete e.options.style),
                                        s &&
                                            (t
                                                ? (t.class = s)
                                                : (t = { class: s }),
                                            delete e.options.className),
                                        t
                                    );
                                })(this, e.attributes));
                        }
                        apply(e) {
                            const { hooks: t } = this.options;
                            try {
                                t &&
                                    Object.keys(t).forEach((i) => {
                                        e.e.on((0, o.e)(te + "_" + i), t[i]);
                                    }),
                                    ((e, t) => {
                                        const { s: i, editor: s } = e;
                                        i.save(), (0, r.T)(s.firstChild);
                                        const o = e.s.wrapInTagGen();
                                        let n = o.next(),
                                            a = {
                                                mode: Q,
                                                element: n.value,
                                                next: R,
                                                jodit: e,
                                                style: t,
                                            };
                                        for (; n && !n.done; ) {
                                            const e = new I(R, G);
                                            for (
                                                a.element = n.value;
                                                e.getState() !== Y;

                                            )
                                                a = e.dispatch("exec", a);
                                            n = o.next();
                                        }
                                        i.restore();
                                    })(e, this);
                            } finally {
                                t &&
                                    Object.keys(t).forEach((i) => {
                                        e.e.off((0, o.e)(te + "_" + i), t[i]);
                                    }),
                                    (this.__applyMap = new WeakMap());
                            }
                        }
                    }
                    var se = i(52784),
                        oe = i(51663),
                        re = i(5936);
                    class ne {
                        constructor(e) {
                            (this.jodit = e),
                                e.e.on("removeMarkers", () => {
                                    this.removeMarkers();
                                });
                        }
                        get j() {
                            return this.jodit;
                        }
                        errorNode(e) {
                            if (!E.i.isNode(e))
                                throw (0, N.error)(
                                    "Parameter node must be instance of Node"
                                );
                        }
                        get area() {
                            return this.j.editor;
                        }
                        get win() {
                            return this.j.ew;
                        }
                        get doc() {
                            return this.j.ed;
                        }
                        get sel() {
                            return this.j.o.shadowRoot &&
                                (0, m.mf)(this.j.o.shadowRoot.getSelection)
                                ? this.j.o.shadowRoot.getSelection()
                                : this.win.getSelection();
                        }
                        get range() {
                            const e = this.sel;
                            return e && e.rangeCount
                                ? e.getRangeAt(0)
                                : this.createRange();
                        }
                        get isInsideArea() {
                            const { sel: e } = this,
                                t = (null == e ? void 0 : e.rangeCount)
                                    ? e.getRangeAt(0)
                                    : null;
                            return !(
                                !t ||
                                !E.i.isOrContains(this.area, t.startContainer)
                            );
                        }
                        createRange(e = !1) {
                            const t = this.doc.createRange();
                            return e && this.selectRange(t), t;
                        }
                        remove() {
                            const e = this.sel,
                                t = this.current();
                            if (e && t)
                                for (let t = 0; e.rangeCount > t; t += 1)
                                    e.getRangeAt(t).deleteContents(),
                                        e.getRangeAt(t).collapse(!0);
                        }
                        clear() {
                            var e, t;
                            (null === (e = this.sel) || void 0 === e
                                ? void 0
                                : e.rangeCount) &&
                                (null === (t = this.sel) ||
                                    void 0 === t ||
                                    t.removeAllRanges());
                        }
                        removeNode(e) {
                            if (!E.i.isOrContains(this.j.editor, e, !0))
                                throw (0, N.error)(
                                    "Selection.removeNode can remove only editor's children"
                                );
                            E.i.safeRemove(e),
                                this.j.e.fire("afterRemoveNode", e);
                        }
                        insertCursorAtPoint(e, t) {
                            this.removeMarkers();
                            try {
                                const i = this.createRange();
                                return (
                                    (() => {
                                        if (this.doc.caretPositionFromPoint) {
                                            const s =
                                                this.doc.caretPositionFromPoint(
                                                    e,
                                                    t
                                                );
                                            if (s)
                                                return void i.setStart(
                                                    s.offsetNode,
                                                    s.offset
                                                );
                                        }
                                        if (this.doc.caretRangeFromPoint) {
                                            const s =
                                                this.doc.caretRangeFromPoint(
                                                    e,
                                                    t
                                                );
                                            i.setStart(
                                                s.startContainer,
                                                s.startOffset
                                            );
                                        }
                                    })(),
                                    i.collapse(!0),
                                    this.selectRange(i),
                                    !0
                                );
                            } catch (e) {}
                            return !1;
                        }
                        get hasMarkers() {
                            return !!this.markers.length;
                        }
                        get markers() {
                            return (0, N.$$)(
                                "span[data-" + s.MARKER_CLASS + "]",
                                this.area
                            );
                        }
                        removeMarkers() {
                            E.i.safeRemove.apply(null, this.markers);
                        }
                        marker(e = !1, t) {
                            let i = null;
                            t && ((i = t.cloneRange()), i.collapse(e));
                            const o = this.j.createInside.span();
                            return (
                                (o.id =
                                    s.MARKER_CLASS +
                                    "_" +
                                    Number(new Date()) +
                                    "_" +
                                    (Math.random() + "").slice(2)),
                                (o.style.lineHeight = "0"),
                                (o.style.display = "none"),
                                E.i.markTemporary(o),
                                (0, N.attr)(
                                    o,
                                    "data-" + s.MARKER_CLASS,
                                    e ? "start" : "end"
                                ),
                                o.appendChild(
                                    this.j.createInside.text(s.INVISIBLE_SPACE)
                                ),
                                i &&
                                    E.i.isOrContains(
                                        this.area,
                                        e ? i.startContainer : i.endContainer
                                    ) &&
                                    i.insertNode(o),
                                o
                            );
                        }
                        restore() {
                            let e = !1;
                            const t = (e) =>
                                    `span[data-${s.MARKER_CLASS}=${
                                        e ? "start" : "end"
                                    }]`,
                                i = this.area.querySelector(t(!0)),
                                o = this.area.querySelector(t(!1));
                            if (i) {
                                if (((e = this.createRange()), o))
                                    e.setStartAfter(i),
                                        E.i.safeRemove(i),
                                        e.setEndBefore(o),
                                        E.i.safeRemove(o);
                                else {
                                    const t = i.previousSibling;
                                    E.i.isText(t)
                                        ? e.setStart(
                                              t,
                                              t.nodeValue
                                                  ? t.nodeValue.length
                                                  : 0
                                          )
                                        : e.setStartBefore(i),
                                        E.i.safeRemove(i),
                                        e.collapse(!0);
                                }
                                e && this.selectRange(e);
                            }
                        }
                        save(e = !1) {
                            if (this.hasMarkers) return [];
                            const t = this.sel;
                            if (!t || !t.rangeCount) return [];
                            const i = [],
                                s = t.rangeCount,
                                o = [];
                            for (let e = 0; s > e; e += 1)
                                if (
                                    ((o[e] = t.getRangeAt(e)), o[e].collapsed)
                                ) {
                                    const t = this.marker(!0, o[e]);
                                    i[e] = {
                                        startId: t.id,
                                        collapsed: !0,
                                        startMarker: t.outerHTML,
                                    };
                                } else {
                                    const t = this.marker(!0, o[e]),
                                        s = this.marker(!1, o[e]);
                                    i[e] = {
                                        startId: t.id,
                                        endId: s.id,
                                        collapsed: !1,
                                        startMarker: t.outerHTML,
                                        endMarker: s.outerHTML,
                                    };
                                }
                            if (!e) {
                                t.removeAllRanges();
                                for (let e = s - 1; e >= 0; --e) {
                                    const s = this.doc.getElementById(
                                        i[e].startId
                                    );
                                    if (s)
                                        if (i[e].collapsed)
                                            o[e].setStartAfter(s),
                                                o[e].collapse(!0);
                                        else if (
                                            (o[e].setStartBefore(s), i[e].endId)
                                        ) {
                                            const t = this.doc.getElementById(
                                                i[e].endId
                                            );
                                            t && o[e].setEndAfter(t);
                                        }
                                    try {
                                        t.addRange(o[e].cloneRange());
                                    } catch (e) {}
                                }
                            }
                            return i;
                        }
                        focus(e = { preventScroll: !0 }) {
                            var t, i;
                            if (!this.isFocused()) {
                                const s = (0, N.getScrollParent)(
                                        this.j.container
                                    ),
                                    o = null == s ? void 0 : s.scrollTop;
                                this.j.iframe &&
                                    "complete" === this.doc.readyState &&
                                    this.j.iframe.focus(e),
                                    this.win.focus(),
                                    this.area.focus(e),
                                    o &&
                                        (null == s ? void 0 : s.scrollTo) &&
                                        s.scrollTo(0, o);
                                const r = this.sel,
                                    n = (null == r ? void 0 : r.rangeCount)
                                        ? null == r
                                            ? void 0
                                            : r.getRangeAt(0)
                                        : null;
                                if (
                                    !n ||
                                    !E.i.isOrContains(
                                        this.area,
                                        n.startContainer
                                    )
                                ) {
                                    const e = this.createRange();
                                    e.setStart(this.area, 0),
                                        e.collapse(!0),
                                        this.selectRange(e, !1);
                                }
                                return (
                                    this.j.editorIsActive ||
                                        null ===
                                            (i =
                                                null === (t = this.j) ||
                                                void 0 === t
                                                    ? void 0
                                                    : t.events) ||
                                        void 0 === i ||
                                        i.fire("focus"),
                                    !0
                                );
                            }
                            return !1;
                        }
                        isCollapsed() {
                            const e = this.sel;
                            for (let t = 0; e && e.rangeCount > t; t += 1)
                                if (!e.getRangeAt(t).collapsed) return !1;
                            return !0;
                        }
                        isFocused() {
                            return (
                                this.doc.hasFocus &&
                                this.doc.hasFocus() &&
                                this.area === this.doc.activeElement
                            );
                        }
                        current(e = !0) {
                            if (this.j.getRealMode() === s.MODE_WYSIWYG) {
                                const t = this.sel;
                                if (!t || 0 === t.rangeCount) return null;
                                const i = t.getRangeAt(0);
                                let s = i.startContainer,
                                    o = !1;
                                const r = (e) =>
                                    o ? e.lastChild : e.firstChild;
                                if (E.i.isTag(s, "br") && t.isCollapsed)
                                    return s;
                                if (!E.i.isText(s)) {
                                    if (
                                        ((s =
                                            i.startContainer.childNodes[
                                                i.startOffset
                                            ]),
                                        s ||
                                            ((s =
                                                i.startContainer.childNodes[
                                                    i.startOffset - 1
                                                ]),
                                            (o = !0)),
                                        s && t.isCollapsed && !E.i.isText(s))
                                    )
                                        if (!o && E.i.isText(s.previousSibling))
                                            s = s.previousSibling;
                                        else if (e) {
                                            let e = r(s);
                                            for (; e; ) {
                                                if (e && E.i.isText(e)) {
                                                    s = e;
                                                    break;
                                                }
                                                e = r(e);
                                            }
                                        }
                                    if (s && !t.isCollapsed && !E.i.isText(s)) {
                                        let e = s,
                                            t = s;
                                        do {
                                            (e = e.firstChild),
                                                (t = t.lastChild);
                                        } while (e && t && !E.i.isText(e));
                                        e === t &&
                                            e &&
                                            E.i.isText(e) &&
                                            (s = e);
                                    }
                                }
                                if (s && E.i.isOrContains(this.area, s))
                                    return s;
                            }
                            return null;
                        }
                        insertNode(e, t = !0, i = !0) {
                            this.errorNode(e),
                                this.j.e.fire("safeHTML", e),
                                !this.isFocused() &&
                                    this.j.isEditorMode() &&
                                    (this.focus(), this.restore());
                            const o = this.sel;
                            this.j.history.snapshot.transaction(() => {
                                var i;
                                if (
                                    (this.isCollapsed() ||
                                        this.j.execCommand("Delete"),
                                    this.j.e.fire("beforeInsertNode", e),
                                    o && o.rangeCount)
                                ) {
                                    const t = o.getRangeAt(0);
                                    E.i.isOrContains(
                                        this.area,
                                        t.commonAncestorContainer
                                    )
                                        ? E.i.isTag(
                                              t.startContainer,
                                              s.INSEPARABLE_TAGS
                                          ) && t.collapsed
                                            ? null ===
                                                  (i =
                                                      t.startContainer
                                                          .parentNode) ||
                                              void 0 === i ||
                                              i.insertBefore(
                                                  e,
                                                  t.startContainer
                                              )
                                            : E.i.safeInsertNode(t, e)
                                        : this.area.appendChild(e);
                                } else this.area.appendChild(e);
                                t &&
                                    (e.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                                        ? e.lastChild &&
                                          this.setCursorAfter(e.lastChild)
                                        : this.setCursorAfter(e));
                            }),
                                i &&
                                    this.j.events &&
                                    this.j.__imdSynchronizeValues(),
                                this.j.events &&
                                    this.j.e.fire("afterInsertNode", e);
                        }
                        insertHTML(e, t = !0) {
                            if ("" === e) return;
                            const i = this.j.createInside.div(),
                                s = this.j.createInside.fragment();
                            let o;
                            if (
                                (!this.isFocused() &&
                                    this.j.isEditorMode() &&
                                    (this.focus(), this.restore()),
                                E.i.isNode(e)
                                    ? i.appendChild(e)
                                    : (i.innerHTML = "" + e),
                                (this.j.isEditorMode() ||
                                    !1 !==
                                        this.j.e.fire(
                                            "insertHTML",
                                            i.innerHTML
                                        )) &&
                                    ((o = i.lastChild), o))
                            ) {
                                for (; i.firstChild; )
                                    (o = i.firstChild),
                                        s.appendChild(i.firstChild);
                                this.insertNode(
                                    s.firstChild && s.firstChild === s.lastChild
                                        ? s.lastChild
                                        : s,
                                    !1,
                                    !1
                                ),
                                    t &&
                                        (o
                                            ? this.setCursorAfter(o)
                                            : this.setCursorIn(s)),
                                    this.j.__imdSynchronizeValues();
                            }
                        }
                        insertImage(e, t = null, i = null) {
                            const s = (0, m.HD)(e)
                                ? this.j.createInside.element("img")
                                : e;
                            if (
                                ((0, m.HD)(e) && s.setAttribute("src", e),
                                null != i)
                            ) {
                                let e = "" + i;
                                e &&
                                    "auto" !== e &&
                                    0 > (e + "").indexOf("px") &&
                                    0 > (e + "").indexOf("%") &&
                                    (e += "px"),
                                    (0, N.call)(
                                        this.j.o.resizer
                                            .forImageChangeAttributes
                                            ? N.attr
                                            : N.css,
                                        s,
                                        "width",
                                        e
                                    );
                            }
                            t && "object" == typeof t && (0, N.css)(s, t);
                            const o = () => {
                                (s.offsetHeight > s.naturalHeight ||
                                    s.offsetWidth > s.naturalWidth) &&
                                    ((s.style.width = ""),
                                    (s.style.height = "")),
                                    s.removeEventListener("load", o);
                            };
                            this.j.e.on(s, "load", o),
                                s.complete && o(),
                                this.insertNode(s),
                                this.j.e.fire("afterInsertImage", s);
                        }
                        eachSelection(e) {
                            var t;
                            const i = this.sel;
                            if (i && i.rangeCount) {
                                const o = i.getRangeAt(0);
                                let r = o.commonAncestorContainer;
                                E.i.isHTMLElement(r) || (r = r.parentElement);
                                const n = [],
                                    a = o.startOffset,
                                    l = r.childNodes.length,
                                    c = l > a ? a : l - 1;
                                let d =
                                        o.startContainer === this.area
                                            ? r.childNodes[c]
                                            : o.startContainer,
                                    h =
                                        o.endContainer === this.area
                                            ? r.childNodes[o.endOffset - 1]
                                            : o.endContainer;
                                E.i.isText(d) &&
                                    d === o.startContainer &&
                                    o.startOffset ===
                                        (null === (t = d.nodeValue) ||
                                        void 0 === t
                                            ? void 0
                                            : t.length) &&
                                    d.nextSibling &&
                                    (d = d.nextSibling),
                                    E.i.isText(h) &&
                                        h === o.endContainer &&
                                        0 === o.endOffset &&
                                        h.previousSibling &&
                                        (h = h.previousSibling);
                                const u = (e) => {
                                    !e ||
                                        e === r ||
                                        E.i.isEmptyTextNode(e) ||
                                        (0, m._V)(e) ||
                                        n.push(e);
                                };
                                u(d),
                                    d !== h &&
                                        E.i.isOrContains(r, d, !0) &&
                                        E.i.find(
                                            d,
                                            (e) => (
                                                u(e),
                                                e === h ||
                                                    (e &&
                                                        e.contains &&
                                                        e.contains(h))
                                            ),
                                            r,
                                            !0,
                                            !1
                                        );
                                const p = (t) => {
                                    if (
                                        E.i.isOrContains(this.j.editor, t, !0)
                                    ) {
                                        if (t.nodeName.match(/^(UL|OL)$/))
                                            return (0, N.toArray)(
                                                t.childNodes
                                            ).forEach(p);
                                        if (E.i.isTag(t, "li"))
                                            if (t.firstChild) t = t.firstChild;
                                            else {
                                                const e =
                                                    this.j.createInside.text(
                                                        s.INVISIBLE_SPACE
                                                    );
                                                t.appendChild(e), (t = e);
                                            }
                                        e(t);
                                    }
                                };
                                0 === n.length &&
                                    E.i.isEmptyTextNode(d) &&
                                    n.push(d),
                                    0 === n.length &&
                                        d.firstChild &&
                                        n.push(d.firstChild),
                                    n.forEach(p);
                            }
                        }
                        cursorInTheEdge(e, t) {
                            var i, o;
                            const r = !e,
                                n =
                                    null === (i = this.sel) || void 0 === i
                                        ? void 0
                                        : i.getRangeAt(0),
                                a = this.current(!1);
                            if (!n || !a || !E.i.isOrContains(t, a, !0))
                                return null;
                            const l = e ? n.startContainer : n.endContainer,
                                c = e ? n.startOffset : n.endOffset,
                                d = (e) =>
                                    !(
                                        !e ||
                                        E.i.isTag(e, "br") ||
                                        E.i.isEmptyTextNode(e) ||
                                        E.i.isTemporary(e) ||
                                        (E.i.isElement(e) &&
                                            !0 ===
                                                this.j.e.fire(
                                                    "isInvisibleForCursor",
                                                    e
                                                ))
                                    );
                            if (E.i.isText(l)) {
                                const t = (
                                    null === (o = l.nodeValue) || void 0 === o
                                        ? void 0
                                        : o.length
                                )
                                    ? l.nodeValue
                                    : "";
                                if (
                                    r &&
                                    t.replace(
                                        (0, s.INVISIBLE_SPACE_REG_EXP_END)(),
                                        ""
                                    ).length > c
                                )
                                    return !1;
                                const i = (0,
                                s.INVISIBLE_SPACE_REG_EXP_START)().exec(t);
                                if (
                                    e &&
                                    ((i && c > i[0].length) || (!i && c > 0))
                                )
                                    return !1;
                            } else {
                                const e = (0, N.toArray)(l.childNodes);
                                if (r) {
                                    if (e.slice(c).some(d)) return !1;
                                } else if (e.slice(0, c).some(d)) return !1;
                            }
                            let h = a;
                            for (; h && h !== t; ) {
                                const t = E.i.sibling(h, e);
                                if (t) {
                                    if (((h = t), h && d(h))) return !1;
                                } else h = h.parentNode;
                            }
                            return !0;
                        }
                        cursorOnTheLeft(e) {
                            return this.cursorInTheEdge(!0, e);
                        }
                        cursorOnTheRight(e) {
                            return this.cursorInTheEdge(!1, e);
                        }
                        setCursorAfter(e) {
                            return this.setCursorNearWith(e, !1);
                        }
                        setCursorBefore(e) {
                            return this.setCursorNearWith(e, !0);
                        }
                        setCursorNearWith(e, t) {
                            var i, o;
                            if (
                                (this.errorNode(e),
                                !E.i.up(
                                    e,
                                    (e) =>
                                        e === this.area ||
                                        (e && e.parentNode === this.area),
                                    this.area
                                ))
                            )
                                throw (0, N.error)(
                                    "Node element must be in editor"
                                );
                            const r = this.createRange();
                            let n = null;
                            return (
                                E.i.isText(e)
                                    ? t
                                        ? r.setStart(e, 0)
                                        : r.setEnd(
                                              e,
                                              null !==
                                                  (o =
                                                      null ===
                                                          (i = e.nodeValue) ||
                                                      void 0 === i
                                                          ? void 0
                                                          : i.length) &&
                                                  void 0 !== o
                                                  ? o
                                                  : 0
                                          )
                                    : ((n = this.j.createInside.text(
                                          s.INVISIBLE_SPACE
                                      )),
                                      t
                                          ? r.setStartBefore(e)
                                          : r.setEndAfter(e),
                                      r.collapse(t),
                                      E.i.safeInsertNode(r, n),
                                      r.selectNode(n)),
                                r.collapse(t),
                                this.selectRange(r),
                                n
                            );
                        }
                        setCursorIn(e, t = !1) {
                            if (
                                (this.errorNode(e),
                                !E.i.up(
                                    e,
                                    (e) =>
                                        e === this.area ||
                                        (e && e.parentNode === this.area),
                                    this.area
                                ))
                            )
                                throw (0, N.error)(
                                    "Node element must be in editor"
                                );
                            const i = this.createRange();
                            let o = e,
                                r = e;
                            do {
                                if (E.i.isText(o)) break;
                                (r = o), (o = t ? o.firstChild : o.lastChild);
                            } while (o);
                            if (!o) {
                                const e = this.j.createInside.text(
                                    s.INVISIBLE_SPACE
                                );
                                /^(img|br|input)$/i.test(r.nodeName)
                                    ? (o = r)
                                    : (r.appendChild(e), (r = e));
                            }
                            return (
                                i.selectNodeContents(o || r),
                                i.collapse(t),
                                this.selectRange(i),
                                r
                            );
                        }
                        selectRange(e, t = !0) {
                            const i = this.sel;
                            return (
                                t && !this.isFocused() && this.focus(),
                                i && (i.removeAllRanges(), i.addRange(e)),
                                this.j.e.fire("changeSelection"),
                                this
                            );
                        }
                        select(e, t = !1) {
                            if (
                                (this.errorNode(e),
                                !E.i.up(
                                    e,
                                    (e) =>
                                        e === this.area ||
                                        (e && e.parentNode === this.area),
                                    this.area
                                ))
                            )
                                throw (0, N.error)(
                                    "Node element must be in editor"
                                );
                            const i = this.createRange();
                            return (
                                i[t ? "selectNodeContents" : "selectNode"](e),
                                this.selectRange(i)
                            );
                        }
                        get html() {
                            const e = this.sel;
                            if (e && e.rangeCount > 0) {
                                const t = e.getRangeAt(0).cloneContents(),
                                    i = this.j.createInside.div();
                                return i.appendChild(t), i.innerHTML;
                            }
                            return "";
                        }
                        *wrapInTagGen() {
                            if (this.isCollapsed()) {
                                const e = this.jodit.createInside.element(
                                    "font",
                                    s.INVISIBLE_SPACE
                                );
                                this.insertNode(e, !1, !1);
                                const [t] = this.markers;
                                return (
                                    t
                                        ? e.appendChild(t)
                                        : (this.setCursorIn(e), this.save()),
                                    yield e,
                                    void E.i.unwrap(e)
                                );
                            }
                            if (
                                ((0, N.$$)(
                                    "*[style*=font-size]",
                                    this.area
                                ).forEach((e) =>
                                    (0, N.attr)(
                                        e,
                                        "data-font-size",
                                        "" + e.style.fontSize
                                    )
                                ),
                                this.isCollapsed())
                            ) {
                                const e = this.j.createInside.element("font");
                                (0, N.attr)(e, "size", 7),
                                    this.insertNode(e, !1, !1);
                            } else
                                this.j.nativeExecCommand("fontsize", !1, "7");
                            (0, N.$$)("*[data-font-size]", this.area).forEach(
                                (e) => {
                                    const t = (0, N.attr)(e, "data-font-size");
                                    t &&
                                        ((e.style.fontSize = t),
                                        (0, N.attr)(e, "data-font-size", null));
                                }
                            );
                            const e = (0, N.$$)('font[size="7"]', this.area);
                            for (const t of e) {
                                const { firstChild: e, lastChild: i } = t;
                                (e && e === i && (0, m._V)(e)) ||
                                    (e && (0, m._V)(e) && E.i.before(t, e),
                                    i && (0, m._V)(i) && E.i.after(t, i),
                                    yield t),
                                    E.i.unwrap(t);
                            }
                        }
                        wrapInTag(e) {
                            const t = [];
                            for (const i of this.wrapInTagGen())
                                try {
                                    if (
                                        i.firstChild &&
                                        i.firstChild === i.lastChild &&
                                        (0, m._V)(i.firstChild)
                                    )
                                        continue;
                                    (0, m.mf)(e)
                                        ? e(i)
                                        : t.push(
                                              E.i.replace(
                                                  i,
                                                  e,
                                                  this.j.createInside
                                              )
                                          );
                                } finally {
                                    const e = i.parentNode;
                                    e &&
                                        (E.i.unwrap(i),
                                        E.i.isEmpty(e) && E.i.unwrap(e));
                                }
                            return t;
                        }
                        commitStyle(e) {
                            new ie(e).apply(this.j);
                        }
                        applyStyle(e, t = {}) {
                            this.commitStyle({ style: e, ...t });
                        }
                        splitSelection(e) {
                            if (!this.isCollapsed()) return null;
                            const t = this.createRange(),
                                i = this.range;
                            t.setStartBefore(e);
                            const o = this.cursorOnTheRight(e),
                                r = this.cursorOnTheLeft(e),
                                n = this.j.createInside.element("br"),
                                a = this.j.createInside.text(s.INVISIBLE_SPACE),
                                l = a.cloneNode();
                            try {
                                if (o || r) {
                                    E.i.safeInsertNode(i, n);
                                    const e = (e, t) => {
                                        let i = t(e);
                                        for (; i; ) {
                                            const e = t(i);
                                            if (
                                                !i ||
                                                (!E.i.isTag(i, "br") &&
                                                    !E.i.isEmptyTextNode(i))
                                            )
                                                break;
                                            E.i.safeRemove(i), (i = e);
                                        }
                                    };
                                    e(n, (e) => e.nextSibling),
                                        e(n, (e) => e.previousSibling),
                                        E.i.after(n, l),
                                        E.i.before(n, a),
                                        o
                                            ? (t.setEndBefore(n),
                                              i.setEndBefore(n))
                                            : (t.setEndAfter(n),
                                              i.setEndAfter(n));
                                } else
                                    t.setEnd(i.startContainer, i.startOffset);
                                const s = t.extractContents(),
                                    c = (e) =>
                                        E.i.each(
                                            e,
                                            (e) =>
                                                E.i.isEmptyTextNode(e) &&
                                                E.i.safeRemove(e)
                                        );
                                if (e.parentNode)
                                    try {
                                        if (
                                            (c(s),
                                            c(e),
                                            e.parentNode.insertBefore(s, e),
                                            o &&
                                                (null == n
                                                    ? void 0
                                                    : n.parentNode))
                                        ) {
                                            const e = this.createRange();
                                            e.setStartBefore(n),
                                                this.selectRange(e);
                                        }
                                    } catch (e) {}
                                const d = (e) => {
                                    var t, i, s;
                                    (null ===
                                        (t =
                                            null == e
                                                ? void 0
                                                : e.parentNode) || void 0 === t
                                        ? void 0
                                        : t.firstChild) ===
                                        (null ===
                                            (i =
                                                null == e
                                                    ? void 0
                                                    : e.parentNode) ||
                                        void 0 === i
                                            ? void 0
                                            : i.lastChild) &&
                                        (null ===
                                            (s =
                                                null == e
                                                    ? void 0
                                                    : e.parentNode) ||
                                            void 0 === s ||
                                            s.appendChild(n.cloneNode()));
                                };
                                d(a), d(l);
                            } finally {
                                E.i.safeRemove(a), E.i.safeRemove(l);
                            }
                            return e.previousElementSibling;
                        }
                        expandSelection() {
                            if (this.isCollapsed()) return this;
                            const { range: e } = this,
                                t = e.cloneRange();
                            if (
                                !E.i.isOrContains(
                                    this.j.editor,
                                    e.commonAncestorContainer,
                                    !0
                                )
                            )
                                return this;
                            const i = (t) => {
                                    const i = this.j.createInside.fake(),
                                        s = e.cloneRange();
                                    return (
                                        s.collapse(t),
                                        E.i.safeInsertNode(s, i),
                                        (0, re.f)(i, t, this.j.editor),
                                        i
                                    );
                                },
                                s = i(!0),
                                o = i(!1);
                            t.setStartAfter(s), t.setEndBefore(o);
                            const r = E.i.findSibling(s, !1),
                                n = E.i.findSibling(o, !0);
                            if (r !== n) {
                                const e =
                                        E.i.isElement(r) &&
                                        E.i.isOrContains(r, o),
                                    i =
                                        !e &&
                                        E.i.isElement(n) &&
                                        E.i.isOrContains(n, s);
                                if (e || i) {
                                    let i = e ? r : n,
                                        a = i;
                                    for (; E.i.isElement(i); )
                                        (i = e
                                            ? i.firstElementChild
                                            : i.lastElementChild),
                                            i &&
                                                E.i.isOrContains(
                                                    i,
                                                    e ? o : s
                                                ) &&
                                                (a = i);
                                    e
                                        ? t.setStart(a, 0)
                                        : t.setEnd(a, a.childNodes.length);
                                }
                            }
                            return (
                                this.selectRange(t), E.i.safeRemove(s, o), this
                            );
                        }
                    }
                    (0, se.gn)(
                        [oe.autobind],
                        ne.prototype,
                        "createRange",
                        null
                    ),
                        (0, se.gn)([oe.autobind], ne.prototype, "focus", null),
                        (0, se.gn)(
                            [oe.autobind],
                            ne.prototype,
                            "setCursorAfter",
                            null
                        ),
                        (0, se.gn)(
                            [oe.autobind],
                            ne.prototype,
                            "setCursorBefore",
                            null
                        ),
                        (0, se.gn)(
                            [oe.autobind],
                            ne.prototype,
                            "setCursorIn",
                            null
                        );
                },
                50372(e, t, i) {
                    "use strict";
                    i.d(t, {
                        Ke() {
                            return l;
                        },
                    });
                    const s = (() => {
                        let e;
                        return () => (
                            void 0 === e &&
                                (e = (() => {
                                    const e = "___Jodit___" + Math.random();
                                    try {
                                        localStorage.setItem(e, "1");
                                        const t =
                                            "1" === localStorage.getItem(e);
                                        return localStorage.removeItem(e), t;
                                    } catch (e) {}
                                    return !1;
                                })()),
                            e
                        );
                    })();
                    class o {
                        set(e, t) {
                            try {
                                const i = localStorage.getItem(this.rootKey),
                                    s = i ? JSON.parse(i) : {};
                                (s[e] = t),
                                    localStorage.setItem(
                                        this.rootKey,
                                        JSON.stringify(s)
                                    );
                            } catch (e) {}
                            return this;
                        }
                        delete(e) {
                            try {
                                localStorage.removeItem(this.rootKey);
                            } catch (e) {}
                            return this;
                        }
                        get(e) {
                            try {
                                const t = localStorage.getItem(this.rootKey),
                                    i = t ? JSON.parse(t) : {};
                                return void 0 !== i[e] ? i[e] : null;
                            } catch (e) {}
                        }
                        exists(e) {
                            return null != this.get(e);
                        }
                        constructor(e) {
                            this.rootKey = e;
                        }
                        clear() {
                            try {
                                localStorage.removeItem(this.rootKey);
                            } catch (e) {}
                            return this;
                        }
                    }
                    var r = i(47643);
                    class n {
                        constructor() {
                            this.data = new Map();
                        }
                        set(e, t) {
                            return this.data.set(e, t), this;
                        }
                        delete(e) {
                            return this.data.delete(e), this;
                        }
                        get(e) {
                            return this.data.get(e);
                        }
                        exists(e) {
                            return this.data.has(e);
                        }
                        clear() {
                            return this.data.clear(), this;
                        }
                    }
                    const a = "Jodit_";
                    class l {
                        set(e, t) {
                            return (
                                this.provider.set(
                                    (0, r.camelCase)(this.prefix + e),
                                    t
                                ),
                                this
                            );
                        }
                        delete(e) {
                            return (
                                this.provider.delete(
                                    (0, r.camelCase)(this.prefix + e)
                                ),
                                this
                            );
                        }
                        get(e) {
                            return this.provider.get(
                                (0, r.camelCase)(this.prefix + e)
                            );
                        }
                        exists(e) {
                            return this.provider.exists(
                                (0, r.camelCase)(this.prefix + e)
                            );
                        }
                        clear() {
                            return this.provider.clear(), this;
                        }
                        constructor(e, t) {
                            (this.provider = e),
                                (this.prefix = a),
                                t && (this.prefix += t);
                        }
                        static makeStorage(e = !1, t) {
                            let i;
                            return (
                                e && s() && (i = new o(a + t)),
                                i || (i = new n()),
                                new l(i, t)
                            );
                        }
                    }
                },
                78930(e, t, i) {
                    "use strict";
                    i.d(t, {
                        lf() {
                            return c;
                        },
                        Fx() {
                            return o;
                        },
                        $t() {
                            return n;
                        },
                    });
                    var s = i(21305);
                    class o {
                        getElm(e) {
                            return this.container.querySelector(
                                "." + this.getFullElName(e)
                            );
                        }
                        getElms(e) {
                            return (0, s.q)(
                                this.container.querySelectorAll(
                                    "." + this.getFullElName(e)
                                )
                            );
                        }
                    }
                    var r = i(33713);
                    class n {
                        afterSetMod(e, t) {}
                        setMod(e, t, i) {
                            if (((e = e.toLowerCase()), this.mods[e] === t))
                                return this;
                            const o = `${this.componentName}_${e}`,
                                n = (i || this.container).classList;
                            return (
                                (0, s.q)(n).forEach((e) => {
                                    0 === e.indexOf(o) && n.remove(e);
                                }),
                                !(0, r.n)(t) &&
                                    "" !== t &&
                                    n.add(`${o}_${("" + t).toLowerCase()}`),
                                (this.mods[e] = t),
                                this.afterSetMod(e, t),
                                this
                            );
                        }
                        getMod(e) {
                            var t;
                            return null !== (t = this.mods[e]) && void 0 !== t
                                ? t
                                : null;
                        }
                    }
                    var a = i(6293),
                        l = i(47643);
                    class c {
                        dlg(e) {
                            const t = new a.Dialog({
                                language: this.o.language,
                                shadowRoot: this.o.shadowRoot,
                                ownerWindow: this.o.ownerWindow,
                                defaultTimeout: this.o.defaultTimeout,
                                theme: this.o.theme,
                                globalFullSize: this.o.globalFullSize,
                                ...e,
                            });
                            return (
                                (0, l.markOwner)(this, t.container),
                                (t.parent = this),
                                t.bindDestruct(this)
                            );
                        }
                        confirm(e, t, i) {
                            return (
                                (0, l.isString)(t) && (t = this.i18n(t)),
                                a.Confirm.call(this.dlg(), this.i18n(e), t, i)
                            );
                        }
                        prompt(e, t, i, s, o) {
                            return (
                                (0, l.isString)(t) && (t = this.i18n(t)),
                                (0, l.isString)(s) && (s = this.i18n(s)),
                                a.Prompt.call(
                                    this.dlg(),
                                    this.i18n(e),
                                    t,
                                    i,
                                    s,
                                    o
                                )
                            );
                        }
                        alert(e, t, i, s) {
                            return (
                                (0, l.isString)(e) && (e = this.i18n(e)),
                                (0, l.isString)(t) && (t = this.i18n(t)),
                                a.Alert.call(this.dlg(), e, t, i, s)
                            );
                        }
                    }
                },
                4846(e, t, i) {
                    "use strict";
                    i.d(t, {
                        Yc() {
                            return p;
                        },
                        y3() {
                            return m;
                        },
                        zx() {
                            return f;
                        },
                    });
                    var s = i(52784),
                        o = i(10783),
                        r = i(38886),
                        n = i(25916),
                        a = i(20405),
                        l = i(27177),
                        c = i(34759),
                        d = i(30714),
                        h = i(51663),
                        u = i(78680);
                    const p = () => ({
                        size: "middle",
                        type: "button",
                        name: "",
                        value: "",
                        variant: "initial",
                        disabled: !1,
                        activated: !1,
                        icon: { name: "empty", fill: "", iconURL: "" },
                        tooltip: "",
                        text: "",
                        tabIndex: void 0,
                    });
                    let m = class e extends o.u {
                        className() {
                            return "UIButton";
                        }
                        setState(e) {
                            return Object.assign(this.state, e), this;
                        }
                        onChangeSize() {
                            this.setMod("size", this.state.size);
                        }
                        onChangeType() {
                            (0, n.attr)(
                                this.container,
                                "type",
                                this.state.type
                            );
                        }
                        updateSize() {
                            const e = this.closest(d.b);
                            e && (this.state.size = e.buttonSize);
                        }
                        onChangeStatus() {
                            this.setMod("variant", this.state.variant);
                        }
                        onChangeText() {
                            this.text.textContent = this.jodit.i18n(
                                this.state.text
                            );
                        }
                        onChangeTextSetMode() {
                            this.setMod(
                                "text-icons",
                                !!this.state.text.trim().length
                            );
                        }
                        onChangeDisabled() {
                            (0, n.attr)(
                                this.container,
                                "disabled",
                                this.state.disabled || null
                            );
                        }
                        onChangeActivated() {
                            (0, n.attr)(
                                this.container,
                                "aria-pressed",
                                this.state.activated
                            );
                        }
                        onChangeName() {
                            this.container.classList.add(
                                `${this.componentName}_${this.clearName(
                                    this.state.name
                                )}`
                            ),
                                (this.name = this.state.name),
                                (0, n.attr)(
                                    this.container,
                                    "data-ref",
                                    this.state.name
                                ),
                                (0, n.attr)(
                                    this.container,
                                    "ref",
                                    this.state.name
                                );
                        }
                        onChangeTooltip() {
                            this.get("j.o.useNativeTooltip") &&
                                (0, n.attr)(
                                    this.container,
                                    "title",
                                    this.state.tooltip
                                ),
                                (0, n.attr)(
                                    this.container,
                                    "aria-label",
                                    this.state.tooltip
                                );
                        }
                        onChangeTabIndex() {
                            (0, n.attr)(
                                this.container,
                                "tabindex",
                                this.state.tabIndex
                            );
                        }
                        onChangeIcon() {
                            const e = this.get("j.o.textIcons");
                            if (!0 === e || ((0, l.m)(e) && e(this.state.name)))
                                return;
                            r.i.detach(this.icon);
                            const t = c.J.makeIcon(this.j, this.state.icon);
                            t && this.icon.appendChild(t);
                        }
                        focus() {
                            this.container.focus();
                        }
                        isFocused() {
                            const { activeElement: e } = this.od;
                            return !(
                                !e || !r.i.isOrContains(this.container, e)
                            );
                        }
                        createContainer() {
                            const e = this.componentName,
                                t = this.j.c.element("button", {
                                    class: e,
                                    type: "button",
                                    role: "button",
                                    ariaPressed: !1,
                                });
                            return (
                                (this.icon = this.j.c.span(e + "__icon")),
                                (this.text = this.j.c.span(e + "__text")),
                                t.appendChild(this.icon),
                                t.appendChild(this.text),
                                this.j.e.on(t, "click", this.onActionFire),
                                t
                            );
                        }
                        constructor(e, t) {
                            super(e),
                                (this.isButton = !0),
                                (this.state = p()),
                                (this.actionHandlers = []),
                                this.updateSize(),
                                this.onChangeSize(),
                                this.onChangeStatus(),
                                t &&
                                    this.hookStatus(u.n.ready, () => {
                                        this.setState(t);
                                    });
                        }
                        destruct() {
                            return (
                                this.j.e.off(this.container), super.destruct()
                            );
                        }
                        onAction(e) {
                            return this.actionHandlers.push(e), this;
                        }
                        onActionFire(e) {
                            (e.buffer = { actionTrigger: this }),
                                this.actionHandlers.forEach((t) =>
                                    t.call(this, e)
                                );
                        }
                    };
                    function f(e, t, i, s) {
                        const o = new m(e);
                        return (
                            (o.state.tabIndex = e.o.allowTabNavigation
                                ? 0
                                : -1),
                            (0, a.H)(t)
                                ? ((o.state.icon.name = t),
                                  (o.state.name = t),
                                  s && (o.state.variant = s),
                                  i && (o.state.text = i))
                                : o.setState(t),
                            o
                        );
                    }
                    (0, s.gn)(
                        [(0, h.watch)("state.size")],
                        m.prototype,
                        "onChangeSize",
                        null
                    ),
                        (0, s.gn)(
                            [(0, h.watch)("state.type")],
                            m.prototype,
                            "onChangeType",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("parentElement")],
                            m.prototype,
                            "updateSize",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("state.variant")],
                            m.prototype,
                            "onChangeStatus",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("state.text")],
                            m.prototype,
                            "onChangeText",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("state.text")],
                            m.prototype,
                            "onChangeTextSetMode",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("state.disabled")],
                            m.prototype,
                            "onChangeDisabled",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("state.activated")],
                            m.prototype,
                            "onChangeActivated",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("state.name")],
                            m.prototype,
                            "onChangeName",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("state.tooltip")],
                            m.prototype,
                            "onChangeTooltip",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("state.tabIndex")],
                            m.prototype,
                            "onChangeTabIndex",
                            null
                        ),
                        (0, s.gn)(
                            [(0, h.watch)("state.icon")],
                            m.prototype,
                            "onChangeIcon",
                            null
                        ),
                        (0, s.gn)(
                            [h.autobind],
                            m.prototype,
                            "onActionFire",
                            null
                        ),
                        (m = (0, s.gn)([h.component], m));
                },
                18095(e, t, i) {
                    "use strict";
                    i.d(t, {
                        zx() {
                            return s.zx;
                        },
                        y3() {
                            return s.y3;
                        },
                        BO() {
                            return a;
                        },
                        Yc() {
                            return s.Yc;
                        },
                        Ne() {
                            return u;
                        },
                    });
                    var s = i(4846),
                        o = i(52784),
                        r = i(1510),
                        n = i(46696);
                    i(52378);
                    let a = class e extends r.q {
                        className() {
                            return "UIButtonGroup";
                        }
                        render(e) {
                            return `<div>\n\t\t\t<div class="&__label">~${e.label}~</div>\n\t\t\t<div class="&__options"></div>\n\t\t</div>`;
                        }
                        appendChildToContainer(e) {
                            this.getElm("options").appendChild(e);
                        }
                        constructor(e, t = { radio: !0 }) {
                            var i, o;
                            super(
                                e,
                                null === (i = t.options) || void 0 === i
                                    ? void 0
                                    : i.map((t) => {
                                          const i = new s.y3(e, {
                                              text: t.text,
                                              value: t.value,
                                              variant: "primary",
                                          });
                                          return (
                                              i.onAction(() => {
                                                  this.select(t.value);
                                              }),
                                              i
                                          );
                                      }),
                                t
                            ),
                                (this.options = t),
                                this.select(
                                    null !== (o = t.value) && void 0 !== o
                                        ? o
                                        : 0
                                );
                        }
                        select(e) {
                            var t, i;
                            this.elements.forEach((t, i) => {
                                i === e || t.state.value === e
                                    ? (t.state.activated = !0)
                                    : this.options.radio &&
                                      (t.state.activated = !1);
                            });
                            const s = this.elements
                                .filter((e) => e.state.activated)
                                .map((e) => ({
                                    text: e.state.text,
                                    value: e.state.value,
                                }));
                            this.jodit.e.fire(this, "select", s),
                                null === (i = (t = this.options).onChange) ||
                                    void 0 === i ||
                                    i.call(t, s);
                        }
                    };
                    a = (0, o.gn)([n.w], a);
                    var l = i(47643),
                        c = i(78855),
                        d = i(51663),
                        h = i(10783);
                    class u extends h.u {
                        className() {
                            return "UITooltip";
                        }
                        constructor(e) {
                            super(e),
                                (this.__isOpened = !1),
                                (this.__useCount = 1),
                                (this.__delayShowTimeout = 0),
                                (0, c.ZO)(e, u).appendChild(this.container);
                            let t = 0;
                            e.e
                                .off(".tooltip")
                                .on("showTooltip.tooltip", (i, s) => {
                                    e.async.clearTimeout(t), this.__open(i, s);
                                })
                                .on(
                                    "delayShowTooltip.tooltip",
                                    this.__delayOpen
                                )
                                .on("escape.tooltip", this.__close)
                                .on(
                                    "hideTooltip.tooltip change.tooltip scroll.tooltip changePlace.tooltip hidePopup.tooltip closeAllPopups.tooltip",
                                    () => {
                                        this.j.async.clearTimeout(
                                            this.__delayShowTimeout
                                        ),
                                            (t = e.async.setTimeout(
                                                this.__close,
                                                this.j.defaultTimeout
                                            ));
                                    }
                                );
                        }
                        static make(e) {
                            let t = (0, l.dataBind)(e, "ui-tooltip");
                            return t
                                ? ((t.__useCount += 1), t)
                                : ((t = new u(e)),
                                  (0, l.dataBind)(e, "ui-tooltip", t),
                                  t);
                        }
                        __delayOpen(e, t) {
                            const i =
                                this.j.o.showTooltipDelay ||
                                this.j.defaultTimeout;
                            this.j.async.clearTimeout(this.__delayShowTimeout),
                                (this.__delayShowTimeout =
                                    this.j.async.setTimeout(
                                        () => this.__open(e, t),
                                        { timeout: i, label: "tooltip" }
                                    ));
                        }
                        __open(e, t) {
                            this.setMod("visible", !0),
                                (this.container.innerHTML = t),
                                (this.__isOpened = !0),
                                this.__setPosition(e);
                        }
                        __setPosition(e) {
                            const t = e();
                            (0, l.css)(this.container, { left: t.x, top: t.y });
                        }
                        __close() {
                            this.j.async.clearTimeout(this.__delayShowTimeout),
                                this.__isOpened &&
                                    ((this.__isOpened = !1),
                                    this.setMod("visible", !1),
                                    (0, l.css)(this.container, { left: -5e3 }));
                        }
                        destruct() {
                            var e;
                            this.__useCount--,
                                this.__useCount ||
                                    (null === (e = this.j) ||
                                        void 0 === e ||
                                        e.e.off(".tooltip"),
                                    this.__close(),
                                    super.destruct());
                        }
                    }
                    (0, o.gn)([d.autobind], u.prototype, "__delayOpen", null),
                        (0, o.gn)([d.autobind], u.prototype, "__close", null);
                },
                10783(e, t, i) {
                    "use strict";
                    i.d(t, {
                        u() {
                            return h;
                        },
                    });
                    var s,
                        o = i(52784),
                        r = i(95950),
                        n = i(38886),
                        a = i(78930),
                        l = i(20405),
                        c = i(34759),
                        d = i(51663);
                    let h = (s = class e extends r.Hr {
                        get parentElement() {
                            return this.__parentElement;
                        }
                        set parentElement(e) {
                            (this.__parentElement = e),
                                e &&
                                    e.hookStatus("beforeDestruct", () =>
                                        this.destruct()
                                    ),
                                this.updateParentElement(this);
                        }
                        bubble(e) {
                            let t = this.parentElement;
                            for (; t; ) e(t), (t = t.parentElement);
                            return this;
                        }
                        updateParentElement(e) {
                            var t;
                            return (
                                null === (t = this.__parentElement) ||
                                    void 0 === t ||
                                    t.updateParentElement(e),
                                this
                            );
                        }
                        get(e, t) {
                            return super.get(e, t) || this.getElm(e);
                        }
                        closest(e) {
                            const t =
                                "object" == typeof e
                                    ? (t) => t === e
                                    : (t) => r.wA.isInstanceOf(t, e);
                            let i = this.__parentElement;
                            for (; i; ) {
                                if (t(i)) return i;
                                i =
                                    !i.parentElement &&
                                    i.container.parentElement
                                        ? s.closestElement(
                                              i.container.parentElement,
                                              s
                                          )
                                        : i.parentElement;
                            }
                            return null;
                        }
                        static closestElement(e, t) {
                            const i = n.i.up(e, (e) => {
                                if (e) {
                                    const { component: i } = e;
                                    return i && r.wA.isInstanceOf(i, t);
                                }
                                return !1;
                            });
                            return i
                                ? null == i
                                    ? void 0
                                    : i.component
                                : null;
                        }
                        update() {}
                        appendTo(e) {
                            return e.appendChild(this.container), this;
                        }
                        clearName(e) {
                            return e.replace(/[^a-zA-Z0-9]/g, "_");
                        }
                        render(e) {
                            return this.j.c.div(this.componentName);
                        }
                        createContainer(e) {
                            const t = this.render(e);
                            if ((0, l.H)(t)) {
                                const e = this.parseTemplate(t);
                                return e.classList.add(this.componentName), e;
                            }
                            return t;
                        }
                        parseTemplate(e) {
                            return this.j.c.fromHTML(
                                e
                                    .replace(
                                        /\*([^*]+?)\*/g,
                                        (e, t) => c.J.get(t) || ""
                                    )
                                    .replace(/&__/g, this.componentName + "__")
                                    .replace(/~([^~]+?)~/g, (e, t) =>
                                        this.i18n(t)
                                    )
                            );
                        }
                        constructor(e, t) {
                            super(e),
                                (this.name = ""),
                                (this.__parentElement = null),
                                (this.mods = {}),
                                (this.container = this.createContainer(t)),
                                Object.defineProperty(
                                    this.container,
                                    "component",
                                    { value: this, configurable: !0 }
                                );
                        }
                        destruct() {
                            return (
                                n.i.safeRemove(this.container),
                                (this.parentElement = null),
                                super.destruct()
                            );
                        }
                    });
                    h = s = (0, o.gn)([(0, d.derive)(a.$t, a.Fx)], h);
                },
                21861(e, t, i) {
                    "use strict";
                    i.d(t, {
                        eC() {
                            return w;
                        },
                        mA() {
                            return y;
                        },
                        x4() {
                            return p;
                        },
                        u3() {
                            return n.u;
                        },
                        Cj() {
                            return d;
                        },
                        GJ() {
                            return f;
                        },
                    });
                    var s,
                        o = i(52784),
                        r = i(1510),
                        n = i(62353),
                        a = i(69403),
                        l = i(46696),
                        c = i(46658);
                    let d = (s = class e extends n.u {
                        className() {
                            return "UISelect";
                        }
                        createContainer(e) {
                            var t;
                            const i = super.createContainer(e),
                                { j: s } = this,
                                { nativeInput: o } = this,
                                r = () => s.create.element("option");
                            if (void 0 !== e.placeholder) {
                                const t = r();
                                (t.value = ""),
                                    (t.text = s.i18n(e.placeholder)),
                                    o.add(t);
                            }
                            return (
                                null === (t = e.options) ||
                                    void 0 === t ||
                                    t.forEach((e) => {
                                        const t = r();
                                        (t.value = "" + e.value),
                                            (t.text = s.i18n(e.text)),
                                            o.add(t);
                                    }),
                                e.size &&
                                    e.size > 0 &&
                                    (0, a.Lj)(o, "size", e.size),
                                e.multiple && (0, a.Lj)(o, "multiple", ""),
                                i
                            );
                        }
                        createNativeInput() {
                            return this.j.create.element("select");
                        }
                        updateValidators() {
                            super.updateValidators(),
                                this.state.required &&
                                    (this.validators.delete(c.g.required),
                                    this.validators.add(c.s.C));
                        }
                        constructor(e, t) {
                            super(e, t),
                                (this.state = { ...s.defaultState }),
                                Object.assign(this.state, t);
                        }
                    });
                    (d.defaultState = {
                        ...n.u.defaultState,
                        options: [],
                        size: 1,
                        multiple: !1,
                    }),
                        (d = s = (0, o.gn)([l.w], d));
                    var h = i(25916),
                        u = i(48961);
                    let p = class e extends r.q {
                        className() {
                            return "UIForm";
                        }
                        submit() {
                            this.j.e.fire(this.container, "submit");
                        }
                        validate() {
                            const e = this.allChildren.filter((e) =>
                                u.w.isInstanceOf(e, n.u)
                            );
                            for (const t of e) if (!t.validate()) return !1;
                            const t = this.allChildren.filter((e) =>
                                u.w.isInstanceOf(e, d)
                            );
                            for (const e of t) if (!e.validate()) return !1;
                            return !0;
                        }
                        onSubmit(e) {
                            this.j.e.on(this.container, "submit", () => {
                                const t = this.allChildren.filter((e) =>
                                    u.w.isInstanceOf(e, n.u)
                                );
                                return (
                                    !!this.validate() &&
                                    (e(
                                        t.reduce(
                                            (e, t) => (
                                                (e[t.state.name] = t.value), e
                                            ),
                                            {}
                                        )
                                    ),
                                    !1)
                                );
                            });
                        }
                        createContainer() {
                            const e = this.j.c.element("form");
                            return (
                                e.classList.add(this.componentName),
                                (0, h.attr)(
                                    e,
                                    "dir",
                                    this.j.o.direction || "auto"
                                ),
                                e
                            );
                        }
                        constructor(...e) {
                            var t, i;
                            super(...e),
                                (null === (t = this.options) || void 0 === t
                                    ? void 0
                                    : t.className) &&
                                    this.container.classList.add(
                                        null === (i = this.options) ||
                                            void 0 === i
                                            ? void 0
                                            : i.className
                                    );
                        }
                    };
                    var m;
                    p = (0, o.gn)([l.w], p);
                    let f = (m = class e extends n.u {
                        className() {
                            return "UITextArea";
                        }
                        createContainer(e) {
                            return (
                                (this.nativeInput =
                                    this.j.create.element("textarea")),
                                super.createContainer(e)
                            );
                        }
                        constructor(e, t) {
                            super(e, t),
                                (this.state = { ...m.defaultState }),
                                Object.assign(this.state, t),
                                !1 === this.state.resizable &&
                                    (this.nativeInput.style.resize = "none");
                        }
                    });
                    (f.defaultState = {
                        ...n.u.defaultState,
                        size: 5,
                        resizable: !0,
                    }),
                        (f = m = (0, o.gn)([l.w], f));
                    var g,
                        v = i(51663),
                        b = i(38886);
                    let y = (g = class e extends n.u {
                        className() {
                            return "UICheckbox";
                        }
                        render() {
                            return this.j.c.element("label", {
                                className: this.componentName,
                            });
                        }
                        constructor(e, t) {
                            super(e, { ...t, type: "checkbox" }),
                                (this.state = { ...g.defaultState }),
                                Object.assign(this.state, t);
                        }
                        onChangeChecked() {
                            (this.value = "" + this.state.checked),
                                (this.nativeInput.checked = this.state.checked),
                                this.setMod("checked", this.state.checked);
                        }
                        onChangeNativeCheckBox() {
                            this.state.checked = this.nativeInput.checked;
                        }
                        onChangeSwitch() {
                            this.setMod("switch", this.state.switch);
                            let e = this.getElm("switch-slider");
                            this.state.switch
                                ? (e ||
                                      (e = this.j.c.div(
                                          this.getFullElName("switch-slider")
                                      )),
                                  b.i.after(this.nativeInput, e))
                                : b.i.safeRemove(e);
                        }
                    });
                    (y.defaultState = {
                        ...n.u.defaultState,
                        checked: !1,
                        switch: !1,
                    }),
                        (0, o.gn)(
                            [
                                (0, v.watch)("state.checked"),
                                (0, v.hook)("ready"),
                            ],
                            y.prototype,
                            "onChangeChecked",
                            null
                        ),
                        (0, o.gn)(
                            [(0, v.watch)("nativeInput:change")],
                            y.prototype,
                            "onChangeNativeCheckBox",
                            null
                        ),
                        (0, o.gn)(
                            [
                                (0, v.watch)("state.switch"),
                                (0, v.hook)("ready"),
                            ],
                            y.prototype,
                            "onChangeSwitch",
                            null
                        ),
                        (y = g = (0, o.gn)([v.component], y)),
                        i(85637);
                    let w = class e extends r.q {
                        className() {
                            return "UIBlock";
                        }
                        constructor(e, t, i = { align: "left" }) {
                            super(e, t),
                                (this.options = i),
                                this.setMod(
                                    "align",
                                    this.options.align || "left"
                                ),
                                this.setMod("width", this.options.width || ""),
                                this.options.mod &&
                                    this.setMod(this.options.mod, !0),
                                this.options.className &&
                                    this.container.classList.add(
                                        this.options.className
                                    ),
                                (0, h.attr)(this.container, "data-ref", i.ref),
                                (0, h.attr)(this.container, "ref", i.ref);
                        }
                    };
                    w = (0, o.gn)([l.w], w);
                },
                85637(e, t, i) {
                    "use strict";
                    i.d(t, {
                        Z() {
                            return a;
                        },
                    });
                    var s = i(52784),
                        o = i(62353),
                        r = i(46696),
                        n = i(4846);
                    let a = class e extends o.u {
                        className() {
                            return "UIFileInput";
                        }
                        createContainer(e) {
                            this.button = new n.y3(this.j, {
                                icon: { name: "plus" },
                            });
                            const { container: t } = this.button;
                            this.nativeInput ||
                                (this.nativeInput = this.createNativeInput(e));
                            const { nativeInput: i } = this;
                            return (
                                i.classList.add(this.getFullElName("input")),
                                t.classList.add(this.componentName),
                                t.appendChild(i),
                                t
                            );
                        }
                        createNativeInput(e) {
                            return this.j.create.fromHTML(
                                `<input\n\t\t\ttype="file"\n\t\t\taccept="${
                                    e.onlyImages ? "image/*" : "*"
                                }"\n\t\t\ttabindex="-1"\n\t\t\tdir="auto"\n\t\t\tmultiple=""\n\t\t/>`
                            );
                        }
                        constructor(e, t) {
                            super(e, { type: "file", ...t }),
                                (this.state = {
                                    ...o.u.defaultState,
                                    type: "file",
                                    onlyImages: !0,
                                });
                        }
                    };
                    a = (0, s.gn)([r.w], a);
                },
                62353(e, t, i) {
                    "use strict";
                    i.d(t, {
                        u() {
                            return u;
                        },
                    });
                    var s,
                        o = i(52784),
                        r = i(10783),
                        n = i(25916),
                        a = i(21305),
                        l = i(38886),
                        c = i(51663),
                        d = i(34759),
                        h = i(46658);
                    let u = (s = class e extends r.u {
                        className() {
                            return "UIInput";
                        }
                        onChangeClear() {
                            this.state.clearButton
                                ? l.i.after(this.nativeInput, this.clearButton)
                                : l.i.safeRemove(this.clearButton);
                        }
                        onChangeClassName(e, t) {
                            t && this.container.classList.remove(t),
                                this.state.className &&
                                    this.container.classList.add(
                                        this.state.className
                                    );
                        }
                        onChangeState() {
                            this.name = this.state.name;
                            const e = this.nativeInput,
                                {
                                    name: t,
                                    icon: i,
                                    type: s,
                                    ref: o,
                                    required: r,
                                    placeholder: a,
                                    autocomplete: c,
                                    label: h,
                                } = this.state;
                            (0, n.attr)(e, "name", t),
                                (0, n.attr)(e, "type", s),
                                (0, n.attr)(e, "data-ref", o || t),
                                (0, n.attr)(e, "ref", o || t),
                                (0, n.attr)(e, "required", r || null),
                                (0, n.attr)(
                                    e,
                                    "autocomplete",
                                    c ? null : "off"
                                ),
                                (0, n.attr)(
                                    e,
                                    "placeholder",
                                    a ? this.j.i18n(a) : ""
                                ),
                                i && d.J.exists(i)
                                    ? (l.i.before(e, this.icon),
                                      (this.icon.innerHTML = d.J.get(i)))
                                    : l.i.safeRemove(this.icon),
                                h
                                    ? (l.i.before(this.wrapper, this.label),
                                      (this.label.innerText = this.j.i18n(h)))
                                    : l.i.safeRemove(this.label),
                                this.updateValidators();
                        }
                        updateValidators() {
                            var e;
                            this.validators.clear(),
                                this.state.required &&
                                    this.validators.add(h.g.required),
                                null === (e = this.state.validators) ||
                                    void 0 === e ||
                                    e.forEach((e) => {
                                        const t = h.g[e];
                                        t && this.validators.add(t);
                                    });
                        }
                        set error(e) {
                            this.setMod("has-error", !!e),
                                e
                                    ? ((this.__errorBox.innerText = this.j.i18n(
                                          e,
                                          this.j.i18n(this.state.label || "")
                                      )),
                                      this.container.appendChild(
                                          this.__errorBox
                                      ))
                                    : l.i.safeRemove(this.__errorBox);
                        }
                        get value() {
                            return this.nativeInput.value;
                        }
                        set value(e) {
                            this.value !== e &&
                                ((this.nativeInput.value = e),
                                this.onChangeValue());
                        }
                        onChangeStateValue() {
                            const e = "" + this.state.value;
                            e !== this.value && (this.value = e);
                        }
                        onChangeValue() {
                            var e, t;
                            const { value: i } = this;
                            this.state.value !== i &&
                                ((this.state.value = i),
                                this.j.e.fire(this, "change", i),
                                null === (t = (e = this.state).onChange) ||
                                    void 0 === t ||
                                    t.call(e, i));
                        }
                        validate() {
                            return (
                                (this.error = ""),
                                (0, a.q)(this.validators).every((e) => e(this))
                            );
                        }
                        createContainer(e) {
                            const t = super.createContainer();
                            (this.wrapper = this.j.c.div(
                                this.getFullElName("wrapper")
                            )),
                                this.nativeInput ||
                                    (this.nativeInput =
                                        this.createNativeInput());
                            const { nativeInput: i } = this;
                            return (
                                i.classList.add(this.getFullElName("input")),
                                this.wrapper.appendChild(i),
                                t.appendChild(this.wrapper),
                                (0, n.attr)(
                                    i,
                                    "dir",
                                    this.j.o.direction || "auto"
                                ),
                                t
                            );
                        }
                        createNativeInput(e) {
                            return this.j.create.element("input");
                        }
                        constructor(e, t) {
                            super(e, t),
                                (this.label = this.j.c.span(
                                    this.getFullElName("label")
                                )),
                                (this.icon = this.j.c.span(
                                    this.getFullElName("icon")
                                )),
                                (this.clearButton = this.j.c.span(
                                    this.getFullElName("clear"),
                                    d.J.get("cancel")
                                )),
                                (this.state = { ...s.defaultState }),
                                (this.__errorBox = this.j.c.span(
                                    this.getFullElName("error")
                                )),
                                (this.validators = new Set([])),
                                void 0 !== (null == t ? void 0 : t.value) &&
                                    (t.value = "" + t.value),
                                Object.assign(this.state, t),
                                void 0 !== this.state.clearButton &&
                                    (this.j.e
                                        .on(this.clearButton, "click", (e) => {
                                            e.preventDefault(),
                                                (this.nativeInput.value = ""),
                                                this.j.e.fire(
                                                    this.nativeInput,
                                                    "input"
                                                ),
                                                this.focus();
                                        })
                                        .on(this.nativeInput, "input", () => {
                                            this.state.clearButton =
                                                !!this.value.length;
                                        }),
                                    (this.state.clearButton =
                                        !!this.value.length)),
                                this.j.e
                                    .on(this.nativeInput, "focus blur", () => {
                                        this.onChangeFocus();
                                    })
                                    .on(
                                        this.nativeInput,
                                        "input change",
                                        this.onChangeValue
                                    ),
                                this.onChangeState(),
                                this.onChangeClassName(),
                                this.onChangeStateValue();
                        }
                        focus() {
                            this.nativeInput.focus();
                        }
                        get isFocused() {
                            return this.nativeInput === this.j.od.activeElement;
                        }
                        onChangeFocus() {
                            this.setMod("focused", this.isFocused);
                        }
                    });
                    (u.defaultState = {
                        className: "",
                        autocomplete: !0,
                        name: "",
                        value: "",
                        icon: "",
                        label: "",
                        ref: "",
                        type: "text",
                        placeholder: "",
                        required: !1,
                        validators: [],
                    }),
                        (0, o.gn)(
                            [(0, c.watch)("state.clearButton")],
                            u.prototype,
                            "onChangeClear",
                            null
                        ),
                        (0, o.gn)(
                            [(0, c.watch)("state.className")],
                            u.prototype,
                            "onChangeClassName",
                            null
                        ),
                        (0, o.gn)(
                            [
                                (0, c.watch)([
                                    "state.name",
                                    "state.type",
                                    "state.label",
                                    "state.placeholder",
                                    "state.autocomplete",
                                    "state.icon",
                                ]),
                                (0, c.debounce)(),
                            ],
                            u.prototype,
                            "onChangeState",
                            null
                        ),
                        (0, o.gn)(
                            [(0, c.watch)("state.value")],
                            u.prototype,
                            "onChangeStateValue",
                            null
                        ),
                        (0, o.gn)(
                            [c.autobind],
                            u.prototype,
                            "onChangeValue",
                            null
                        ),
                        (u = s = (0, o.gn)([c.component], u));
                },
                46658(e, t, i) {
                    "use strict";
                    i.d(t, {
                        g() {
                            return s;
                        },
                        s() {
                            return o;
                        },
                    });
                    var s = {};
                    i.r(s),
                        i.d(s, {
                            required() {
                                return a;
                            },
                            url() {
                                return l;
                            },
                        });
                    var o = {};
                    i.r(o),
                        i.d(o, {
                            C() {
                                return c;
                            },
                        });
                    var r = i(49107),
                        n = i(95049);
                    const a = (e) =>
                            !!(0, n.f)(e.value).length ||
                            ((e.error = "Please fill out this field"), !1),
                        l = (e) =>
                            !!(0, r.P)((0, n.f)(e.value)) ||
                            ((e.error = "Please enter a web address"), !1),
                        c = (e) =>
                            !!(0, n.f)(e.value).length ||
                            ((e.error = "Please fill out this field"), !1);
                },
                1510(e, t, i) {
                    "use strict";
                    i.d(t, {
                        q() {
                            return d;
                        },
                    });
                    var s,
                        o = i(52784),
                        r = i(10783),
                        n = i(51663),
                        a = i(47643),
                        l = (i(52378), i(38886)),
                        c = i(48961);
                    let d = (s = class e extends r.u {
                        className() {
                            return "UIGroup";
                        }
                        get allChildren() {
                            const e = [],
                                t = [...this.elements];
                            for (; t.length; ) {
                                const i = t.shift();
                                (0, a.isArray)(i)
                                    ? t.push(...i)
                                    : c.w.isInstanceOf(i, s)
                                    ? t.push(...i.elements)
                                    : i && e.push(i);
                            }
                            return e;
                        }
                        update() {
                            this.elements.forEach((e) => e.update()),
                                this.setMod("size", this.buttonSize);
                        }
                        append(e, t) {
                            return (0, a.isArray)(e)
                                ? (e.forEach((e) => this.append(e, t)), this)
                                : (this.elements.push(e),
                                  e.name &&
                                      e.container.classList.add(
                                          this.getFullElName(e.name)
                                      ),
                                  t
                                      ? this.getElm(t).appendChild(e.container)
                                      : this.appendChildToContainer(
                                            e.container
                                        ),
                                  (e.parentElement = this),
                                  e.update(),
                                  this);
                        }
                        afterSetMod(e, t) {
                            this.syncMod &&
                                this.elements.forEach((i) => i.setMod(e, t));
                        }
                        appendChildToContainer(e) {
                            this.container.appendChild(e);
                        }
                        remove(e) {
                            const t = this.elements.indexOf(e);
                            return (
                                -1 !== t &&
                                    (this.elements.splice(t, 1),
                                    l.i.safeRemove(e.container),
                                    (e.parentElement = null)),
                                this
                            );
                        }
                        clear() {
                            return (
                                this.elements.forEach((e) => e.destruct()),
                                (this.elements.length = 0),
                                this
                            );
                        }
                        constructor(e, t, i) {
                            super(e, i),
                                (this.options = i),
                                (this.syncMod = !1),
                                (this.elements = []),
                                (this.buttonSize = "middle"),
                                null == t ||
                                    t.forEach((e) => e && this.append(e)),
                                (null == i ? void 0 : i.name) &&
                                    (this.name = i.name);
                        }
                        destruct() {
                            return this.clear(), super.destruct();
                        }
                    });
                    (0, o.gn)(
                        [(0, n.watch)("buttonSize")],
                        d.prototype,
                        "update",
                        null
                    ),
                        (d = s = (0, o.gn)([n.component], d));
                },
                30714(e, t, i) {
                    "use strict";
                    i.d(t, {
                        b() {
                            return g;
                        },
                    });
                    var s = i(52784),
                        o = i(32551),
                        r = i(43854),
                        n = i(67493),
                        a = i(25916),
                        l = i(51663),
                        c = i(1510),
                        d = i(63237),
                        h = i(17831),
                        u = i(4846),
                        p = i(1017),
                        m = i(46861),
                        f = i(48961);
                    let g = class e extends c.q {
                        className() {
                            return "UIList";
                        }
                        onChangeMode() {
                            this.setMod("mode", this.mode);
                        }
                        constructor(e) {
                            super(e),
                                (this.mode = "horizontal"),
                                (this.removeButtons = []),
                                this.onChangeMode();
                        }
                        makeGroup() {
                            return new c.q(this.jodit);
                        }
                        get buttons() {
                            return this.allChildren.filter((e) =>
                                f.w.isInstanceOf(e, u.y3)
                            );
                        }
                        getButtonsNames() {
                            return this.buttons
                                .map(
                                    (e) =>
                                        (e instanceof u.y3 && e.state.name) ||
                                        ""
                                )
                                .filter((e) => "" !== e);
                        }
                        setRemoveButtons(e) {
                            return (this.removeButtons = e || []), this;
                        }
                        build(e, t = null) {
                            (e = (0, m.C)(e)), this.clear();
                            let i,
                                s = !1,
                                l = this.makeGroup();
                            this.append(l), l.setMod("line", !0);
                            const c = (e) => {
                                    let o = null;
                                    switch (e.name) {
                                        case "\n":
                                            (l = this.makeGroup()),
                                                l.setMod("line", !0),
                                                (i = this.makeGroup()),
                                                l.append(i),
                                                this.append(l);
                                            break;
                                        case "|":
                                            s ||
                                                ((s = !0),
                                                (o = new d.l(this.j)));
                                            break;
                                        case "---": {
                                            i.setMod("before-spacer", !0);
                                            const e = new h.W(this.j);
                                            l.append(e),
                                                (i = this.makeGroup()),
                                                l.append(i),
                                                (s = !1);
                                            break;
                                        }
                                        default:
                                            (s = !1),
                                                (o = this.makeButton(e, t));
                                    }
                                    o &&
                                        (i ||
                                            ((i = this.makeGroup()),
                                            l.append(i)),
                                        i.append(o));
                                },
                                u = (e) => !this.removeButtons.includes(e.name);
                            return (
                                e.forEach((e) => {
                                    if ((0, p.A)(e)) {
                                        const t = e.buttons.filter((e) => e);
                                        t.length &&
                                            ((i = this.makeGroup()),
                                            i
                                                .setMod("separated", !0)
                                                .setMod("group", e.group),
                                            l.append(i),
                                            ((e, t) =>
                                                ((0, n.k)(e)
                                                    ? e
                                                    : (0, a.keys)(e, !1).map(
                                                          (t) =>
                                                              (0,
                                                              a.ConfigProto)(
                                                                  { name: t },
                                                                  e[t] || {}
                                                              )
                                                      )
                                                ).map((e) =>
                                                    (0, o.Y)(
                                                        e,
                                                        t ||
                                                            r.D.defaultOptions
                                                                .controls
                                                    )
                                                ))(t, this.j.o.controls)
                                                .filter(u)
                                                .forEach(c));
                                    } else {
                                        i ||
                                            ((i = this.makeGroup()),
                                            l.append(i));
                                        const t = (0, o.Y)(
                                            e,
                                            this.j.o.controls
                                        );
                                        u(t) && c(t);
                                    }
                                }),
                                this.update(),
                                this
                            );
                        }
                        makeButton(e, t) {
                            return new u.y3(this.j);
                        }
                    };
                    (0, s.gn)(
                        [(0, l.watch)("mode")],
                        g.prototype,
                        "onChangeMode",
                        null
                    ),
                        (g = (0, s.gn)([l.component], g));
                },
                63237(e, t, i) {
                    "use strict";
                    i.d(t, {
                        l() {
                            return n;
                        },
                    });
                    var s = i(52784),
                        o = i(10783),
                        r = i(46696);
                    let n = class e extends o.u {
                        className() {
                            return "UISeparator";
                        }
                    };
                    n = (0, s.gn)([r.w], n);
                },
                17831(e, t, i) {
                    "use strict";
                    i.d(t, {
                        W() {
                            return n;
                        },
                    });
                    var s = i(52784),
                        o = i(10783),
                        r = i(46696);
                    let n = class e extends o.u {
                        className() {
                            return "UISpacer";
                        }
                    };
                    n = (0, s.gn)([r.w], n);
                },
                1017(e, t, i) {
                    "use strict";
                    i.d(t, {
                        A() {
                            return o;
                        },
                        q() {
                            return r;
                        },
                    });
                    var s = i(67493);
                    const o = (e) => (0, s.k)(e.buttons);
                    function r(e, t) {
                        const i = t.getRegisteredButtonGroups();
                        return new Set(
                            e.reduce((e, t) => {
                                var s;
                                return (
                                    o(t)
                                        ? (e = e.concat([
                                              ...t.buttons,
                                              ...(null !== (s = i[t.group]) &&
                                              void 0 !== s
                                                  ? s
                                                  : []),
                                          ]))
                                        : e.push(t),
                                    e
                                );
                            }, [])
                        );
                    }
                },
                32551(e, t, i) {
                    "use strict";
                    i.d(t, {
                        Y() {
                            return r;
                        },
                        z() {
                            return n;
                        },
                    });
                    var s = i(47643),
                        o = i(43854);
                    function r(e, t) {
                        let i;
                        return (
                            t || (t = o.D.defaultOptions.controls),
                            (0, s.isString)(e)
                                ? (i = n(e, t) || {
                                      name: e,
                                      command: e,
                                      tooltip: e,
                                  })
                                : ((i = {
                                      name: "empty",
                                      ...(0, s.ConfigFlatten)(e),
                                  }),
                                  void 0 !== t[i.name] &&
                                      (i = {
                                          ...(0, s.ConfigFlatten)(t[i.name]),
                                          ...(0, s.ConfigFlatten)(i),
                                      })),
                            i
                        );
                    }
                    function n(e, t) {
                        let [i, o] = e.split(/\./),
                            r = t;
                        return (
                            null != o ? void 0 !== t[i] && (r = t[i]) : (o = i),
                            r[o]
                                ? { name: o, ...(0, s.ConfigFlatten)(r[o]) }
                                : void 0
                        );
                    }
                },
                34759(e, t, i) {
                    "use strict";
                    i.d(t, {
                        J() {
                            return r;
                        },
                    });
                    var s = i(47077),
                        o = i(47643);
                    class r {
                        static getIcon(e) {
                            return /<svg/i.test(e)
                                ? e
                                : r.icons[e] ||
                                      r.icons[e.replace(/-/g, "_")] ||
                                      r.icons[e.replace(/_/g, "-")] ||
                                      r.icons[(0, o.camelCase)(e)] ||
                                      r.icons[(0, o.kebabCase)(e)] ||
                                      r.icons[e.toLowerCase()];
                        }
                        static exists(e) {
                            return void 0 !== this.getIcon(e);
                        }
                        static get(e, t = "<span></span>") {
                            return this.getIcon(e) || t;
                        }
                        static set(e, t) {
                            return (this.icons[e.replace("_", "-")] = t), this;
                        }
                        static makeIcon(e, t) {
                            var i;
                            let o;
                            if (t) {
                                const n = t.name.replace(/[^a-zA-Z0-9]/g, "_");
                                if (t.iconURL)
                                    (o = e.c.span()),
                                        (0, s.i)(
                                            o,
                                            "backgroundImage",
                                            "url(" +
                                                t.iconURL.replace(
                                                    "{basePath}",
                                                    (null == e
                                                        ? void 0
                                                        : e.basePath) || ""
                                                ) +
                                                ")"
                                        );
                                else {
                                    const s =
                                        e.e.fire("getIcon", t.name, t, n) ||
                                        r.get(t.name, "") ||
                                        (null === (i = e.o.extraIcons) ||
                                        void 0 === i
                                            ? void 0
                                            : i[t.name]);
                                    s &&
                                        ((o = e.c.fromHTML(s.trim())),
                                        /^<svg/i.test(t.name) ||
                                            o.classList.add("jodit-icon_" + n));
                                }
                            }
                            return (
                                o &&
                                    (o.classList.add("jodit-icon"),
                                    (o.style.fill = t.fill)),
                                o
                            );
                        }
                    }
                    r.icons = {};
                },
                86673(e, t, i) {
                    "use strict";
                    i.d(t, {
                        zx() {
                            return o.zx;
                        },
                        JO() {
                            return d.J;
                        },
                        GI() {
                            return r.G;
                        },
                        ko() {
                            return u;
                        },
                        eC() {
                            return c.eC;
                        },
                        y3() {
                            return o.y3;
                        },
                        BO() {
                            return o.BO;
                        },
                        mA() {
                            return c.mA;
                        },
                        u1() {
                            return s.u;
                        },
                        x4() {
                            return c.x4;
                        },
                        qe() {
                            return n.q;
                        },
                        u3() {
                            return c.u3;
                        },
                        bz() {
                            return a.b;
                        },
                        Cj() {
                            return c.Cj;
                        },
                        lU() {
                            return l.l;
                        },
                        GJ() {
                            return c.GJ;
                        },
                        Ne() {
                            return o.Ne;
                        },
                    });
                    var s = i(10783),
                        o = i(18095),
                        r = i(52569),
                        n = i(1510),
                        a = i(30714),
                        l = i(63237),
                        c = (i(17831), i(21861)),
                        d = i(34759),
                        h = i(38886);
                    class u extends s.u {
                        className() {
                            return "ProgressBar";
                        }
                        render() {
                            return "<div><div></div></div>";
                        }
                        show() {
                            return (
                                (
                                    this.j.workplace || this.j.container
                                ).appendChild(this.container),
                                this
                            );
                        }
                        hide() {
                            return h.i.safeRemove(this.container), this;
                        }
                        progress(e) {
                            return (
                                (this.container.style.width =
                                    e.toFixed(2) + "%"),
                                this
                            );
                        }
                        destruct() {
                            return this.hide(), super.destruct();
                        }
                    }
                },
                52569(e, t, i) {
                    "use strict";
                    i.d(t, {
                        G() {
                            return s.G;
                        },
                    });
                    var s = i(59316);
                },
                59316(e, t, i) {
                    "use strict";
                    i.d(t, {
                        G() {
                            return d;
                        },
                    });
                    var s = i(52784),
                        o = i(38886),
                        r = i(47643),
                        n = (i(52378), i(10783)),
                        a = i(51663),
                        l = i(48961),
                        c = i(78855);
                    class d extends n.u {
                        className() {
                            return "Popup";
                        }
                        updateParentElement(e) {
                            return (
                                e !== this &&
                                    l.w.isInstanceOf(e, d) &&
                                    (this.childrenPopups.forEach((t) => {
                                        !e.closest(t) &&
                                            t.isOpened &&
                                            t.close();
                                    }),
                                    this.childrenPopups.has(e) ||
                                        this.j.e.on(e, "beforeClose", () => {
                                            this.childrenPopups.delete(e);
                                        }),
                                    this.childrenPopups.add(e)),
                                super.updateParentElement(e)
                            );
                        }
                        setContent(e) {
                            o.i.detach(this.container);
                            const t = this.j.c.div(
                                this.componentName + "__content"
                            );
                            let i;
                            return (
                                l.w.isInstanceOf(e, n.u)
                                    ? ((i = e.container),
                                      (e.parentElement = this))
                                    : (i = (0, r.isString)(e)
                                          ? this.j.c.fromHTML(e)
                                          : e),
                                t.appendChild(i),
                                this.container.appendChild(t),
                                this.updatePosition(),
                                this
                            );
                        }
                        open(e, t = !1, i) {
                            if (
                                ((0, r.markOwner)(this.jodit, this.container),
                                this.calculateZIndex(),
                                (this.isOpened = !0),
                                this.addGlobalListeners(),
                                (this.targetBound = t
                                    ? this.getKeepBound(e)
                                    : e),
                                i)
                            )
                                i.appendChild(this.container);
                            else {
                                const e = (0, c.ZO)(this.jodit, d);
                                i !== this.container.parentElement &&
                                    e.appendChild(this.container);
                            }
                            return (
                                this.updatePosition(),
                                this.j.e.fire(this, "afterOpen"),
                                this
                            );
                        }
                        calculateZIndex() {
                            if (this.container.style.zIndex) return;
                            const e = (e) => {
                                    const t =
                                        e.container.style.zIndex || e.o.zIndex;
                                    return (
                                        !!t &&
                                        (this.setZIndex(
                                            1 + parseInt("" + t, 10)
                                        ),
                                        !0)
                                    );
                                },
                                { j: t } = this;
                            if (e(t)) return;
                            let i = this.parentElement;
                            for (; i; ) {
                                if (e(t)) return;
                                if (i.container.style.zIndex)
                                    return void this.setZIndex(
                                        1 +
                                            parseInt(
                                                "" + i.container.style.zIndex,
                                                10
                                            )
                                    );
                                if (
                                    !i.parentElement &&
                                    i.container.parentElement
                                ) {
                                    const e = n.u.closestElement(
                                        i.container.parentElement,
                                        n.u
                                    );
                                    if (e) {
                                        i = e;
                                        continue;
                                    }
                                }
                                i = i.parentElement;
                            }
                        }
                        getKeepBound(e) {
                            const t = e(),
                                i = this.od.elementFromPoint(t.left, t.top);
                            if (!i) return e;
                            const s = o.i.isHTMLElement(i)
                                    ? i
                                    : i.parentElement,
                                n = (0, r.position)(s, this.j);
                            return () => {
                                const t = e(),
                                    i = (0, r.position)(s, this.j);
                                return {
                                    ...t,
                                    top: t.top + (i.top - n.top),
                                    left: t.left + (i.left - n.left),
                                };
                            };
                        }
                        updatePosition() {
                            if (!this.isOpened) return this;
                            const [e, t] = this.calculatePosition(
                                this.targetBound(),
                                this.viewBound(),
                                (0, r.position)(this.container, this.j)
                            );
                            return (
                                this.setMod("strategy", t),
                                (0, r.css)(this.container, {
                                    left: e.left,
                                    top: e.top,
                                }),
                                this.childrenPopups.forEach((e) =>
                                    e.updatePosition()
                                ),
                                this
                            );
                        }
                        throttleUpdatePosition() {
                            this.updatePosition();
                        }
                        calculatePosition(e, t, i, s = this.strategy) {
                            const o = {
                                    left: e.left,
                                    right: e.left - (i.width - e.width),
                                },
                                n = {
                                    bottom: e.top + e.height,
                                    top: e.top - i.height,
                                },
                                a = Object.keys(o).reduce(
                                    (e, t) =>
                                        e.concat(
                                            Object.keys(n).map(
                                                (e) =>
                                                    `${t}${(0, r.ucfirst)(e)}`
                                            )
                                        ),
                                    []
                                ),
                                l = (e) => {
                                    const [t, s] = (0, r.kebabCase)(e).split(
                                        "-"
                                    );
                                    return {
                                        left: o[t],
                                        top: n[s],
                                        width: i.width,
                                        height: i.height,
                                    };
                                },
                                c = (e) => {
                                    let t = null;
                                    return (
                                        (t = d.boxInView(l(s), e)
                                            ? s
                                            : a.find((t) => {
                                                  if (d.boxInView(l(t), e))
                                                      return t;
                                              }) || null),
                                        t
                                    );
                                };
                            let h = c(
                                (0, r.position)(this.j.container, this.j)
                            );
                            return (
                                (h && d.boxInView(l(h), t)) ||
                                    (h = c(t) || h || s),
                                [l(h), h]
                            );
                        }
                        static boxInView(e, t) {
                            return !(
                                -2 > e.top - t.top ||
                                -2 > e.left - t.left ||
                                -2 > t.top + t.height - (e.top + e.height) ||
                                -2 > t.left + t.width - (e.left + e.width)
                            );
                        }
                        close() {
                            return this.isOpened
                                ? ((this.isOpened = !1),
                                  this.childrenPopups.forEach((e) => e.close()),
                                  this.j.e.fire(this, "beforeClose"),
                                  this.j.e.fire("beforePopupClose", this),
                                  this.removeGlobalListeners(),
                                  o.i.safeRemove(this.container),
                                  this)
                                : this;
                        }
                        closeOnOutsideClick(e) {
                            this.isOpened &&
                                !this.isOwnClick(e) &&
                                this.close();
                        }
                        isOwnClick(e) {
                            if (!e.target) return !1;
                            const t = n.u.closestElement(e.target, d);
                            return !(!t || (this !== t && !t.closest(this)));
                        }
                        addGlobalListeners() {
                            const e = this.throttleUpdatePosition,
                                t = this.ow;
                            c.TB.on("closeAllPopups", this.close),
                                this.smart &&
                                    this.j.e
                                        .on("escape", this.close)
                                        .on(
                                            "mousedown touchstart",
                                            this.closeOnOutsideClick
                                        )
                                        .on(
                                            t,
                                            "mousedown touchstart",
                                            this.closeOnOutsideClick
                                        ),
                                this.j.e
                                    .on("closeAllPopups", this.close)
                                    .on("resize", e)
                                    .on(this.container, "scroll mousewheel", e)
                                    .on(t, "scroll", e)
                                    .on(t, "resize", e),
                                o.i.up(this.j.container, (t) => {
                                    t && this.j.e.on(t, "scroll mousewheel", e);
                                });
                        }
                        removeGlobalListeners() {
                            const e = this.throttleUpdatePosition,
                                t = this.ow;
                            c.TB.off("closeAllPopups", this.close),
                                this.smart &&
                                    this.j.e
                                        .off("escape", this.close)
                                        .off(
                                            "mousedown touchstart",
                                            this.closeOnOutsideClick
                                        )
                                        .off(
                                            t,
                                            "mousedown touchstart",
                                            this.closeOnOutsideClick
                                        ),
                                this.j.e
                                    .off("closeAllPopups", this.close)
                                    .off("resize", e)
                                    .off(this.container, "scroll mousewheel", e)
                                    .off(t, "scroll", e)
                                    .off(t, "resize", e),
                                o.i.up(this.j.container, (t) => {
                                    t &&
                                        this.j.e.off(t, "scroll mousewheel", e);
                                });
                        }
                        setZIndex(e) {
                            this.container.style.zIndex = "" + e;
                        }
                        constructor(e, t = !0) {
                            super(e),
                                (this.smart = t),
                                (this.isOpened = !1),
                                (this.strategy = "leftBottom"),
                                (this.viewBound = () => ({
                                    left: 0,
                                    top: 0,
                                    width: this.ow.innerWidth,
                                    height: this.ow.innerHeight,
                                })),
                                (this.childrenPopups = new Set()),
                                (0, r.attr)(this.container, "role", "popup");
                        }
                        destruct() {
                            return this.close(), super.destruct();
                        }
                    }
                    (0, s.gn)(
                        [a.autobind],
                        d.prototype,
                        "updatePosition",
                        null
                    ),
                        (0, s.gn)(
                            [(0, a.throttle)(10), a.autobind],
                            d.prototype,
                            "throttleUpdatePosition",
                            null
                        ),
                        (0, s.gn)([a.autobind], d.prototype, "close", null),
                        (0, s.gn)(
                            [a.autobind],
                            d.prototype,
                            "closeOnOutsideClick",
                            null
                        );
                },
                38870(e, t, i) {
                    "use strict";
                    i.d(t, {
                        C() {
                            return h;
                        },
                    });
                    var s = i(52784),
                        o = i(3889),
                        r = i(47643),
                        n = i(97039),
                        a = i(30446),
                        l = i(95950),
                        c = i(1017),
                        d = i(51663);
                    class h extends o.G {
                        get toolbarContainer() {
                            return this.o.fullsize ||
                                (!(0, r.isString)(this.o.toolbar) &&
                                    !n.i.isHTMLElement(this.o.toolbar))
                                ? (this.o.toolbar &&
                                      n.i.appendChildFirst(
                                          this.container,
                                          this.defaultToolbarContainer
                                      ),
                                  this.defaultToolbarContainer)
                                : (0, r.resolveElement)(
                                      this.o.toolbar,
                                      this.o.shadowRoot || this.od
                                  );
                        }
                        setPanel(e) {
                            (this.o.toolbar = e), this.buildToolbar();
                        }
                        buildToolbar() {
                            if (!this.o.toolbar) return;
                            const e = this.o.buttons
                                ? (0, r.splitArray)(this.o.buttons)
                                : [];
                            this.toolbar
                                .setRemoveButtons(this.o.removeButtons)
                                .build(e.concat(this.o.extraButtons || []))
                                .appendTo(this.toolbarContainer);
                        }
                        getRegisteredButtonGroups() {
                            return this.groupToButtons;
                        }
                        registerButton(e) {
                            var t;
                            this.registeredButtons.add(e);
                            const i =
                                null !== (t = e.group) && void 0 !== t
                                    ? t
                                    : "other";
                            return (
                                this.groupToButtons[i] ||
                                    (this.groupToButtons[i] = []),
                                null != e.position
                                    ? (this.groupToButtons[i][e.position] =
                                          e.name)
                                    : this.groupToButtons[i].push(e.name),
                                this
                            );
                        }
                        unregisterButton(e) {
                            var t;
                            this.registeredButtons.delete(e);
                            const i =
                                    null !== (t = e.group) && void 0 !== t
                                        ? t
                                        : "other",
                                s = this.groupToButtons[i];
                            if (s) {
                                const t = s.indexOf(e.name);
                                -1 !== t && s.splice(t, 1),
                                    0 === s.length &&
                                        delete this.groupToButtons[i];
                            }
                            return this;
                        }
                        beforeToolbarBuild(e) {
                            if (Object.keys(this.groupToButtons).length)
                                return e.map((e) =>
                                    (0, c.A)(e) &&
                                    e.group &&
                                    this.groupToButtons[e.group]
                                        ? {
                                              group: e.group,
                                              buttons: [
                                                  ...e.buttons,
                                                  ...this.groupToButtons[
                                                      e.group
                                                  ],
                                              ],
                                          }
                                        : e
                                );
                        }
                        constructor(e, t = !1) {
                            super(e, t),
                                (this.toolbar = (0, a.R)(this)),
                                (this.defaultToolbarContainer =
                                    this.c.div("jodit-toolbar__box")),
                                (this.registeredButtons = new Set()),
                                (this.groupToButtons = {}),
                                (this.isJodit = !1),
                                (this.isJodit = t),
                                this.e.on(
                                    "beforeToolbarBuild",
                                    this.beforeToolbarBuild
                                );
                        }
                        destruct() {
                            this.isDestructed ||
                                (this.setStatus(l.n$.beforeDestruct),
                                this.e.off(
                                    "beforeToolbarBuild",
                                    this.beforeToolbarBuild
                                ),
                                this.toolbar.destruct(),
                                super.destruct());
                        }
                    }
                    (0, s.gn)(
                        [d.autobind],
                        h.prototype,
                        "beforeToolbarBuild",
                        null
                    );
                },
                3889(e, t, i) {
                    "use strict";
                    i.d(t, {
                        G() {
                            return m;
                        },
                    });
                    var s,
                        o = i(52784),
                        r = i(50372),
                        n = i(47643),
                        a = i(36257),
                        l = i(6293),
                        c = i(78855),
                        d = i(51663),
                        h = i(78930),
                        u = i(77009),
                        p = i(15496);
                    let m = (s = class e extends l.Component {
                        get basePath() {
                            return this.o.basePath
                                ? this.o.basePath
                                : a.BASE_PATH;
                        }
                        get defaultTimeout() {
                            return (0, n.isVoid)(this.o.defaultTimeout)
                                ? 100
                                : this.o.defaultTimeout;
                        }
                        get c() {
                            return this.create;
                        }
                        get container() {
                            return this.__container;
                        }
                        set container(e) {
                            this.__container = e;
                        }
                        get e() {
                            return this.events;
                        }
                        get options() {
                            return this.__options;
                        }
                        set options(e) {
                            this.__options = e;
                        }
                        get o() {
                            return this.options;
                        }
                        i18n(e, ...t) {
                            return (0, n.i18n)(e, t, this.options);
                        }
                        toggleFullSize(e) {
                            void 0 === e && (e = !this.__isFullSize),
                                e !== this.__isFullSize &&
                                    ((this.__isFullSize = e),
                                    this.e.fire("toggleFullSize", e));
                        }
                        get isLocked() {
                            return "" !== this.__whoLocked;
                        }
                        lock(e = "any") {
                            return (
                                !this.isLocked && ((this.__whoLocked = e), !0)
                            );
                        }
                        unlock() {
                            return (
                                !!this.isLocked && ((this.__whoLocked = ""), !0)
                            );
                        }
                        get isFullSize() {
                            return this.__isFullSize;
                        }
                        getVersion() {
                            return "1.3.38";
                        }
                        static getVersion() {
                            return "1.3.38";
                        }
                        initOptions(e) {
                            this.options = (0, n.ConfigProto)(
                                e || {},
                                (0, n.ConfigProto)(
                                    this.options || {},
                                    s.defaultOptions
                                )
                            );
                        }
                        initOwners() {
                            var e;
                            this.ownerWindow =
                                null !== (e = this.o.ownerWindow) &&
                                void 0 !== e
                                    ? e
                                    : window;
                        }
                        attachEvents(e) {
                            if (!e) return;
                            const t = null == e ? void 0 : e.events;
                            t &&
                                Object.keys(t).forEach((e) =>
                                    this.e.on(e, t[e])
                                );
                        }
                        constructor(e, t = !1) {
                            super(),
                                (this.isJodit = t),
                                (this.isView = !0),
                                (this.parent = null),
                                (this.mods = {}),
                                (this.components = new Set()),
                                (this.version = "1.3.38"),
                                (this.buffer = r.Ke.makeStorage()),
                                (this.storage = r.Ke.makeStorage(
                                    !0,
                                    this.componentName
                                )),
                                (this.OPTIONS = s.defaultOptions),
                                (this.__isFullSize = !1),
                                (this.__whoLocked = ""),
                                (this.isLockedNotBy = (e) =>
                                    this.isLocked && this.__whoLocked !== e),
                                (this.__modulesInstances = new Map()),
                                (this.id = "" + new Date().getTime()),
                                (this.buffer = r.Ke.makeStorage()),
                                this.initOptions(e),
                                this.initOwners(),
                                (this.events = new u.vp(this.od)),
                                (this.create = new l.Create(this.od)),
                                (this.container = this.c.div(
                                    "jodit " + this.componentName
                                )),
                                (this.progressbar = new l.ProgressBar(this)),
                                (this.message = new p.D(this, this.container));
                        }
                        getInstance(e, t) {
                            const i = this.e.fire(
                                (0, n.camelCase)("getInstance_" + e),
                                t
                            );
                            if (i) return i;
                            const s = c.qz[e],
                                o = this.__modulesInstances;
                            if (!(0, n.isFunction)(s))
                                throw (0, n.error)("Need real module name");
                            if (!o.has(e)) {
                                const i =
                                    s.prototype instanceof l.ViewComponent
                                        ? new s(this, t)
                                        : new s(t);
                                this.components.add(i), o.set(e, i);
                            }
                            return o.get(e);
                        }
                        addDisclaimer(e) {
                            this.container.appendChild(e);
                        }
                        beforeDestruct() {
                            this.e.fire(l.STATUSES.beforeDestruct, this),
                                this.components.forEach((e) => {
                                    (0, n.isDestructable)(e) &&
                                        !e.isInDestruct &&
                                        e.destruct();
                                }),
                                this.components.clear();
                        }
                        destruct() {
                            this.isDestructed ||
                                (this.progressbar.destruct(),
                                this.message.destruct(),
                                this.async && this.async.destruct(),
                                this.events && this.e.destruct(),
                                this.buffer && this.buffer.clear(),
                                l.Dom.safeRemove(this.container),
                                super.destruct());
                        }
                    });
                    (m.esNext = !0),
                        (0, o.gn)(
                            [(0, d.hook)(l.STATUSES.beforeDestruct)],
                            m.prototype,
                            "beforeDestruct",
                            null
                        ),
                        (m = s = (0, o.gn)([(0, d.derive)(h.$t, h.Fx)], m)),
                        (m.defaultOptions = {
                            extraButtons: [],
                            textIcons: !1,
                            namespace: "",
                            removeButtons: [],
                            zIndex: 100002,
                            defaultTimeout: 100,
                            fullsize: !1,
                            showTooltip: !0,
                            useNativeTooltip: !1,
                            buttons: [],
                            globalFullSize: !0,
                            language: "auto",
                        });
                },
                28338(e, t, i) {
                    "use strict";
                    i.d(t, {
                        x() {
                            return l;
                        },
                    });
                    var s = i(52784),
                        o = i(52569),
                        r = i(18095),
                        n = i(77574),
                        a = i(46696);
                    let l = class e extends o.G {
                        className() {
                            return "ContextMenu";
                        }
                        show(e, t, i) {
                            const s = this,
                                o = this.j.c.div(this.getFullElName("actions"));
                            (0, n.kJ)(i) &&
                                (i.forEach((e) => {
                                    if (!e) return;
                                    const t = (0, r.zx)(
                                        this.jodit,
                                        e.icon || "empty",
                                        e.title
                                    );
                                    this.jodit && t.setParentView(this.jodit),
                                        t.setMod("context", "menu"),
                                        t.onAction((t) => {
                                            var i;
                                            return (
                                                null === (i = e.exec) ||
                                                    void 0 === i ||
                                                    i.call(s, t),
                                                s.close(),
                                                !1
                                            );
                                        }),
                                        o.appendChild(t.container);
                                }),
                                this.setContent(o).open(
                                    () => ({
                                        left: e,
                                        top: t,
                                        width: 0,
                                        height: 0,
                                    }),
                                    !0
                                ));
                        }
                    };
                    l = (0, s.gn)([a.w], l);
                },
                81650(e, t, i) {
                    "use strict";
                    i.d(t, {
                        V() {
                            return f;
                        },
                    });
                    var s = i(52784),
                        o = i(43854),
                        r = i(36257),
                        n = i(47643),
                        a = (i(52378), i(38870)),
                        l = i(97039),
                        c = i(95950),
                        d = i(78855),
                        h = i(51663),
                        u = i(3889),
                        p = i(86673),
                        m = i(15496);
                    (o.D.prototype.dialog = {
                        namespace: "",
                        extraButtons: [],
                        resizable: !0,
                        draggable: !0,
                        buttons: ["dialog.close"],
                        removeButtons: [],
                        toolbarButtonSize: "middle",
                        zIndex: "inherit",
                    }),
                        (o.D.prototype.controls.dialog = {
                            close: {
                                icon: "cancel",
                                exec(e) {
                                    e.close();
                                },
                            },
                        });
                    let f = class e extends a.C {
                        className() {
                            return "Dialog";
                        }
                        get destination() {
                            var e;
                            return null !== (e = this.o.shadowRoot) &&
                                void 0 !== e
                                ? e
                                : this.od.body;
                        }
                        setElements(e, t) {
                            const i = [];
                            (0, n.asArray)(t).forEach((t) => {
                                if ((0, n.isArray)(t)) {
                                    const s = this.c.div(
                                        this.getFullElName("column")
                                    );
                                    return (
                                        i.push(s),
                                        e.appendChild(s),
                                        this.setElements(s, t)
                                    );
                                }
                                let s;
                                (s = (0, n.isString)(t)
                                    ? this.c.fromHTML(t)
                                    : (0, n.hasContainer)(t)
                                    ? t.container
                                    : t),
                                    i.push(s),
                                    s.parentNode !== e && e.appendChild(s);
                            }),
                                (0, n.toArray)(e.childNodes).forEach((t) => {
                                    -1 === i.indexOf(t) && e.removeChild(t);
                                });
                        }
                        onMouseUp() {
                            (this.draggable || this.resizable) &&
                                (this.removeGlobalResizeListeners(),
                                (this.draggable = !1),
                                (this.resizable = !1),
                                this.unlockSelect(),
                                this.e &&
                                    (this.removeGlobalResizeListeners(),
                                    this.e.fire(this, "endResize endMove")));
                        }
                        onHeaderMouseDown(e) {
                            const t = e.target;
                            !this.o.draggable ||
                                (t && t.nodeName.match(/^(INPUT|SELECT)$/)) ||
                                ((this.draggable = !0),
                                (this.startX = e.clientX),
                                (this.startY = e.clientY),
                                (this.startPoint.x = (0, n.css)(
                                    this.dialog,
                                    "left"
                                )),
                                (this.startPoint.y = (0, n.css)(
                                    this.dialog,
                                    "top"
                                )),
                                this.setMaxZIndex(),
                                e.cancelable && e.preventDefault(),
                                this.lockSelect(),
                                this.addGlobalResizeListeners(),
                                this.e && this.e.fire(this, "startMove"));
                        }
                        onMouseMove(e) {
                            this.draggable &&
                                this.o.draggable &&
                                (this.setPosition(
                                    this.startPoint.x + e.clientX - this.startX,
                                    this.startPoint.y + e.clientY - this.startY
                                ),
                                this.e &&
                                    this.e.fire(
                                        this,
                                        "move",
                                        e.clientX - this.startX,
                                        e.clientY - this.startY
                                    ),
                                e.stopImmediatePropagation()),
                                this.resizable &&
                                    this.o.resizable &&
                                    (this.setSize(
                                        this.startPoint.w +
                                            e.clientX -
                                            this.startX,
                                        this.startPoint.h +
                                            e.clientY -
                                            this.startY
                                    ),
                                    this.e &&
                                        this.e.fire(
                                            this,
                                            "resizeDialog",
                                            e.clientX - this.startX,
                                            e.clientY - this.startY
                                        ));
                        }
                        onEsc(e) {
                            if (
                                this.isOpened &&
                                e.key === r.KEY_ESC &&
                                !0 !== this.getMod("static")
                            ) {
                                const t = this.getMaxZIndexDialog();
                                t ? t.close() : this.close(),
                                    e.stopImmediatePropagation();
                            }
                        }
                        onResizerMouseDown(e) {
                            (this.resizable = !0),
                                (this.startX = e.clientX),
                                (this.startY = e.clientY),
                                (this.startPoint.w = this.dialog.offsetWidth),
                                (this.startPoint.h = this.dialog.offsetHeight),
                                this.lockSelect(),
                                this.addGlobalResizeListeners(),
                                this.e && this.e.fire(this, "startResize");
                        }
                        addGlobalResizeListeners() {
                            const e = this;
                            e.e
                                .on(
                                    e.ow,
                                    "pointermove touchmove",
                                    e.onMouseMove
                                )
                                .on(e.ow, "pointerup touchend", e.onMouseUp);
                        }
                        removeGlobalResizeListeners() {
                            const e = this;
                            e.e
                                .off(
                                    e.ow,
                                    "mousemove pointermove",
                                    e.onMouseMove
                                )
                                .off(e.ow, "mouseup pointerup", e.onMouseUp);
                        }
                        setSize(e, t) {
                            return (
                                null == e && (e = this.dialog.offsetWidth),
                                null == t && (t = this.dialog.offsetHeight),
                                (0, n.css)(this.dialog, {
                                    width: e,
                                    height: t,
                                }),
                                this
                            );
                        }
                        calcAutoSize() {
                            return (
                                this.setSize("auto", "auto"),
                                this.setSize(),
                                this
                            );
                        }
                        setPosition(e, t) {
                            let i =
                                    this.ow.innerWidth / 2 -
                                    this.dialog.offsetWidth / 2,
                                s =
                                    this.ow.innerHeight / 2 -
                                    this.dialog.offsetHeight / 2;
                            return (
                                0 > i && (i = 0),
                                0 > s && (s = 0),
                                void 0 !== e &&
                                    void 0 !== t &&
                                    ((this.offsetX = e),
                                    (this.offsetY = t),
                                    (this.moved =
                                        Math.abs(e - i) > 100 ||
                                        Math.abs(t - s) > 100)),
                                (this.dialog.style.left = (e || i) + "px"),
                                (this.dialog.style.top = (t || s) + "px"),
                                this
                            );
                        }
                        setHeader(e) {
                            return (
                                this.setElements(this.dialogbox_header, e), this
                            );
                        }
                        setContent(e) {
                            return (
                                this.setElements(this.dialogbox_content, e),
                                this
                            );
                        }
                        setFooter(e) {
                            return (
                                this.setElements(this.dialogbox_footer, e),
                                this.setMod("footer", !!e),
                                this
                            );
                        }
                        getZIndex() {
                            return (
                                parseInt(
                                    (0, n.css)(this.container, "zIndex"),
                                    10
                                ) || 0
                            );
                        }
                        getMaxZIndexDialog() {
                            let e,
                                t,
                                i = 0,
                                s = this;
                            return (
                                (0, n.$$)(
                                    ".jodit-dialog",
                                    this.destination
                                ).forEach((o) => {
                                    (e = o.component),
                                        (t = parseInt(
                                            (0, n.css)(o, "zIndex"),
                                            10
                                        )),
                                        e.isOpened &&
                                            !isNaN(t) &&
                                            t > i &&
                                            ((s = e), (i = t));
                                }),
                                s
                            );
                        }
                        setMaxZIndex() {
                            if (this.getMod("static")) return;
                            let e = 20000004,
                                t = 0;
                            (0, n.$$)(
                                ".jodit-dialog",
                                this.destination
                            ).forEach((i) => {
                                (t = parseInt((0, n.css)(i, "zIndex"), 10)),
                                    (e = Math.max(isNaN(t) ? 0 : t, e));
                            }),
                                (this.container.style.zIndex = "" + (e + 1));
                        }
                        toggleFullSize(e) {
                            (0, n.isVoid)(e) && (e = !this.getMod("fullsize")),
                                this.setMod("fullsize", e),
                                super.toggleFullSize(e);
                        }
                        open(e, t, i, s) {
                            if (
                                (d.TB.fire("closeAllPopups hideHelpers"),
                                !1 === this.e.fire(this, "beforeOpen"))
                            )
                                return this;
                            (0, n.isBoolean)(e) && (i = e),
                                (0, n.isBoolean)(t) && (s = t),
                                (this.destroyAfterClose = !0 === i);
                            const o = (0, n.isBoolean)(e) ? void 0 : e,
                                r = (0, n.isBoolean)(t) ? void 0 : t;
                            return (
                                void 0 !== r && this.setHeader(r),
                                o && this.setContent(o),
                                this.setMod("active", !0),
                                (this.isOpened = !0),
                                this.setModal(s),
                                this.destination.appendChild(this.container),
                                !0 !== this.getMod("static")
                                    ? (this.setPosition(
                                          this.offsetX,
                                          this.offsetY
                                      ),
                                      this.setMaxZIndex())
                                    : this.container.style.removeProperty(
                                          "z-index"
                                      ),
                                this.o.fullsize && this.toggleFullSize(!0),
                                this.e.fire("afterOpen", this),
                                this
                            );
                        }
                        setModal(e) {
                            return (
                                (this.isModal = !!e),
                                this.setMod("modal", this.isModal),
                                this
                            );
                        }
                        close() {
                            return (
                                this.isDestructed ||
                                    !this.isOpened ||
                                    !0 === this.getMod("static") ||
                                    !1 === this.e.fire("beforeClose", this) ||
                                    (this.setMod("active", !1),
                                    (this.isOpened = !1),
                                    this.isFullSize && this.toggleFullSize(!1),
                                    l.i.safeRemove(this.container),
                                    this.removeGlobalResizeListeners(),
                                    this.destroyAfterClose && this.destruct(),
                                    this.e.fire(this, "afterClose"),
                                    this.e.fire(this.ow, "joditCloseDialog")),
                                this
                            );
                        }
                        constructor(e = {}) {
                            super(e),
                                (this.destroyAfterClose = !1),
                                (this.moved = !1),
                                (this.resizable = !1),
                                (this.draggable = !1),
                                (this.startX = 0),
                                (this.startY = 0),
                                (this.startPoint = { x: 0, y: 0, w: 0, h: 0 }),
                                (this.lockSelect = () => {
                                    this.setMod("moved", !0);
                                }),
                                (this.unlockSelect = () => {
                                    this.setMod("moved", !1);
                                }),
                                (this.onResize = () => {
                                    this.options &&
                                        this.o.resizable &&
                                        !this.moved &&
                                        this.isOpened &&
                                        !this.offsetX &&
                                        !this.offsetY &&
                                        this.setPosition();
                                }),
                                (this.isModal = !1),
                                (this.isOpened = !1);
                            const t = this;
                            (t.options = (0, n.ConfigProto)(
                                e,
                                (0, n.ConfigProto)(
                                    o.D.prototype.dialog,
                                    u.G.defaultOptions
                                )
                            )),
                                l.i.safeRemove(t.container);
                            const i = this.getFullElName.bind(this);
                            (t.container = this.c.fromHTML(
                                `<div class="jodit jodit-dialog ${
                                    this.componentName
                                }">\n\t\t\t\t<div class="${i(
                                    "overlay"
                                )}"></div>\n\t\t\t\t<div class="${this.getFullElName(
                                    "panel"
                                )}">\n\t\t\t\t\t<div class="${i(
                                    "header"
                                )}">\n\t\t\t\t\t\t<div class="${i(
                                    "header-title"
                                )}"></div>\n\t\t\t\t\t\t<div class="${i(
                                    "header-toolbar"
                                )}"></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div class="${i(
                                    "content"
                                )}"></div>\n\t\t\t\t\t<div class="${i(
                                    "footer"
                                )}"></div>\n\t\t\t\t\t<div class="${i(
                                    "resizer"
                                )}">${p.JO.get(
                                    "resize_handler"
                                )}</div>\n\t\t\t\t</div>\n\t\t\t</div>`
                            )),
                                this.o.zIndex &&
                                    (this.container.style.zIndex =
                                        "" + this.o.zIndex),
                                (0, n.attr)(t.container, "role", "dialog"),
                                Object.defineProperty(
                                    t.container,
                                    "component",
                                    { value: this }
                                ),
                                t
                                    .setMod("theme", t.o.theme || "default")
                                    .setMod("resizable", !!t.o.resizable);
                            const s = t.getElm("panel"),
                                r = t.getElm("resizer"),
                                a = t.getElm("header-title"),
                                c = t.getElm("content"),
                                h = t.getElm("footer"),
                                f = t.getElm("header-toolbar");
                            this.message.destruct(),
                                (this.message = new m.D(this, s)),
                                (this.dialog = s),
                                (this.resizer = r),
                                (this.dialogbox_header = a),
                                (this.dialogbox_content = c),
                                (this.dialogbox_footer = h),
                                (this.dialogbox_toolbar = f),
                                (0, n.css)(t.dialog, {
                                    maxWidth: t.options.maxWidth,
                                    minHeight: t.options.minHeight,
                                    minWidth: t.options.minWidth,
                                });
                            const g = t.getElm("header");
                            g &&
                                t.e.on(
                                    g,
                                    "pointerdown touchstart",
                                    t.onHeaderMouseDown
                                ),
                                t.e.on(
                                    t.resizer,
                                    "mousedown touchstart",
                                    t.onResizerMouseDown
                                );
                            const v = d.pw.get("fullsize");
                            (0, n.isFunction)(v) && v(t),
                                this.e
                                    .on(t.container, "close_dialog", t.close)
                                    .on(this.ow, "keydown", this.onEsc)
                                    .on(this.ow, "resize", this.onResize);
                        }
                        buildToolbar() {
                            this.o.buttons &&
                                this.toolbar
                                    .build((0, n.splitArray)(this.o.buttons))
                                    .setMod("mode", "header")
                                    .appendTo(this.dialogbox_toolbar);
                        }
                        destruct() {
                            this.isInDestruct ||
                                (this.setStatus(c.n$.beforeDestruct),
                                this.isOpened && this.close(),
                                this.events &&
                                    (this.removeGlobalResizeListeners(),
                                    this.events
                                        .off(
                                            this.container,
                                            "close_dialog",
                                            self.close
                                        )
                                        .off(this.ow, "keydown", this.onEsc)
                                        .off(this.ow, "resize", this.onResize)),
                                super.destruct());
                        }
                    };
                    (0, s.gn)([h.autobind], f.prototype, "onMouseUp", null),
                        (0, s.gn)(
                            [h.autobind],
                            f.prototype,
                            "onHeaderMouseDown",
                            null
                        ),
                        (0, s.gn)(
                            [h.autobind],
                            f.prototype,
                            "onMouseMove",
                            null
                        ),
                        (0, s.gn)([h.autobind], f.prototype, "onEsc", null),
                        (0, s.gn)(
                            [h.autobind],
                            f.prototype,
                            "onResizerMouseDown",
                            null
                        ),
                        (0, s.gn)([h.autobind], f.prototype, "close", null),
                        (0, s.gn)(
                            [(0, h.hook)("ready")],
                            f.prototype,
                            "buildToolbar",
                            null
                        ),
                        (f = (0, s.gn)([h.component], f));
                },
                96538(e, t, i) {
                    "use strict";
                    i.d(t, {
                        bZ() {
                            return a;
                        },
                        I4() {
                            return h;
                        },
                        Vq() {
                            return s.V;
                        },
                        NL() {
                            return l;
                        },
                    });
                    var s = i(81650),
                        o = i(47643),
                        r = i(97039),
                        n = i(86673);
                    function a(e, t, i, a = "jodit-dialog_alert") {
                        (0, o.isFunction)(t) && ((i = t), (t = void 0));
                        const l = this instanceof s.V ? this : new s.V(),
                            c = l.c.div(a),
                            d = (0, n.zx)(l, "ok", "Ok");
                        return (
                            (0, o.asArray)(e).forEach((e) => {
                                c.appendChild(
                                    r.i.isNode(e) ? e : l.c.fromHTML(e)
                                );
                            }),
                            d.onAction(() => {
                                (i && (0, o.isFunction)(i) && !1 === i(l)) ||
                                    l.close();
                            }),
                            l.setFooter([d]),
                            l.open(c, t || "&nbsp;", !0, !0),
                            d.focus(),
                            l
                        );
                    }
                    function l(e, t, i, r, a) {
                        const l = this instanceof s.V ? this : new s.V(),
                            c = (0, n.zx)(l, "cancel", "Cancel"),
                            d = (0, n.zx)(l, "ok", "Ok"),
                            h = l.c.element("form", {
                                class: "jodit-dialog_prompt",
                            }),
                            u = l.c.element("input", {
                                autofocus: !0,
                                class: "jodit-input",
                            }),
                            p = l.c.element("label");
                        (0, o.isFunction)(t) && ((i = t), (t = void 0)),
                            r && (0, o.attr)(u, "placeholder", r),
                            p.appendChild(l.c.text(e)),
                            h.appendChild(p),
                            h.appendChild(u),
                            c.onAction(l.close);
                        const m = () => {
                            (i && (0, o.isFunction)(i) && !1 === i(u.value)) ||
                                l.close();
                        };
                        return (
                            d.onAction(m),
                            l.e.on(h, "submit", () => (m(), !1)),
                            l.setFooter([d, c]),
                            l.open(h, t || "&nbsp;", !0, !0),
                            u.focus(),
                            void 0 !== a &&
                                a.length &&
                                ((u.value = a), u.select()),
                            l
                        );
                    }
                    var c = i(27177),
                        d = i(4846);
                    function h(e, t, i) {
                        const o = this instanceof s.V ? this : new s.V(),
                            r = o.c.fromHTML(
                                '<form class="jodit-dialog_prompt"></form>'
                            ),
                            n = o.c.element("label");
                        (0, c.m)(t) && ((i = t), (t = void 0)),
                            n.appendChild(o.c.fromHTML(e)),
                            r.appendChild(n);
                        const a = (e) => () => {
                                (i && !1 === i(e)) || o.close();
                            },
                            l = (0, d.zx)(o, "cancel", "Cancel"),
                            h = (0, d.zx)(o, "ok", "Yes");
                        return (
                            l.onAction(a(!1)),
                            h.onAction(a(!0)),
                            o.e.on(r, "submit", () => (a(!0)(), !1)),
                            o.setFooter([h, l]),
                            o.open(r, t || "&nbsp;", !0, !0),
                            h.focus(),
                            o
                        );
                    }
                },
                10115(e, t, i) {
                    "use strict";
                    i.d(t, {
                        Z() {
                            return o;
                        },
                    });
                    var s = i(47643);
                    class o {
                        constructor(e) {
                            (this.data = e),
                                Object.keys(e).forEach((t) => {
                                    this[t] = e[t];
                                });
                        }
                        static create(e) {
                            return e instanceof o ? e : new o(e);
                        }
                        get path() {
                            return (0, s.normalizePath)(
                                this.data.source.path
                                    ? this.data.source.path + "/"
                                    : "/"
                            );
                        }
                        get imageURL() {
                            const e = this.time || "" + new Date().getTime(),
                                {
                                    thumbIsAbsolute: t,
                                    source: i,
                                    thumb: o,
                                    file: r,
                                } = this.data,
                                n = o || r;
                            return t && n
                                ? n
                                : (0, s.normalizeUrl)(
                                      i.baseurl,
                                      i.path,
                                      n || ""
                                  ) +
                                      "?_tmst=" +
                                      encodeURIComponent(e);
                        }
                        get fileURL() {
                            let { name: e } = this.data;
                            const {
                                file: t,
                                fileIsAbsolute: i,
                                source: o,
                            } = this.data;
                            return (
                                void 0 !== t && (e = t),
                                i && e
                                    ? e
                                    : (0, s.normalizeUrl)(
                                          o.baseurl,
                                          o.path,
                                          e || ""
                                      )
                            );
                        }
                        get time() {
                            const { changed: e } = this.data;
                            return (
                                (e &&
                                    ("number" == typeof e
                                        ? new Date(e).toLocaleString()
                                        : e)) ||
                                ""
                            );
                        }
                        get uniqueHashKey() {
                            const e = this.data;
                            let t = [
                                e.sourceName,
                                e.name,
                                e.file,
                                this.time,
                                e.thumb,
                            ].join("_");
                            return (
                                (t = t
                                    .toLowerCase()
                                    .replace(/[^0-9a-z\-.]/g, "-")),
                                t
                            );
                        }
                        toJSON() {
                            return this.data;
                        }
                    }
                },
                7e3(e, t, i) {
                    "use strict";
                    i.d(t, {
                        J() {
                            return l;
                        },
                    });
                    var s = i(52784),
                        o = i(47643),
                        r = i(67106),
                        n = i(51663),
                        a = i(10115);
                    const l = "default";
                    let c = class e {
                        constructor(e, t) {
                            (this.parent = e),
                                (this.options = t),
                                (this.__currentPermissions = null),
                                (this.ajaxInstances = new Map()),
                                (this.progressHandler = (e) => {});
                        }
                        get o() {
                            return this.options;
                        }
                        get(e) {
                            const t = this.ajaxInstances;
                            if (t.has(e)) {
                                const i = t.get(e);
                                null == i || i.abort(), t.delete(e);
                            }
                            const i = (0, o.ConfigProto)(
                                void 0 !== this.options[e]
                                    ? this.options[e]
                                    : {},
                                (0, o.ConfigProto)(
                                    { onProgress: this.progressHandler },
                                    this.o.ajax
                                )
                            );
                            i.prepareData &&
                                (i.data = i.prepareData.call(this, i.data));
                            const s = new r.t(i);
                            t.set(e, s);
                            const n = s.send();
                            return (
                                n
                                    .finally(() => {
                                        s.destruct(),
                                            t.delete(e),
                                            this.progressHandler(100);
                                    })
                                    .catch(() => null),
                                n
                                    .then((e) => e.json())
                                    .then((e) => {
                                        if (e && !this.isSuccess(e))
                                            throw Error(this.getMessage(e));
                                        return e;
                                    })
                            );
                        }
                        onProgress(e) {
                            this.progressHandler = e;
                        }
                        async permissions(e, t) {
                            return this.o.permissions
                                ? ((this.o.permissions.data.path = e),
                                  (this.o.permissions.data.source = t),
                                  this.o.permissions.url
                                      ? this.get("permissions").then((e) => {
                                            let t = this.o.permissions.process;
                                            if (
                                                (t || (t = this.o.ajax.process),
                                                t)
                                            ) {
                                                const i = t.call(self, e);
                                                i.data.permissions &&
                                                    (this.__currentPermissions =
                                                        i.data.permissions);
                                            }
                                            return this.__currentPermissions;
                                        })
                                      : null)
                                : null;
                        }
                        canI(e) {
                            const t = "allow" + e,
                                i = this.o.permissionsPresets[t];
                            return void 0 !== i
                                ? i
                                : null == this.__currentPermissions ||
                                      void 0 === this.__currentPermissions[t] ||
                                      this.__currentPermissions[t];
                        }
                        __items(e, t, i, s) {
                            const o = this.options;
                            return o.items
                                ? ((o.items.data.path = e),
                                  (o.items.data.source = t),
                                  (o.items.data.mods = i),
                                  this.get("items").then((e) => {
                                      let t = this.o.items.process;
                                      return (
                                          t || (t = this.o.ajax.process),
                                          t && (e = t.call(self, e)),
                                          s(e)
                                      );
                                  }))
                                : Promise.reject("Set Items api options");
                        }
                        items(e, t, i = {}) {
                            return this.__items(e, t, i, (e) =>
                                this.generateItemsList(e.data.sources, i)
                            );
                        }
                        itemsEx(e, t, i = {}) {
                            return this.__items(e, t, i, (e) => {
                                return {
                                    items: this.generateItemsList(
                                        e.data.sources,
                                        i
                                    ),
                                    loadedTotal:
                                        ((t = e.data.sources),
                                        t.reduce(
                                            (e, t) => e + t.files.length,
                                            0
                                        )),
                                };
                                var t;
                            });
                        }
                        generateItemsList(e, t = {}) {
                            const i = [],
                                s = (e) => {
                                    var i;
                                    return (
                                        !(null === (i = t.filterWord) ||
                                        void 0 === i
                                            ? void 0
                                            : i.length) ||
                                        void 0 === this.o.filter ||
                                        this.o.filter(e, t.filterWord)
                                    );
                                };
                            return (
                                e.forEach((e) => {
                                    if (e.files && e.files.length) {
                                        const { sort: r } = this.o;
                                        (0, o.isFunction)(r) &&
                                            t.sortBy &&
                                            e.files.sort((e, i) =>
                                                r(e, i, t.sortBy)
                                            ),
                                            e.files.forEach((o) => {
                                                s(o) &&
                                                    ((e) =>
                                                        "folder" === e.type ||
                                                        !t.onlyImages ||
                                                        void 0 === e.isImage ||
                                                        e.isImage)(o) &&
                                                    i.push(
                                                        a.Z.create({
                                                            ...o,
                                                            sourceName: e.name,
                                                            source: e,
                                                        })
                                                    );
                                            });
                                    }
                                }),
                                i
                            );
                        }
                        async tree(e, t) {
                            return (
                                (e = (0, o.normalizeRelativePath)(e)),
                                this.o.folder
                                    ? (await this.permissions(e, t),
                                      (this.o.folder.data.path = e),
                                      (this.o.folder.data.source = t),
                                      this.get("folder").then((e) => {
                                          let t = this.o.folder.process;
                                          return (
                                              t || (t = this.o.ajax.process),
                                              t && (e = t.call(self, e)),
                                              e.data.sources
                                          );
                                      }))
                                    : Promise.reject("Set Folder Api options")
                            );
                        }
                        getPathByUrl(e) {
                            return (
                                (0, o.set)(
                                    "options.getLocalFileByUrl.data.url",
                                    e,
                                    this
                                ),
                                this.get("getLocalFileByUrl").then((e) => {
                                    if (this.isSuccess(e)) return e.data;
                                    throw (0, o.error)(this.getMessage(e));
                                })
                            );
                        }
                        createFolder(e, t, i) {
                            const { create: s } = this.o;
                            if (!s)
                                throw (0, o.error)("Set Create api options");
                            return (
                                (s.data.source = i),
                                (s.data.path = t),
                                (s.data.name = e),
                                this.get("create").then((e) => {
                                    if (this.isSuccess(e)) return !0;
                                    throw (0, o.error)(this.getMessage(e));
                                })
                            );
                        }
                        move(e, t, i, s) {
                            const r = s ? "fileMove" : "folderMove",
                                n = this.options[r];
                            if (!n) throw (0, o.error)("Set Move api options");
                            return (
                                (n.data.from = e),
                                (n.data.path = t),
                                (n.data.source = i),
                                this.get(r).then((e) => {
                                    if (this.isSuccess(e)) return !0;
                                    throw (0, o.error)(this.getMessage(e));
                                })
                            );
                        }
                        remove(e, t, i, s) {
                            const r = this.o[e];
                            if (!r)
                                throw (0, o.error)(`Set "${e}" api options`);
                            return (
                                (r.data.path = t),
                                (r.data.name = i),
                                (r.data.source = s),
                                this.get(e).then(
                                    (e) => (
                                        r.process &&
                                            (e = r.process.call(this, e)),
                                        this.getMessage(e)
                                    )
                                )
                            );
                        }
                        fileRemove(e, t, i) {
                            return this.remove("fileRemove", e, t, i);
                        }
                        folderRemove(e, t, i) {
                            return this.remove("folderRemove", e, t, i);
                        }
                        rename(e, t, i, s, r) {
                            const n = this.o[e];
                            if (!n)
                                throw (0, o.error)(`Set "${e}" api options`);
                            return (
                                (n.data.path = t),
                                (n.data.name = i),
                                (n.data.newname = s),
                                (n.data.source = r),
                                this.get(e).then(
                                    (e) => (
                                        n.process &&
                                            (e = n.process.call(self, e)),
                                        this.getMessage(e)
                                    )
                                )
                            );
                        }
                        folderRename(e, t, i, s) {
                            return this.rename("folderRename", e, t, i, s);
                        }
                        fileRename(e, t, i, s) {
                            return this.rename("fileRename", e, t, i, s);
                        }
                        changeImage(e, t, i, s, o, r) {
                            this.o[e] || (this.o[e] = { data: {} });
                            const n = this.o[e];
                            return (
                                void 0 === n.data && (n.data = { action: e }),
                                (n.data.newname = o || s),
                                r && (n.data.box = r),
                                (n.data.path = t),
                                (n.data.name = s),
                                (n.data.source = i),
                                this.get(e).then(() => !0)
                            );
                        }
                        crop(e, t, i, s, o) {
                            return this.changeImage("crop", e, t, i, s, o);
                        }
                        resize(e, t, i, s, o) {
                            return this.changeImage("resize", e, t, i, s, o);
                        }
                        getMessage(e) {
                            return this.options.getMessage(e);
                        }
                        isSuccess(e) {
                            return this.options.isSuccess(e);
                        }
                        destruct() {
                            this.ajaxInstances.forEach((e) => e.destruct()),
                                this.ajaxInstances.clear();
                        }
                    };
                    (c = (0, s.gn)([n.autobind], c)), (t.Z = c);
                },
                75164(e, t, i) {
                    "use strict";
                    i.d(t, {
                        L() {
                            return n;
                        },
                        S() {
                            return r;
                        },
                    });
                    var s = i(7e3),
                        o = i(28338);
                    function r(e, t) {
                        return new s.Z(e, t);
                    }
                    function n(e) {
                        return new o.x(e);
                    }
                },
                26609(e, t, i) {
                    "use strict";
                    i.d(t, {
                        f() {
                            return R;
                        },
                        F() {
                            return q;
                        },
                    });
                    var s = i(52784),
                        o = i(43854),
                        r = i(36257),
                        n = i(50372),
                        a = i(47643),
                        l = i(97039),
                        c = i(75164),
                        d = i(94585),
                        h = i(86673);
                    const u = new WeakMap(),
                        p = (e) => {
                            let t = u.get(e);
                            return t || ((t = {}), u.set(e, t)), t;
                        };
                    function m(e) {
                        return (
                            e.files.setMod("active", !0),
                            e.files.setMod("loading", !0),
                            e.dataProvider
                                .items(
                                    e.state.currentPath,
                                    e.state.currentSource,
                                    {
                                        sortBy: e.state.sortBy,
                                        onlyImages: e.state.onlyImages,
                                        filterWord: e.state.filterWord,
                                    }
                                )
                                .then((t) => {
                                    t &&
                                        ((e.state.elements = t),
                                        (e.state.activeElements = []));
                                })
                                .catch(e.status)
                                .finally(() => e.files.setMod("loading", !1))
                        );
                    }
                    async function f(e) {
                        e.tree.setMod("active", !0),
                            l.i.detach(e.tree.container);
                        const t = m(e);
                        if (e.o.showFoldersPanel) {
                            e.tree.setMod("loading", !0);
                            const i = e.dataProvider
                                .tree(
                                    e.state.currentPath,
                                    e.state.currentSource
                                )
                                .then((t) => {
                                    e.state.sources = t;
                                })
                                .catch(e.status)
                                .finally(() => e.tree.setMod("loading", !1));
                            return Promise.all([i, t]);
                        }
                        return e.tree.setMod("active", !1), t;
                    }
                    function g() {
                        const e = p(this),
                            {
                                state: t,
                                files: i,
                                create: s,
                                options: o,
                            } = this,
                            r = (t) => {
                                const i = t.uniqueHashKey;
                                if (e[i]) return e[i].elm;
                                const r = s.fromHTML(
                                    o.getThumbTemplate.call(
                                        this,
                                        t,
                                        t.source,
                                        "" + t.sourceName
                                    )
                                );
                                return (
                                    (r.dataset.key = i),
                                    (e[i] = { item: t, elm: r }),
                                    e[i].elm
                                );
                            };
                        t.on(
                            ["change.currentPath", "change.currentSource"],
                            this.async.debounce(() => {
                                this.o.saveStateInStorage &&
                                    this.o.saveStateInStorage
                                        .storeLastOpenedFolder &&
                                    this.storage
                                        .set(
                                            "currentPath",
                                            this.state.currentPath
                                        )
                                        .set(
                                            "currentSource",
                                            this.state.currentSource
                                        ),
                                    f(this).catch(this.status);
                            }, this.defaultTimeout)
                        )
                            .on("beforeChange.activeElements", () => {
                                t.activeElements.forEach((t) => {
                                    const s = t.uniqueHashKey,
                                        { elm: o } = e[s];
                                    o &&
                                        o.classList.remove(
                                            i.getFullElName(
                                                "item",
                                                "active",
                                                !0
                                            )
                                        );
                                });
                            })
                            .on("change.activeElements", () => {
                                this.e.fire("changeSelection"),
                                    t.activeElements.forEach((t) => {
                                        const s = t.uniqueHashKey,
                                            { elm: o } = e[s];
                                        o &&
                                            o.classList.add(
                                                i.getFullElName(
                                                    "item",
                                                    "active",
                                                    !0
                                                )
                                            );
                                    });
                            })
                            .on("change.view", () => {
                                i.setMod("view", t.view),
                                    this.o.saveStateInStorage &&
                                        this.o.saveStateInStorage.storeView &&
                                        this.storage.set("view", t.view);
                            })
                            .on("change.sortBy", () => {
                                this.o.saveStateInStorage &&
                                    this.o.saveStateInStorage.storeSortBy &&
                                    this.storage.set("sortBy", t.sortBy);
                            })
                            .on(
                                "change.elements",
                                this.async.debounce(() => {
                                    l.i.detach(i.container),
                                        t.elements.length
                                            ? t.elements.forEach((e) => {
                                                  this.files.container.appendChild(
                                                      r(e)
                                                  );
                                              })
                                            : i.container.appendChild(
                                                  s.div(
                                                      this.componentName +
                                                          "_no-files_true",
                                                      this.i18n(
                                                          "There are no files"
                                                      )
                                                  )
                                              );
                                }, this.defaultTimeout)
                            )
                            .on(
                                "change.sources",
                                this.async.debounce(() => {
                                    l.i.detach(this.tree.container),
                                        t.sources.forEach((e) => {
                                            const t = e.name;
                                            if (
                                                (t &&
                                                    "default" !== t &&
                                                    this.tree.container.appendChild(
                                                        s.div(
                                                            this.tree.getFullElName(
                                                                "source-title"
                                                            ),
                                                            t
                                                        )
                                                    ),
                                                e.folders.forEach((i) => {
                                                    const r = s.a(
                                                            this.tree.getFullElName(
                                                                "item"
                                                            ),
                                                            {
                                                                draggable:
                                                                    "draggable",
                                                                href: "#",
                                                                "data-path": (0,
                                                                d.AH)(
                                                                    e.path,
                                                                    i + "/"
                                                                ),
                                                                "data-name": i,
                                                                "data-source":
                                                                    t,
                                                                "data-source-path":
                                                                    e.path,
                                                            },
                                                            s.span(
                                                                this.tree.getFullElName(
                                                                    "item-title"
                                                                ),
                                                                i
                                                            )
                                                        ),
                                                        n = (s) => (o) => {
                                                            this.e.fire(
                                                                s +
                                                                    ".filebrowser",
                                                                {
                                                                    name: i,
                                                                    path: (0,
                                                                    d.AH)(
                                                                        e.path +
                                                                            "/"
                                                                    ),
                                                                    source: t,
                                                                }
                                                            ),
                                                                o.stopPropagation(),
                                                                o.preventDefault();
                                                        };
                                                    if (
                                                        (this.e.on(
                                                            r,
                                                            "click",
                                                            n("openFolder")
                                                        ),
                                                        this.tree.container.appendChild(
                                                            r
                                                        ),
                                                        ".." !== i && "." !== i)
                                                    ) {
                                                        if (
                                                            o.renameFolder &&
                                                            this.dataProvider.canI(
                                                                "FolderRename"
                                                            )
                                                        ) {
                                                            const e = (0, h.zx)(
                                                                this,
                                                                {
                                                                    icon: {
                                                                        name: "pencil",
                                                                    },
                                                                    name: "rename",
                                                                    tooltip:
                                                                        "Rename",
                                                                    size: "tiny",
                                                                }
                                                            );
                                                            e.onAction(
                                                                n(
                                                                    "renameFolder"
                                                                )
                                                            ),
                                                                r.appendChild(
                                                                    e.container
                                                                );
                                                        }
                                                        if (
                                                            o.deleteFolder &&
                                                            this.dataProvider.canI(
                                                                "FolderRemove"
                                                            )
                                                        ) {
                                                            const e = (0, h.zx)(
                                                                this,
                                                                {
                                                                    icon: {
                                                                        name: "cancel",
                                                                    },
                                                                    name: "remove",
                                                                    tooltip:
                                                                        "Delete",
                                                                    size: "tiny",
                                                                }
                                                            );
                                                            e.onAction(
                                                                n(
                                                                    "removeFolder"
                                                                )
                                                            ),
                                                                r.appendChild(
                                                                    e.container
                                                                );
                                                        }
                                                    }
                                                }),
                                                o.createNewFolder &&
                                                    this.dataProvider.canI(
                                                        "FolderCreate"
                                                    ))
                                            ) {
                                                const i = (0, h.zx)(
                                                    this,
                                                    "plus",
                                                    "Add folder",
                                                    "secondary"
                                                );
                                                i.onAction(() => {
                                                    this.e.fire("addFolder", {
                                                        path: (0, d.AH)(
                                                            e.path + "/"
                                                        ),
                                                        source: t,
                                                    });
                                                }),
                                                    this.tree.append(i);
                                            }
                                        });
                                }, this.defaultTimeout)
                            );
                    }
                    var v = i(80266);
                    function b(e, t, i) {
                        return e.dataProvider
                            .fileRemove(e.state.currentPath, t, i)
                            .then((i) => {
                                e.status(
                                    i || e.i18n('File "%s" was deleted', t),
                                    !0
                                );
                            })
                            .catch(e.status);
                    }
                    const y = "jodit-filebrowser-preview",
                        w = (e = "next", t = "right") =>
                            `<div class="${y}__navigation ${y}__navigation_arrow_${e}">` +
                            h.JO.get("angle-" + t) +
                            "</a>";
                    var k = (e) => {
                        if (!e.o.contextMenu) return () => {};
                        const t = (0, c.L)(e);
                        return (i) => {
                            const s = C(i.target, e.container);
                            if (!s) return;
                            let o = s;
                            const r = e.options,
                                n = (e) => (0, a.attr)(o, e) || "";
                            return (
                                e.async.setTimeout(() => {
                                    const c = S(s, p(e));
                                    c &&
                                        ((e.state.activeElements = [c]),
                                        t.show(i.clientX, i.clientY, [
                                            !(
                                                "1" === n("data-is-file") ||
                                                !r.editImage ||
                                                (!e.dataProvider.canI(
                                                    "ImageResize"
                                                ) &&
                                                    !e.dataProvider.canI(
                                                        "ImageCrop"
                                                    ))
                                            ) && {
                                                icon: "pencil",
                                                title: "Edit",
                                                exec() {
                                                    return v.r.call(
                                                        e,
                                                        n("href"),
                                                        n("data-name"),
                                                        n("data-path"),
                                                        n("data-source")
                                                    );
                                                },
                                            },
                                            !!e.dataProvider.canI(
                                                "FileRename"
                                            ) && {
                                                icon: "italic",
                                                title: "Rename",
                                                exec() {
                                                    e.e.fire(
                                                        "fileRename.filebrowser",
                                                        n("data-name"),
                                                        n("data-path"),
                                                        n("data-source")
                                                    );
                                                },
                                            },
                                            !!e.dataProvider.canI(
                                                "FileRemove"
                                            ) && {
                                                icon: "bin",
                                                title: "Delete",
                                                async exec() {
                                                    try {
                                                        await b(
                                                            e,
                                                            n("data-name"),
                                                            n("data-source")
                                                        );
                                                    } catch (t) {
                                                        return e.status(t);
                                                    }
                                                    return (
                                                        (e.state.activeElements =
                                                            []),
                                                        f(e).catch(e.status)
                                                    );
                                                },
                                            },
                                            !!r.preview && {
                                                icon: "eye",
                                                title: "Preview",
                                                exec() {
                                                    const t = e.dlg({
                                                            buttons: [
                                                                "fullsize",
                                                                "dialog.close",
                                                            ],
                                                        }),
                                                        i = e.c.div(
                                                            y,
                                                            '<div class="jodit-icon_loader"></div>'
                                                        ),
                                                        s = e.c.div(
                                                            y + "__box"
                                                        ),
                                                        c = e.c.fromHTML(w()),
                                                        d = e.c.fromHTML(
                                                            w("prev", "left")
                                                        ),
                                                        h = (n) => {
                                                            const a =
                                                                e.c.element(
                                                                    "img"
                                                                );
                                                            a.setAttribute(
                                                                "src",
                                                                n
                                                            );
                                                            const h = () => {
                                                                var n;
                                                                e.isInDestruct ||
                                                                    (e.e.off(
                                                                        a,
                                                                        "load"
                                                                    ),
                                                                    l.i.detach(
                                                                        i
                                                                    ),
                                                                    r.showPreviewNavigation &&
                                                                        (l.i.prevWithClass(
                                                                            o,
                                                                            e.files.getFullElName(
                                                                                "item"
                                                                            )
                                                                        ) &&
                                                                            i.appendChild(
                                                                                d
                                                                            ),
                                                                        l.i.nextWithClass(
                                                                            o,
                                                                            e.files.getFullElName(
                                                                                "item"
                                                                            )
                                                                        ) &&
                                                                            i.appendChild(
                                                                                c
                                                                            )),
                                                                    i.appendChild(
                                                                        s
                                                                    ),
                                                                    s.appendChild(
                                                                        a
                                                                    ),
                                                                    t.setPosition(),
                                                                    null ===
                                                                        (n =
                                                                            null ==
                                                                            e
                                                                                ? void 0
                                                                                : e.events) ||
                                                                        void 0 ===
                                                                            n ||
                                                                        n.fire(
                                                                            "previewOpenedAndLoaded"
                                                                        ));
                                                            };
                                                            e.e.on(
                                                                a,
                                                                "load",
                                                                h
                                                            ),
                                                                a.complete &&
                                                                    h();
                                                        };
                                                    e.e.on(
                                                        [c, d],
                                                        "click",
                                                        function () {
                                                            if (
                                                                ((o =
                                                                    this === c
                                                                        ? l.i.nextWithClass(
                                                                              o,
                                                                              e.files.getFullElName(
                                                                                  "item"
                                                                              )
                                                                          )
                                                                        : l.i.prevWithClass(
                                                                              o,
                                                                              e.files.getFullElName(
                                                                                  "item"
                                                                              )
                                                                          )),
                                                                !o)
                                                            )
                                                                throw (0,
                                                                a.error)(
                                                                    "Need element"
                                                                );
                                                            l.i.detach(i),
                                                                l.i.detach(s),
                                                                (i.innerHTML =
                                                                    '<div class="jodit-icon_loader"></div>'),
                                                                h(n("href"));
                                                        }
                                                    ),
                                                        e.e.on(
                                                            "beforeDestruct",
                                                            () => {
                                                                t.destruct();
                                                            }
                                                        ),
                                                        t.container.classList.add(
                                                            y + "__dialog"
                                                        ),
                                                        t.setContent(i),
                                                        t.setPosition(),
                                                        t.open(),
                                                        h(n("href")),
                                                        e.events
                                                            .on(
                                                                "beforeDestruct",
                                                                () => {
                                                                    t.destruct();
                                                                }
                                                            )
                                                            .fire(
                                                                "previewOpened"
                                                            );
                                                },
                                            },
                                            {
                                                icon: "upload",
                                                title: "Download",
                                                exec() {
                                                    const t = n("href");
                                                    t && e.ow.open(t);
                                                },
                                            },
                                        ]));
                                }, e.defaultTimeout),
                                e.e
                                    .on("beforeClose", () => t.close())
                                    .on("beforeDestruct", () => t.destruct()),
                                i.stopPropagation(),
                                i.preventDefault(),
                                !1
                            );
                        };
                    };
                    const C = (e, t, i = "a") =>
                            l.i.closest(e, (e) => l.i.isTag(e, i), t),
                        S = (e, t) => {
                            const { key: i } = e.dataset,
                                { item: s } = t[i || ""];
                            return s;
                        };
                    function x() {
                        let e = !1;
                        const t = p(this),
                            i = this;
                        i.e
                            .on(i.tree.container, "dragstart", (t) => {
                                const s = C(t.target, i.container);
                                s && i.o.moveFolder && (e = s);
                            })
                            .on(i.tree.container, "drop", (t) => {
                                if ((i.o.moveFile || i.o.moveFolder) && e) {
                                    let s = (0, a.attr)(e, "-path") || "";
                                    if (
                                        !i.o.moveFolder &&
                                        e.classList.contains(
                                            this.tree.getFullElName("item")
                                        )
                                    )
                                        return !1;
                                    if (
                                        e.classList.contains(
                                            this.files.getFullElName("item")
                                        ) &&
                                        ((s += (0, a.attr)(e, "-name")),
                                        !i.o.moveFile)
                                    )
                                        return !1;
                                    const o = C(t.target, i.container);
                                    if (!o) return;
                                    i.dataProvider
                                        .move(
                                            s,
                                            (0, a.attr)(o, "-path") || "",
                                            (0, a.attr)(o, "-source") || "",
                                            e.classList.contains(
                                                this.files.getFullElName("item")
                                            )
                                        )
                                        .then(() => f(this))
                                        .catch(i.status),
                                        (e = !1);
                                }
                            })
                            .on(i.files.container, "contextmenu", k(i))
                            .on(i.files.container, "click", (e) => {
                                (0, a.ctrlKey)(e) ||
                                    (this.state.activeElements = []);
                            })
                            .on(i.files.container, "click", (e) => {
                                const s = C(e.target, i.container);
                                if (!s) return;
                                const o = S(s, t);
                                return o
                                    ? ((i.state.activeElements = (0, a.ctrlKey)(
                                          e
                                      )
                                          ? [...i.state.activeElements, o]
                                          : [o]),
                                      e.stopPropagation(),
                                      !1)
                                    : void 0;
                            })
                            .on(i.files.container, "dragstart", (t) => {
                                if (i.o.moveFile) {
                                    const s = C(t.target, i.container);
                                    if (!s) return;
                                    e = s;
                                }
                            })
                            .on(i.container, "drop", (e) => e.preventDefault());
                    }
                    var E = i(77574),
                        _ = i(7e3);
                    function j() {
                        const e = this.state,
                            t = this.dataProvider,
                            i = this;
                        i.e
                            .on("view.filebrowser", (t) => {
                                t !== e.view && (e.view = t);
                            })
                            .on("sort.filebrowser", (t) => {
                                t !== e.sortBy && ((e.sortBy = t), m(i));
                            })
                            .on("filter.filebrowser", (t) => {
                                t !== e.filterWord &&
                                    ((e.filterWord = t), m(i));
                            })
                            .on("openFolder.filebrowser", (e) => {
                                let t;
                                (t =
                                    ".." === e.name
                                        ? e.path
                                              .split("/")
                                              .filter((e) => e.length)
                                              .slice(0, -1)
                                              .join("/")
                                        : (0, a.normalizePath)(e.path, e.name)),
                                    (i.state.currentPath = t),
                                    (i.state.currentSource =
                                        "." === e.name ? _.J : e.source);
                            })
                            .on("removeFolder.filebrowser", (e) => {
                                i.confirm("Are you sure?", "Delete", (s) => {
                                    s &&
                                        t
                                            .folderRemove(
                                                e.path,
                                                e.name,
                                                e.source
                                            )
                                            .then(
                                                (e) => (i.status(e, !0), f(i))
                                            )
                                            .catch(i.status);
                                });
                            })
                            .on("renameFolder.filebrowser", (e) => {
                                i.prompt(
                                    "Enter new name",
                                    "Rename",
                                    (s) => {
                                        if (!(0, E.r1)(s))
                                            return (
                                                i.status(
                                                    i.i18n("Enter new name")
                                                ),
                                                !1
                                            );
                                        t.folderRename(
                                            e.path,
                                            e.name,
                                            s,
                                            e.source
                                        )
                                            .then(
                                                (e) => (
                                                    (i.state.activeElements =
                                                        []),
                                                    i.status(e, !0),
                                                    f(i)
                                                )
                                            )
                                            .catch(i.status);
                                    },
                                    "type name",
                                    e.name
                                );
                            })
                            .on("addFolder.filebrowser", (e) => {
                                i.prompt(
                                    "Enter Directory name",
                                    "Create directory",
                                    (s) => {
                                        t.createFolder(s, e.path, e.source)
                                            .then(() => f(i))
                                            .catch(i.status);
                                    },
                                    "type name"
                                );
                            })
                            .on("fileRemove.filebrowser", () => {
                                i.state.activeElements.length &&
                                    i.confirm("Are you sure?", "", (e) => {
                                        if (e) {
                                            const e = [];
                                            i.state.activeElements.forEach(
                                                (t) => {
                                                    e.push(
                                                        b(
                                                            i,
                                                            t.file ||
                                                                t.name ||
                                                                "",
                                                            t.sourceName
                                                        )
                                                    );
                                                }
                                            ),
                                                (i.state.activeElements = []),
                                                Promise.all(e).then(
                                                    () => f(i).catch(i.status),
                                                    i.status
                                                );
                                        }
                                    });
                            })
                            .on("edit.filebrowser", () => {
                                if (1 === i.state.activeElements.length) {
                                    const [e] = this.state.activeElements;
                                    v.r.call(
                                        i,
                                        e.fileURL,
                                        e.file || "",
                                        e.path,
                                        e.sourceName
                                    );
                                }
                            })
                            .on("fileRename.filebrowser", (e, s, o) => {
                                1 === i.state.activeElements.length &&
                                    i.prompt(
                                        "Enter new name",
                                        "Rename",
                                        (r) => {
                                            if (!(0, E.r1)(r))
                                                return (
                                                    i.status(
                                                        i.i18n("Enter new name")
                                                    ),
                                                    !1
                                                );
                                            t.fileRename(s, e, r, o)
                                                .then((e) => {
                                                    (i.state.activeElements =
                                                        []),
                                                        i.status(e, !0),
                                                        m(i);
                                                })
                                                .catch(i.status);
                                        },
                                        "type name",
                                        e
                                    );
                            })
                            .on("update.filebrowser", () => {
                                f(this).then(this.status, this.status);
                            });
                    }
                    var z = i(51663);
                    class T extends h.qe {
                        className() {
                            return "FilebrowserFiles";
                        }
                    }
                    class I extends h.qe {
                        className() {
                            return "FilebrowserTree";
                        }
                    }
                    var L = i(77009),
                        M = i(95950),
                        A = i(78930),
                        D = i(38870),
                        P = i(85637),
                        N = i(83833);
                    (o.D.prototype.filebrowser = {
                        namespace: "",
                        extraButtons: [],
                        filter: (e, t) => (
                            (t = t.toLowerCase()),
                            (0, E.HD)(e)
                                ? -1 !== e.toLowerCase().indexOf(t)
                                : (0, E.HD)(e.name)
                                ? -1 !== e.name.toLowerCase().indexOf(t)
                                : !(0, E.HD)(e.file) ||
                                  -1 !== e.file.toLowerCase().indexOf(t)
                        ),
                        sortBy: "changed-desc",
                        sort(e, t, i) {
                            const [s, o] = i.toLowerCase().split("-"),
                                r = "asc" === o,
                                n = (e, t) =>
                                    t > e
                                        ? r
                                            ? -1
                                            : 1
                                        : e > t
                                        ? r
                                            ? 1
                                            : -1
                                        : 0;
                            if ((0, E.HD)(e))
                                return n(e.toLowerCase(), t.toLowerCase());
                            if (void 0 === e[s] || "name" === s)
                                return (0, E.HD)(e.name)
                                    ? n(
                                          e.name.toLowerCase(),
                                          t.name.toLowerCase()
                                      )
                                    : (0, E.HD)(e.file)
                                    ? n(
                                          e.file.toLowerCase(),
                                          t.file.toLowerCase()
                                      )
                                    : 0;
                            switch (s) {
                                case "changed": {
                                    const i = new Date(e.changed).getTime(),
                                        s = new Date(t.changed).getTime();
                                    return r ? i - s : s - i;
                                }
                                case "size": {
                                    const i = (0, N.w)(e.size),
                                        s = (0, N.w)(t.size);
                                    return r ? i - s : s - i;
                                }
                            }
                            return 0;
                        },
                        editImage: !0,
                        preview: !0,
                        showPreviewNavigation: !0,
                        showSelectButtonInPreview: !0,
                        contextMenu: !0,
                        howLongShowMsg: 3e3,
                        createNewFolder: !0,
                        deleteFolder: !0,
                        renameFolder: !0,
                        moveFolder: !0,
                        moveFile: !0,
                        permissionsPresets: {
                            allowFileDownload: void 0,
                            allowFileMove: void 0,
                            allowFileRemove: void 0,
                            allowFileRename: void 0,
                            allowFileUpload: void 0,
                            allowFileUploadRemote: void 0,
                            allowFiles: void 0,
                            allowFolderCreate: void 0,
                            allowFolderMove: void 0,
                            allowFolderRemove: void 0,
                            allowFolderRename: void 0,
                            allowFolderTree: void 0,
                            allowFolders: void 0,
                            allowGeneratePdf: void 0,
                            allowImageCrop: void 0,
                            allowImageResize: void 0,
                        },
                        showFoldersPanel: !0,
                        storeLastOpenedFolder: !0,
                        width: 859,
                        height: 400,
                        buttons: [
                            "filebrowser.upload",
                            "filebrowser.remove",
                            "filebrowser.update",
                            "filebrowser.select",
                            "filebrowser.edit",
                            "|",
                            "filebrowser.tiles",
                            "filebrowser.list",
                            "|",
                            "filebrowser.filter",
                            "|",
                            "filebrowser.sort",
                        ],
                        removeButtons: [],
                        fullsize: !1,
                        showTooltip: !0,
                        view: null,
                        isSuccess: (e) => e.success,
                        getMessage: (e) =>
                            void 0 !== e.data.messages &&
                            (0, E.kJ)(e.data.messages)
                                ? e.data.messages.join(" ")
                                : "",
                        showFileName: !0,
                        showFileSize: !0,
                        showFileChangeTime: !0,
                        saveStateInStorage: {
                            storeLastOpenedFolder: !0,
                            storeView: !0,
                            storeSortBy: !0,
                        },
                        pixelOffsetLoadNewChunk: 200,
                        getThumbTemplate(e, t, i) {
                            const s = this.options,
                                o = this.files.getFullElName("item"),
                                r = s.showFileName,
                                n = s.showFileSize && e.size,
                                a = s.showFileChangeTime && e.time;
                            let l = "";
                            return (
                                void 0 !== e.file && (l = e.file),
                                `<a\n\t\t\tdata-jodit-filebrowser-item="true"\n\t\t\tdata-is-file="${
                                    e.isImage ? 0 : 1
                                }"\n\t\t\tdraggable="true"\n\t\t\tclass="${o}"\n\t\t\thref="${
                                    e.fileURL
                                }"\n\t\t\tdata-source="${i}"\n\t\t\tdata-path="${
                                    e.path
                                }"\n\t\t\tdata-name="${l}"\n\t\t\ttitle="${l}"\n\t\t\tdata-url="${
                                    e.fileURL
                                }">\n\t\t\t\t<img\n\t\t\t\t\tdata-is-file="${
                                    e.isImage ? 0 : 1
                                }"\n\t\t\t\t\tdata-src="${
                                    e.fileURL
                                }"\n\t\t\t\t\tsrc="${
                                    e.imageURL
                                }"\n\t\t\t\t\talt="${l}"\n\t\t\t\t\tloading="lazy"\n\t\t\t\t/>\n\t\t\t\t${
                                    r || n || a
                                        ? `<div class="${o}-info">${
                                              r
                                                  ? `<span class="${o}-info-filename">${l}</span>`
                                                  : ""
                                          }${
                                              n
                                                  ? `<span class="${o}-info-filesize">${e.size}</span>`
                                                  : ""
                                          }${
                                              a
                                                  ? `<span class="${o}-info-filechanged">${a}</span>`
                                                  : ""
                                          }</div>`
                                        : ""
                                }\n\t\t\t</a>`
                            );
                        },
                        ajax: {
                            ...o.D.prototype.defaultAjaxOptions,
                            url: "",
                            data: {},
                            cache: !0,
                            contentType:
                                "application/x-www-form-urlencoded; charset=UTF-8",
                            method: "POST",
                            processData: !0,
                            headers: {},
                            prepareData: (e) => e,
                            process: (e) => e,
                        },
                        create: { data: { action: "folderCreate" } },
                        getLocalFileByUrl: {
                            data: { action: "getLocalFileByUrl" },
                        },
                        resize: { data: { action: "imageResize" } },
                        crop: { data: { action: "imageCrop" } },
                        fileMove: { data: { action: "fileMove" } },
                        folderMove: { data: { action: "folderMove" } },
                        fileRename: { data: { action: "fileRename" } },
                        folderRename: { data: { action: "folderRename" } },
                        fileRemove: { data: { action: "fileRemove" } },
                        folderRemove: { data: { action: "folderRemove" } },
                        items: { data: { action: "files" } },
                        folder: { data: { action: "folders" } },
                        permissions: { data: { action: "permissions" } },
                    }),
                        (o.D.prototype.controls.filebrowser = {
                            upload: {
                                icon: "plus",
                                isInput: !0,
                                isDisabled(e) {
                                    return !e.dataProvider.canI("FileUpload");
                                },
                                getContent(e) {
                                    const t = new P.Z(e, {
                                        onlyImages: e.state.onlyImages,
                                    });
                                    return (
                                        e.e.fire(
                                            "bindUploader.filebrowser",
                                            t.container
                                        ),
                                        t.container
                                    );
                                },
                            },
                            remove: {
                                icon: "bin",
                                isDisabled(e) {
                                    return (
                                        !e.state.activeElements.length ||
                                        !e.dataProvider.canI("FileRemove")
                                    );
                                },
                                exec(e) {
                                    e.e.fire("fileRemove.filebrowser");
                                },
                            },
                            update: {
                                exec(e) {
                                    e.e.fire("update.filebrowser");
                                },
                            },
                            select: {
                                icon: "check",
                                isDisabled(e) {
                                    return !e.state.activeElements.length;
                                },
                                exec(e) {
                                    e.e.fire("select.filebrowser");
                                },
                            },
                            edit: {
                                icon: "pencil",
                                isDisabled(e) {
                                    const t = e.state.activeElements;
                                    return (
                                        1 !== t.length ||
                                        !t[0].isImage ||
                                        !(
                                            e.dataProvider.canI("ImageCrop") ||
                                            e.dataProvider.canI("ImageResize")
                                        )
                                    );
                                },
                                exec(e) {
                                    e.e.fire("edit.filebrowser");
                                },
                            },
                            tiles: {
                                icon: "th",
                                isActive(e) {
                                    return "tiles" === e.state.view;
                                },
                                exec(e) {
                                    e.e.fire("view.filebrowser", "tiles");
                                },
                            },
                            list: {
                                icon: "th-list",
                                isActive(e) {
                                    return "list" === e.state.view;
                                },
                                exec(e) {
                                    e.e.fire("view.filebrowser", "list");
                                },
                            },
                            filter: {
                                isInput: !0,
                                getContent(e, t, i) {
                                    const s =
                                        i.container.querySelector(
                                            ".jodit-input"
                                        );
                                    if (s) return s;
                                    const o = e.c.element("input", {
                                        class: "jodit-input",
                                        placeholder: e.i18n("Filter"),
                                    });
                                    return (
                                        (o.value = e.state.filterWord),
                                        e.e.on(
                                            o,
                                            "keydown mousedown",
                                            e.async.debounce(() => {
                                                e.e.fire(
                                                    "filter.filebrowser",
                                                    o.value
                                                );
                                            }, e.defaultTimeout)
                                        ),
                                        o
                                    );
                                },
                            },
                            sort: {
                                isInput: !0,
                                getContent(e) {
                                    const t = e.c.fromHTML(
                                        `<select class="jodit-input jodit-select"><option value="changed-asc">${e.i18n(
                                            "Sort by changed"
                                        )} (⬆)</option><option value="changed-desc">${e.i18n(
                                            "Sort by changed"
                                        )} (⬇)</option><option value="name-asc">${e.i18n(
                                            "Sort by name"
                                        )} (⬆)</option><option value="name-desc">${e.i18n(
                                            "Sort by name"
                                        )} (⬇)</option><option value="size-asc">${e.i18n(
                                            "Sort by size"
                                        )} (⬆)</option><option value="size-desc">${e.i18n(
                                            "Sort by size"
                                        )} (⬇)</option></select>`
                                    );
                                    return (
                                        (t.value = e.state.sortBy),
                                        e.e
                                            .on("sort.filebrowser", (e) => {
                                                t.value !== e && (t.value = e);
                                            })
                                            .on(t, "change", () => {
                                                e.e.fire(
                                                    "sort.filebrowser",
                                                    t.value
                                                );
                                            }),
                                        t
                                    );
                                },
                            },
                        });
                    let R = class e extends D.C {
                        className() {
                            return "Filebrowser";
                        }
                        onSelect(e) {
                            return () => {
                                if (this.state.activeElements.length) {
                                    const t = [],
                                        i = [];
                                    this.state.activeElements.forEach((e) => {
                                        const s = e.fileURL;
                                        s &&
                                            (t.push(s),
                                            i.push(e.isImage || !1));
                                    }),
                                        this.close();
                                    const s = {
                                        baseurl: "",
                                        files: t,
                                        isImages: i,
                                    };
                                    (0, a.isFunction)(e) && e(s), this.close();
                                }
                                return !1;
                            };
                        }
                        get isOpened() {
                            return (
                                this._dialog.isOpened &&
                                "none" !== this.browser.style.display
                            );
                        }
                        status(e, t) {
                            e &&
                                !(0, a.isAbort)(e) &&
                                ((0, a.isString)(e) || (e = e.message),
                                (0, a.isString)(e) &&
                                    (0, a.trim)(e).length &&
                                    this.message.message(
                                        e,
                                        t ? "success" : "error",
                                        this.o.howLongShowMsg
                                    ));
                        }
                        open(e = this.o.defaultCallback, t = !1) {
                            return (
                                (this.state.onlyImages = t),
                                this.async.promise((t, i) => {
                                    if (!this.o.items || !this.o.items.url)
                                        throw (0, a.error)(
                                            "Need set options.filebrowser.ajax.url"
                                        );
                                    let s = 0;
                                    this.e
                                        .off(this.files.container, "dblclick")
                                        .on(
                                            this.files.container,
                                            "dblclick",
                                            this.onSelect(e)
                                        )
                                        .on(
                                            this.files.container,
                                            "touchstart",
                                            () => {
                                                const t = new Date().getTime();
                                                r.EMULATE_DBLCLICK_TIMEOUT >
                                                    t - s && this.onSelect(e)(),
                                                    (s = t);
                                            }
                                        )
                                        .off("select.filebrowser")
                                        .on(
                                            "select.filebrowser",
                                            this.onSelect(e)
                                        );
                                    const o = this.c.div();
                                    this.toolbar
                                        .build(this.__getButtons())
                                        .appendTo(o),
                                        this._dialog.open(this.browser, o),
                                        this.e.fire(
                                            "sort.filebrowser",
                                            this.state.sortBy
                                        ),
                                        f(this).then(t, i);
                                })
                            );
                        }
                        __getButtons() {
                            var e;
                            return (
                                null !== (e = this.o.buttons) && void 0 !== e
                                    ? e
                                    : []
                            ).filter((e) => {
                                if (!(0, a.isString)(e)) return !0;
                                switch (e) {
                                    case "filebrowser.upload":
                                        return this.dataProvider.canI(
                                            "FileUpload"
                                        );
                                    case "filebrowser.edit":
                                        return (
                                            this.dataProvider.canI(
                                                "ImageResize"
                                            ) ||
                                            this.dataProvider.canI("ImageCrop")
                                        );
                                    case "filebrowser.remove":
                                        return this.dataProvider.canI(
                                            "FileRemove"
                                        );
                                }
                                return !0;
                            });
                        }
                        initUploader(e) {
                            var t;
                            const i = this,
                                s =
                                    null ===
                                        (t = null == e ? void 0 : e.options) ||
                                    void 0 === t
                                        ? void 0
                                        : t.uploader,
                                r = (0, a.ConfigProto)(
                                    s || {},
                                    o.D.defaultOptions.uploader
                                ),
                                n = () => m(this);
                            (i.uploader = i.getInstance("Uploader", r)),
                                i.uploader
                                    .setPath(i.state.currentPath)
                                    .setSource(i.state.currentSource)
                                    .bind(i.browser, n, i.errorHandler),
                                this.state.on(
                                    [
                                        "change.currentPath",
                                        "change.currentSource",
                                    ],
                                    () => {
                                        this.uploader
                                            .setPath(this.state.currentPath)
                                            .setSource(
                                                this.state.currentSource
                                            );
                                    }
                                ),
                                i.e.on("bindUploader.filebrowser", (e) => {
                                    i.uploader.bind(e, n, i.errorHandler);
                                });
                        }
                        constructor(e) {
                            var t;
                            super(e),
                                (this.browser = this.c.div(this.componentName)),
                                (this.status_line = this.c.div(
                                    this.getFullElName("status")
                                )),
                                (this.tree = new I(this)),
                                (this.files = new T(this)),
                                (this.state = (0, L.LO)({
                                    currentPath: "",
                                    currentSource: _.J,
                                    currentBaseUrl: "",
                                    activeElements: [],
                                    elements: [],
                                    sources: [],
                                    view: "tiles",
                                    sortBy: "changed-desc",
                                    filterWord: "",
                                    onlyImages: !1,
                                })),
                                (this.errorHandler = (e) => {
                                    (0, a.isAbort)(e) ||
                                        this.status(
                                            e instanceof Error
                                                ? this.i18n(e.message)
                                                : this.dataProvider.getMessage(
                                                      e
                                                  )
                                        );
                                }),
                                (this.close = () => {
                                    this._dialog.close();
                                }),
                                this.attachEvents(e);
                            const i = this;
                            (i.options = (0, a.ConfigProto)(
                                e || {},
                                o.D.defaultOptions.filebrowser
                            )),
                                (i.storage = n.Ke.makeStorage(
                                    !!this.o.saveStateInStorage,
                                    this.componentName
                                )),
                                (i.dataProvider = (0, c.S)(i, i.options)),
                                (i._dialog = this.dlg({
                                    minWidth: Math.min(700, screen.width),
                                    minHeight: 300,
                                    buttons:
                                        null !== (t = this.o.headerButtons) &&
                                        void 0 !== t
                                            ? t
                                            : ["fullsize", "dialog.close"],
                                })),
                                this.proxyDialogEvents(i),
                                (i.browser.component = this),
                                (i.container = i.browser),
                                i.o.showFoldersPanel &&
                                    i.browser.appendChild(i.tree.container),
                                i.browser.appendChild(i.files.container),
                                i.browser.appendChild(i.status_line),
                                j.call(i),
                                x.call(i),
                                g.call(i),
                                i._dialog.setSize(i.o.width, i.o.height),
                                [
                                    "getLocalFileByUrl",
                                    "crop",
                                    "resize",
                                    "create",
                                    "fileMove",
                                    "folderMove",
                                    "fileRename",
                                    "folderRename",
                                    "fileRemove",
                                    "folderRemove",
                                    "folder",
                                    "items",
                                    "permissions",
                                ].forEach((e) => {
                                    null != this.options[e] &&
                                        (this.options[e] = (0, a.ConfigProto)(
                                            this.options[e],
                                            this.o.ajax
                                        ));
                                });
                            const {
                                    storeView: s,
                                    storeSortBy: r,
                                    storeLastOpenedFolder: l,
                                } = this.o.saveStateInStorage || {
                                    storeLastOpenedFolder: !1,
                                    storeView: !1,
                                    storeSortBy: !1,
                                },
                                d = s && this.storage.get("view");
                            (i.state.view =
                                d && null == this.o.view
                                    ? "list" === d
                                        ? "list"
                                        : "tiles"
                                    : "list" === i.o.view
                                    ? "list"
                                    : "tiles"),
                                i.files.setMod("view", i.state.view);
                            const h = r && i.storage.get("sortBy");
                            if (h) {
                                const e = h.split("-");
                                i.state.sortBy = [
                                    "changed",
                                    "name",
                                    "size",
                                ].includes(e[0])
                                    ? h
                                    : "changed-desc";
                            } else
                                i.state.sortBy = i.o.sortBy || "changed-desc";
                            if (l) {
                                const e = i.storage.get("currentPath"),
                                    t = i.storage.get("currentSource");
                                (i.state.currentPath = null != e ? e : ""),
                                    (i.state.currentSource =
                                        null != t ? t : "");
                            }
                            i.initUploader(i), i.setStatus(M.n$.ready);
                        }
                        proxyDialogEvents(e) {
                            ["afterClose", "beforeOpen"].forEach((t) => {
                                e._dialog.events.on(e.dlg, t, () => {
                                    this.e.fire(t);
                                });
                            });
                        }
                        destruct() {
                            this.isInDestruct ||
                                (super.destruct(),
                                this._dialog.destruct(),
                                this.events && this.e.off(".filebrowser"),
                                this.uploader && this.uploader.destruct());
                        }
                    };
                    function q(e) {
                        return (
                            l.i.isElement(e) &&
                            e.classList.contains(
                                T.prototype.getFullElName("item")
                            )
                        );
                    }
                    (0, s.gn)([z.autobind], R.prototype, "status", null),
                        (0, s.gn)([z.autobind], R.prototype, "open", null),
                        (R = (0, s.gn)([(0, z.derive)(A.lf)], R));
                },
                80266(e, t, i) {
                    "use strict";
                    i.d(t, {
                        v() {
                            return b;
                        },
                        r() {
                            return y;
                        },
                    });
                    var s = i(52784),
                        o = i(43854),
                        r = i(95950),
                        n = i(47643),
                        a = i(97039),
                        l = i(18095),
                        c = i(86673);
                    const d = "jodit-image-editor",
                        h = c.JO.get.bind(c.JO),
                        u = (e, t = "jodti-image-editor_active") =>
                            e ? t : "";
                    var p,
                        m = i(51663),
                        f = i(34759);
                    (o.D.prototype.imageeditor = {
                        min_width: 20,
                        min_height: 20,
                        closeAfterSave: !1,
                        width: "85%",
                        height: "85%",
                        crop: !0,
                        resize: !0,
                        resizeUseRatio: !0,
                        resizeMinWidth: 20,
                        resizeMinHeight: 20,
                        cropUseRatio: !0,
                        cropDefaultWidth: "70%",
                        cropDefaultHeight: "70%",
                    }),
                        f.J.set("crop", i(41563)).set("resize", i(88391));
                    const g = "resize",
                        v = "crop";
                    let b = (p = class e extends r.Hr {
                        className() {
                            return "ImageEditor";
                        }
                        onTitleModeClick(e) {
                            const t = this,
                                i = e.target,
                                s = null == i ? void 0 : i.parentElement;
                            if (!s) return;
                            (0, n.$$)(
                                ".jodit-image-editor__slider,.jodit-image-editor__area",
                                t.editor
                            ).forEach((e) =>
                                e.classList.remove("jodit-image-editor_active")
                            ),
                                s.classList.add("jodit-image-editor_active"),
                                (this.activeTab = (0, n.attr)(s, "-area") || g);
                            const o = t.editor.querySelector(
                                ".jodit-image-editor__area.jodit-image-editor__area_" +
                                    t.activeTab
                            );
                            o && o.classList.add("jodit-image-editor_active"),
                                t.activeTab === v && t.showCrop();
                        }
                        onChangeSizeInput(e) {
                            const t = this,
                                i = e.target,
                                { widthInput: s, heightInput: o } = (0, n.refs)(
                                    this.editor
                                ),
                                r = "widthInput" === (0, n.attr)(i, "data-ref"),
                                a = parseInt(i.value, 10),
                                l = r ? t.o.min_height : t.o.min_width;
                            let c;
                            a > (r ? t.o.min_width : t.o.min_height) &&
                                ((0, n.css)(t.image, r ? "width" : "height", a),
                                t.resizeUseRatio &&
                                    ((c = Math.round(
                                        r ? a / t.ratio : a * t.ratio
                                    )),
                                    c > l &&
                                        ((0, n.css)(
                                            t.image,
                                            r ? "height" : "width",
                                            c
                                        ),
                                        r
                                            ? (o.value = "" + c)
                                            : (s.value = "" + c)))),
                                this.j.e.fire(t.resizeHandler, "updatesize");
                        }
                        onResizeHandleMouseDown(e) {
                            const t = this;
                            (t.target = e.target),
                                e.preventDefault(),
                                e.stopImmediatePropagation(),
                                (t.clicked = !0),
                                (t.start_x = e.clientX),
                                (t.start_y = e.clientY),
                                t.activeTab === v
                                    ? ((t.top_x = (0, n.css)(
                                          t.cropHandler,
                                          "left"
                                      )),
                                      (t.top_y = (0, n.css)(
                                          t.cropHandler,
                                          "top"
                                      )),
                                      (t.width = t.cropHandler.offsetWidth),
                                      (t.height = t.cropHandler.offsetHeight))
                                    : ((t.width = t.image.offsetWidth),
                                      (t.height = t.image.offsetHeight)),
                                t.j.e
                                    .on(
                                        this.j.ow,
                                        "mousemove",
                                        this.onGlobalMouseMove
                                    )
                                    .one(
                                        this.j.ow,
                                        "mouseup",
                                        this.onGlobalMouseUp
                                    );
                        }
                        onGlobalMouseUp(e) {
                            this.clicked &&
                                ((this.clicked = !1),
                                e.stopImmediatePropagation(),
                                this.j.e.off(
                                    this.j.ow,
                                    "mousemove",
                                    this.onGlobalMouseMove
                                ));
                        }
                        onGlobalMouseMove(e) {
                            const t = this;
                            if (!t.clicked) return;
                            const { widthInput: i, heightInput: s } = (0,
                            n.refs)(this.editor);
                            (t.diff_x = e.clientX - t.start_x),
                                (t.diff_y = e.clientY - t.start_y),
                                (t.activeTab === g && t.resizeUseRatio) ||
                                (t.activeTab === v && t.cropUseRatio)
                                    ? t.diff_x
                                        ? ((t.new_w = t.width + t.diff_x),
                                          (t.new_h = Math.round(
                                              t.new_w / t.ratio
                                          )))
                                        : ((t.new_h = t.height + t.diff_y),
                                          (t.new_w = Math.round(
                                              t.new_h * t.ratio
                                          )))
                                    : ((t.new_w = t.width + t.diff_x),
                                      (t.new_h = t.height + t.diff_y)),
                                t.activeTab === g
                                    ? (t.new_w > t.o.resizeMinWidth &&
                                          ((0, n.css)(
                                              t.image,
                                              "width",
                                              t.new_w + "px"
                                          ),
                                          (i.value = "" + t.new_w)),
                                      t.new_h > t.o.resizeMinHeight &&
                                          ((0, n.css)(
                                              t.image,
                                              "height",
                                              t.new_h + "px"
                                          ),
                                          (s.value = "" + t.new_h)),
                                      this.j.e.fire(
                                          t.resizeHandler,
                                          "updatesize"
                                      ))
                                    : (t.target !== t.cropHandler
                                          ? (t.top_x + t.new_w >
                                                t.cropImage.offsetWidth &&
                                                (t.new_w =
                                                    t.cropImage.offsetWidth -
                                                    t.top_x),
                                            t.top_y + t.new_h >
                                                t.cropImage.offsetHeight &&
                                                (t.new_h =
                                                    t.cropImage.offsetHeight -
                                                    t.top_y),
                                            (0, n.css)(t.cropHandler, {
                                                width: t.new_w,
                                                height: t.new_h,
                                            }))
                                          : (t.top_x +
                                                t.diff_x +
                                                t.cropHandler.offsetWidth >
                                                t.cropImage.offsetWidth &&
                                                (t.diff_x =
                                                    t.cropImage.offsetWidth -
                                                    t.top_x -
                                                    t.cropHandler.offsetWidth),
                                            (0, n.css)(
                                                t.cropHandler,
                                                "left",
                                                t.top_x + t.diff_x
                                            ),
                                            t.top_y +
                                                t.diff_y +
                                                t.cropHandler.offsetHeight >
                                                t.cropImage.offsetHeight &&
                                                (t.diff_y =
                                                    t.cropImage.offsetHeight -
                                                    t.top_y -
                                                    t.cropHandler.offsetHeight),
                                            (0, n.css)(
                                                t.cropHandler,
                                                "top",
                                                t.top_y + t.diff_y
                                            )),
                                      this.j.e.fire(
                                          t.cropHandler,
                                          "updatesize"
                                      ));
                        }
                        get o() {
                            return this.options;
                        }
                        hide() {
                            this._dialog.close();
                        }
                        open(e, t) {
                            return this.j.async.promise((i) => {
                                const s = new Date().getTime();
                                (this.image = this.j.c.element("img")),
                                    (0, n.$$)(
                                        "img,.jodit-icon_loader",
                                        this.resize_box
                                    ).forEach(a.i.safeRemove),
                                    (0, n.$$)(
                                        "img,.jodit-icon_loader",
                                        this.crop_box
                                    ).forEach(a.i.safeRemove),
                                    (0, n.css)(
                                        this.cropHandler,
                                        "background",
                                        "transparent"
                                    ),
                                    (this.onSave = t),
                                    this.resize_box.appendChild(
                                        this.j.c.element("i", {
                                            class: "jodit-icon_loader",
                                        })
                                    ),
                                    this.crop_box.appendChild(
                                        this.j.c.element("i", {
                                            class: "jodit-icon_loader",
                                        })
                                    ),
                                    this.image.setAttribute(
                                        "src",
                                        (e += /\?/.test(e)
                                            ? "&_tst=" + s
                                            : "?_tst=" + s)
                                    ),
                                    this._dialog.open();
                                const { widthInput: o, heightInput: r } = (0,
                                    n.refs)(this.editor),
                                    l = () => {
                                        this.isDestructed ||
                                            (this.image.removeEventListener(
                                                "load",
                                                l
                                            ),
                                            (this.naturalWidth =
                                                this.image.naturalWidth),
                                            (this.naturalHeight =
                                                this.image.naturalHeight),
                                            (o.value = "" + this.naturalWidth),
                                            (r.value = "" + this.naturalHeight),
                                            (this.ratio =
                                                this.naturalWidth /
                                                this.naturalHeight),
                                            this.resize_box.appendChild(
                                                this.image
                                            ),
                                            (this.cropImage =
                                                this.image.cloneNode(!0)),
                                            this.crop_box.appendChild(
                                                this.cropImage
                                            ),
                                            a.i.safeRemove.apply(
                                                null,
                                                (0, n.$$)(
                                                    ".jodit-icon_loader",
                                                    this.editor
                                                )
                                            ),
                                            this.activeTab === v &&
                                                this.showCrop(),
                                            this.j.e.fire(
                                                this.resizeHandler,
                                                "updatesize"
                                            ),
                                            this.j.e.fire(
                                                this.cropHandler,
                                                "updatesize"
                                            ),
                                            this._dialog.setPosition(),
                                            this.j.e.fire("afterImageEditor"),
                                            i(this._dialog));
                                    };
                                this.image.addEventListener("load", l),
                                    this.image.complete && l();
                            });
                        }
                        constructor(e) {
                            super(e),
                                (this.resizeUseRatio = !0),
                                (this.cropUseRatio = !0),
                                (this.clicked = !1),
                                (this.start_x = 0),
                                (this.start_y = 0),
                                (this.top_x = 0),
                                (this.top_y = 0),
                                (this.width = 0),
                                (this.height = 0),
                                (this.activeTab = g),
                                (this.naturalWidth = 0),
                                (this.naturalHeight = 0),
                                (this.ratio = 0),
                                (this.new_h = 0),
                                (this.new_w = 0),
                                (this.diff_x = 0),
                                (this.diff_y = 0),
                                (this.cropBox = { x: 0, y: 0, w: 0, h: 0 }),
                                (this.resizeBox = { w: 0, h: 0 }),
                                (this.calcCropBox = () => {
                                    const e = this.crop_box.parentNode,
                                        t = 0.8 * e.offsetWidth,
                                        i = 0.8 * e.offsetHeight;
                                    let s = t,
                                        o = i;
                                    const {
                                        naturalWidth: r,
                                        naturalHeight: a,
                                    } = this;
                                    t > r && i > a
                                        ? ((s = r), (o = a))
                                        : this.ratio > t / i
                                        ? ((s = t), (o = a * (t / r)))
                                        : ((s = r * (i / a)), (o = i)),
                                        (0, n.css)(this.crop_box, {
                                            width: s,
                                            height: o,
                                        });
                                }),
                                (this.showCrop = () => {
                                    if (!this.cropImage) return;
                                    this.calcCropBox();
                                    const e =
                                        this.cropImage.offsetWidth ||
                                        this.image.offsetWidth ||
                                        this.image.naturalWidth;
                                    this.new_w = p.calcValueByPercent(
                                        e,
                                        this.o.cropDefaultWidth
                                    );
                                    const t =
                                        this.cropImage.offsetHeight ||
                                        this.image.offsetHeight ||
                                        this.image.naturalHeight;
                                    (this.new_h = this.cropUseRatio
                                        ? this.new_w / this.ratio
                                        : p.calcValueByPercent(
                                              t,
                                              this.o.cropDefaultHeight
                                          )),
                                        (0, n.css)(this.cropHandler, {
                                            backgroundImage:
                                                "url(" +
                                                (0, n.attr)(
                                                    this.cropImage,
                                                    "src"
                                                ) +
                                                ")",
                                            width: this.new_w,
                                            height: this.new_h,
                                            left: e / 2 - this.new_w / 2,
                                            top: t / 2 - this.new_h / 2,
                                        }),
                                        this.j.e.fire(
                                            this.cropHandler,
                                            "updatesize"
                                        );
                                }),
                                (this.updateCropBox = () => {
                                    if (!this.cropImage) return;
                                    const e =
                                            this.cropImage.offsetWidth /
                                            this.naturalWidth,
                                        t =
                                            this.cropImage.offsetHeight /
                                            this.naturalHeight;
                                    (this.cropBox.x =
                                        (0, n.css)(this.cropHandler, "left") /
                                        e),
                                        (this.cropBox.y =
                                            (0, n.css)(
                                                this.cropHandler,
                                                "top"
                                            ) / t),
                                        (this.cropBox.w =
                                            this.cropHandler.offsetWidth / e),
                                        (this.cropBox.h =
                                            this.cropHandler.offsetHeight / t),
                                        (this.sizes.textContent =
                                            this.cropBox.w.toFixed(0) +
                                            "x" +
                                            this.cropBox.h.toFixed(0));
                                }),
                                (this.updateResizeBox = () => {
                                    (this.resizeBox.w =
                                        this.image.offsetWidth ||
                                        this.naturalWidth),
                                        (this.resizeBox.h =
                                            this.image.offsetHeight ||
                                            this.naturalHeight);
                                }),
                                (this.setHandlers = () => {
                                    const e = this,
                                        { widthInput: t, heightInput: i } = (0,
                                        n.refs)(this.editor);
                                    e.j.e
                                        .on(
                                            [
                                                e.editor.querySelector(
                                                    ".jodit_bottomright"
                                                ),
                                                e.cropHandler,
                                            ],
                                            "mousedown.jodit-image-editor",
                                            this.onResizeHandleMouseDown
                                        )
                                        .on(
                                            this.j.ow,
                                            "resize.jodit-image-editor",
                                            () => {
                                                this.j.e.fire(
                                                    e.resizeHandler,
                                                    "updatesize"
                                                ),
                                                    e.showCrop(),
                                                    this.j.e.fire(
                                                        e.cropHandler,
                                                        "updatesize"
                                                    );
                                            }
                                        ),
                                        e.j.e
                                            .on(
                                                (0, n.toArray)(
                                                    this.editor.querySelectorAll(
                                                        ".jodit-image-editor__slider-title"
                                                    )
                                                ),
                                                "click",
                                                this.onTitleModeClick
                                            )
                                            .on(
                                                [t, i],
                                                "input",
                                                this.onChangeSizeInput
                                            );
                                    const {
                                        keepAspectRatioResize: s,
                                        keepAspectRatioCrop: o,
                                    } = (0, n.refs)(this.editor);
                                    s &&
                                        s.addEventListener("change", () => {
                                            this.resizeUseRatio = s.checked;
                                        }),
                                        o &&
                                            o.addEventListener("change", () => {
                                                this.cropUseRatio = o.checked;
                                            }),
                                        e.j.e
                                            .on(
                                                e.resizeHandler,
                                                "updatesize",
                                                () => {
                                                    (0, n.css)(
                                                        e.resizeHandler,
                                                        {
                                                            top: 0,
                                                            left: 0,
                                                            width:
                                                                e.image
                                                                    .offsetWidth ||
                                                                e.naturalWidth,
                                                            height:
                                                                e.image
                                                                    .offsetHeight ||
                                                                e.naturalHeight,
                                                        }
                                                    ),
                                                        this.updateResizeBox();
                                                }
                                            )
                                            .on(
                                                e.cropHandler,
                                                "updatesize",
                                                () => {
                                                    if (!e.cropImage) return;
                                                    let t = (0, n.css)(
                                                            e.cropHandler,
                                                            "left"
                                                        ),
                                                        i = (0, n.css)(
                                                            e.cropHandler,
                                                            "top"
                                                        ),
                                                        s =
                                                            e.cropHandler
                                                                .offsetWidth,
                                                        o =
                                                            e.cropHandler
                                                                .offsetHeight;
                                                    0 > t && (t = 0),
                                                        0 > i && (i = 0),
                                                        t + s >
                                                            e.cropImage
                                                                .offsetWidth &&
                                                            ((s =
                                                                e.cropImage
                                                                    .offsetWidth -
                                                                t),
                                                            e.cropUseRatio &&
                                                                (o =
                                                                    s /
                                                                    e.ratio)),
                                                        i + o >
                                                            e.cropImage
                                                                .offsetHeight &&
                                                            ((o =
                                                                e.cropImage
                                                                    .offsetHeight -
                                                                i),
                                                            e.cropUseRatio &&
                                                                (s =
                                                                    o *
                                                                    e.ratio)),
                                                        (0, n.css)(
                                                            e.cropHandler,
                                                            {
                                                                width: s,
                                                                height: o,
                                                                left: t,
                                                                top: i,
                                                                backgroundPosition:
                                                                    -t -
                                                                    1 +
                                                                    "px " +
                                                                    (-i - 1) +
                                                                    "px",
                                                                backgroundSize:
                                                                    e.cropImage
                                                                        .offsetWidth +
                                                                    "px " +
                                                                    e.cropImage
                                                                        .offsetHeight +
                                                                    "px",
                                                            }
                                                        ),
                                                        e.updateCropBox();
                                                }
                                            ),
                                        Object.values(e.buttons).forEach(
                                            (s) => {
                                                s.onAction(() => {
                                                    const o = {
                                                        action: e.activeTab,
                                                        box:
                                                            e.activeTab === g
                                                                ? e.resizeBox
                                                                : e.cropBox,
                                                    };
                                                    switch (s) {
                                                        case e.buttons.saveas:
                                                            e.j.prompt(
                                                                "Enter new name",
                                                                "Save in new file",
                                                                (t) => {
                                                                    if (
                                                                        !(0,
                                                                        n.trim)(
                                                                            t
                                                                        )
                                                                    )
                                                                        return (
                                                                            e.j.alert(
                                                                                "The name should not be empty"
                                                                            ),
                                                                            !1
                                                                        );
                                                                    e.onSave(
                                                                        t,
                                                                        o,
                                                                        e.hide,
                                                                        (t) => {
                                                                            e.j.alert(
                                                                                t.message
                                                                            );
                                                                        }
                                                                    );
                                                                }
                                                            );
                                                            break;
                                                        case e.buttons.save:
                                                            e.onSave(
                                                                void 0,
                                                                o,
                                                                e.hide,
                                                                (t) => {
                                                                    e.j.alert(
                                                                        t.message
                                                                    );
                                                                }
                                                            );
                                                            break;
                                                        case e.buttons.reset:
                                                            e.activeTab === g
                                                                ? ((0, n.css)(
                                                                      e.image,
                                                                      {
                                                                          width: null,
                                                                          height: null,
                                                                      }
                                                                  ),
                                                                  (t.value =
                                                                      "" +
                                                                      e.naturalWidth),
                                                                  (i.value =
                                                                      "" +
                                                                      e.naturalHeight),
                                                                  e.j.e.fire(
                                                                      e.resizeHandler,
                                                                      "updatesize"
                                                                  ))
                                                                : e.showCrop();
                                                    }
                                                });
                                            }
                                        );
                                }),
                                (this.options =
                                    e && e.o && e.o.imageeditor
                                        ? e.o.imageeditor
                                        : o.D.defaultOptions.imageeditor);
                            const t = this.options;
                            (this.resizeUseRatio = t.resizeUseRatio),
                                (this.cropUseRatio = t.cropUseRatio),
                                (this.buttons = {
                                    reset: (0, l.zx)(this.j, "update", "Reset"),
                                    save: (0, l.zx)(this.j, "save", "Save"),
                                    saveas: (0, l.zx)(
                                        this.j,
                                        "save",
                                        "Save as ..."
                                    ),
                                }),
                                (this.activeTab = t.resize ? g : v),
                                (this.editor = ((e, t) => {
                                    const i = e.i18n.bind(e),
                                        s = (e, t, s = !0) =>
                                            `<div class="jodit-form__group">\n\t\t\t<label>${i(
                                                e
                                            )}</label>\n\n\t\t\t<label class='jodit-switcher'>\n\t\t\t\t<input ${u(
                                                s,
                                                "checked"
                                            )} data-ref="${t}" type="checkbox"/>\n\t\t\t\t<span class="jodit-switcher__slider"></span>\n\t\t\t</label>\n\t</div>`;
                                    return e.create.fromHTML(
                                        `<form class="${d} jodit-properties">\n\t\t<div class="jodit-grid jodit-grid_xs-column">\n\t\t\t<div class="jodit_col-lg-3-4 jodit_col-sm-5-5">\n\t\t\t${
                                            t.resize
                                                ? `<div class="${d}__area ${d}__area_resize ${d}_active">\n\t\t\t\t\t\t\t<div data-ref="resizeBox" class="${d}__box"></div>\n\t\t\t\t\t\t\t<div class="${d}__resizer">\n\t\t\t\t\t\t\t\t<i class="jodit_bottomright"></i>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>`
                                                : ""
                                        }\n\t\t\t${
                                            t.crop
                                                ? `<div class="${d}__area ${d}__area_crop ${u(
                                                      !t.resize
                                                  )}">\n\t\t\t\t\t\t\t<div data-ref="cropBox" class="${d}__box">\n\t\t\t\t\t\t\t\t<div class="${d}__croper">\n\t\t\t\t\t\t\t\t\t<i class="jodit_bottomright"></i>\n\t\t\t\t\t\t\t\t\t<i class="${d}__sizes"></i>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>`
                                                : ""
                                        }\n\t\t\t</div>\n\t\t\t<div class="jodit_col-lg-1-4 jodit_col-sm-5-5">\n\t\t\t${
                                            t.resize
                                                ? `<div data-area="resize" class="${d}__slider ${d}_active">\n\t\t\t\t\t\t\t<div class="${d}__slider-title">\n\t\t\t\t\t\t\t\t${h(
                                                      "resize"
                                                  )}\n\t\t\t\t\t\t\t\t${i(
                                                      "Resize"
                                                  )}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="${d}__slider-content">\n\t\t\t\t\t\t\t\t<div class="jodit-form__group">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t${i(
                                                      "Width"
                                                  )}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type="number" data-ref="widthInput" class="jodit-input"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div class="jodit-form__group">\n\t\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\t\t${i(
                                                      "Height"
                                                  )}\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t\t<input type="number" data-ref="heightInput" class="jodit-input"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t${s(
                                                      "Keep Aspect Ratio",
                                                      "keepAspectRatioResize"
                                                  )}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>`
                                                : ""
                                        }\n\t\t\t${
                                            t.crop
                                                ? `<div data-area="crop" class="${d}__slider ${u(
                                                      !t.resize
                                                  )}'">\n\t\t\t\t\t\t\t<div class="${d}__slider-title">\n\t\t\t\t\t\t\t\t${h(
                                                      "crop"
                                                  )}\n\t\t\t\t\t\t\t\t${i(
                                                      "Crop"
                                                  )}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div class="${d}__slider-content">\n\t\t\t\t\t\t\t\t${s(
                                                      "Keep Aspect Ratio",
                                                      "keepAspectRatioCrop"
                                                  )}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>`
                                                : ""
                                        }\n\t\t\t</div>\n\t\t</div>\n\t</form>`
                                    );
                                })(this.j, this.options));
                            const { resizeBox: i, cropBox: s } = (0, n.refs)(
                                this.editor
                            );
                            (this.resize_box = i),
                                (this.crop_box = s),
                                (this.sizes = this.editor.querySelector(
                                    ".jodit-image-editor__area.jodit-image-editor__area_crop .jodit-image-editor__sizes"
                                )),
                                (this.resizeHandler = this.editor.querySelector(
                                    ".jodit-image-editor__resizer"
                                )),
                                (this.cropHandler = this.editor.querySelector(
                                    ".jodit-image-editor__croper"
                                )),
                                (this._dialog = this.j.dlg({
                                    buttons: ["fullsize", "dialog.close"],
                                })),
                                this._dialog.setContent(this.editor),
                                this._dialog.setSize(
                                    this.o.width,
                                    this.o.height
                                ),
                                this._dialog.setHeader([
                                    this.buttons.reset,
                                    this.buttons.save,
                                    this.buttons.saveas,
                                ]),
                                this.setHandlers();
                        }
                        destruct() {
                            this.isDestructed ||
                                (this._dialog &&
                                    !this._dialog.isInDestruct &&
                                    this._dialog.destruct(),
                                a.i.safeRemove(this.editor),
                                this.j.e &&
                                    this.j.e
                                        .off(
                                            this.j.ow,
                                            "mousemove",
                                            this.onGlobalMouseMove
                                        )
                                        .off(
                                            this.j.ow,
                                            "mouseup",
                                            this.onGlobalMouseUp
                                        )
                                        .off(this.ow, ".jodit-image-editor")
                                        .off(".jodit-image-editor"),
                                super.destruct());
                        }
                    });
                    function y(e, t, i, s, o, r) {
                        return this.getInstance("ImageEditor", this.o).open(
                            e,
                            (e, a, l, c) =>
                                (0, n.call)(
                                    "resize" === a.action
                                        ? this.dataProvider.resize
                                        : this.dataProvider.crop,
                                    i,
                                    s,
                                    t,
                                    e,
                                    a.box
                                )
                                    .then((e) => {
                                        e && (l(), o && o());
                                    })
                                    .catch((e) => {
                                        c(e), r && r(e);
                                    })
                        );
                    }
                    (b.calcValueByPercent = (e, t) => {
                        const i = "" + t,
                            s = parseFloat("" + e);
                        let o;
                        return (
                            (o = /^[-+]?[0-9]+(px)?$/.exec(i)),
                            o
                                ? parseInt(i, 10)
                                : ((o = /^([-+]?[0-9.]+)%$/.exec(i)),
                                  o
                                      ? Math.round(s * (parseFloat(o[1]) / 100))
                                      : s || 0)
                        );
                    }),
                        (0, s.gn)(
                            [m.autobind],
                            b.prototype,
                            "onTitleModeClick",
                            null
                        ),
                        (0, s.gn)(
                            [(0, m.debounce)(), m.autobind],
                            b.prototype,
                            "onChangeSizeInput",
                            null
                        ),
                        (0, s.gn)(
                            [m.autobind],
                            b.prototype,
                            "onResizeHandleMouseDown",
                            null
                        ),
                        (0, s.gn)(
                            [m.autobind],
                            b.prototype,
                            "onGlobalMouseUp",
                            null
                        ),
                        (0, s.gn)(
                            [(0, m.throttle)(10)],
                            b.prototype,
                            "onGlobalMouseMove",
                            null
                        ),
                        (0, s.gn)([m.autobind], b.prototype, "hide", null),
                        (0, s.gn)([m.autobind], b.prototype, "open", null),
                        (b = p = (0, s.gn)([m.component], b));
                },
                6293(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            Ajax() {
                                return r.t;
                            },
                            Alert() {
                                return l.bZ;
                            },
                            Async() {
                                return o.e;
                            },
                            CommitStyle() {
                                return _.RP;
                            },
                            Component() {
                                return n.wA;
                            },
                            Confirm() {
                                return l.I4;
                            },
                            ContextMenu() {
                                return a.x;
                            },
                            Create() {
                                return p;
                            },
                            Dialog() {
                                return l.Vq;
                            },
                            Dom() {
                                return c.i;
                            },
                            EventEmitter() {
                                return s.vp;
                            },
                            EventHandlersStore() {
                                return s.DG;
                            },
                            Eventify() {
                                return s.aN;
                            },
                            FileBrowser() {
                                return v.f;
                            },
                            Helpers() {
                                return h;
                            },
                            History() {
                                return E;
                            },
                            Icon() {
                                return m.JO;
                            },
                            ImageEditor() {
                                return b.v;
                            },
                            LazyWalker() {
                                return c.b;
                            },
                            Plugin() {
                                return d.S;
                            },
                            PluginSystem() {
                                return V.h;
                            },
                            Popup() {
                                return m.GI;
                            },
                            ProgressBar() {
                                return m.ko;
                            },
                            Prompt() {
                                return l.NL;
                            },
                            Response() {
                                return r.H;
                            },
                            STATUSES() {
                                return n.n$;
                            },
                            Select() {
                                return _.Ph;
                            },
                            Snapshot() {
                                return k;
                            },
                            StatusBar() {
                                return z;
                            },
                            Table() {
                                return T.i;
                            },
                            ToolbarButton() {
                                return M.h;
                            },
                            ToolbarCollection() {
                                return L.n;
                            },
                            ToolbarContent() {
                                return A.c;
                            },
                            ToolbarEditorCollection() {
                                return I.N;
                            },
                            UIBlock() {
                                return m.eC;
                            },
                            UIButton() {
                                return m.y3;
                            },
                            UICheckbox() {
                                return m.mA;
                            },
                            UIElement() {
                                return m.u1;
                            },
                            UIForm() {
                                return m.x4;
                            },
                            UIGroup() {
                                return m.qe;
                            },
                            UIInput() {
                                return m.u3;
                            },
                            UIList() {
                                return m.bz;
                            },
                            UIMessages() {
                                return F.D;
                            },
                            UISeparator() {
                                return m.lU;
                            },
                            UITextArea() {
                                return m.GJ;
                            },
                            Uploader() {
                                return H;
                            },
                            View() {
                                return f.G;
                            },
                            ViewComponent() {
                                return n.Hr;
                            },
                            ViewWithToolbar() {
                                return g.C;
                            },
                            defaultNameSpace() {
                                return s.rO;
                            },
                            isFileBrowserFilesItem() {
                                return v.F;
                            },
                            observable() {
                                return s.LO;
                            },
                        });
                    var s = i(77009),
                        o = i(64004),
                        r = i(67106),
                        n = i(95950),
                        a = i(28338),
                        l = i(96538),
                        c = i(97039),
                        d = i(10818),
                        h = i(47643),
                        u = (i(52378), i(36257));
                    class p {
                        get doc() {
                            return (0, h.isFunction)(this.document)
                                ? this.document()
                                : this.document;
                        }
                        constructor(e, t) {
                            (this.document = e), (this.createAttributes = t);
                        }
                        element(e, t, i) {
                            const s = this.doc.createElement(e.toLowerCase());
                            return (
                                this.applyCreateAttributes(s),
                                t &&
                                    ((0, h.isPlainObject)(t)
                                        ? (0, h.attr)(s, t)
                                        : (i = t)),
                                i &&
                                    (0, h.asArray)(i).forEach((e) =>
                                        s.appendChild(
                                            (0, h.isString)(e)
                                                ? this.fromHTML(e)
                                                : e
                                        )
                                    ),
                                s
                            );
                        }
                        div(e, t, i) {
                            const s = this.element("div", t, i);
                            return e && (s.className = e), s;
                        }
                        sandbox() {
                            var e;
                            const t = this.element("iframe", {
                                sandbox: "allow-same-origin",
                            });
                            this.doc.body.appendChild(t);
                            const i =
                                null === (e = t.contentWindow) || void 0 === e
                                    ? void 0
                                    : e.document;
                            if (!i) throw Error("Iframe error");
                            return (
                                i.open(),
                                i.write(
                                    "<!DOCTYPE html><html><head></head><body></body></html>"
                                ),
                                i.close(),
                                i.body
                            );
                        }
                        span(e, t, i) {
                            const s = this.element("span", t, i);
                            return e && (s.className = e), s;
                        }
                        a(e, t, i) {
                            const s = this.element("a", t, i);
                            return e && (s.className = e), s;
                        }
                        text(e) {
                            return this.doc.createTextNode(e);
                        }
                        fake() {
                            return this.text(u.INVISIBLE_SPACE);
                        }
                        fragment() {
                            return this.doc.createDocumentFragment();
                        }
                        fromHTML(e, t) {
                            const i = this.div();
                            i.innerHTML = "" + e;
                            const s =
                                i.firstChild === i.lastChild && i.firstChild
                                    ? i.firstChild
                                    : i;
                            if ((c.i.safeRemove(s), t)) {
                                const e = (0, h.refs)(s);
                                Object.keys(t).forEach((i) => {
                                    const s = e[i];
                                    s && !1 === t[i] && c.i.hide(s);
                                });
                            }
                            return s;
                        }
                        applyCreateAttributes(e) {
                            if (this.createAttributes) {
                                const t = this.createAttributes;
                                if (t && t[e.tagName.toLowerCase()]) {
                                    const i = t[e.tagName.toLowerCase()];
                                    (0, h.isFunction)(i)
                                        ? i(e)
                                        : (0, h.isPlainObject)(i) &&
                                          (0, h.attr)(e, i);
                                }
                            }
                        }
                    }
                    var m = i(86673),
                        f = i(3889),
                        g = i(38870),
                        v = i(26609),
                        b = i(80266),
                        y = i(52784),
                        w = i(43854);
                    class k extends n.Hr {
                        constructor() {
                            super(...arguments), (this.__isBlocked = !1);
                        }
                        className() {
                            return "Snapshot";
                        }
                        static equal(e, t) {
                            return (
                                e.html === t.html &&
                                JSON.stringify(e.range) ===
                                    JSON.stringify(t.range)
                            );
                        }
                        static countNodesBeforeInParent(e) {
                            if (!e.parentNode) return 0;
                            const t = e.parentNode.childNodes;
                            let i = 0,
                                s = null;
                            for (let o = 0; t.length > o; o += 1) {
                                if (
                                    (!s ||
                                        this.isIgnoredNode(t[o]) ||
                                        (c.i.isText(s) && c.i.isText(t[o])) ||
                                        (i += 1),
                                    t[o] === e)
                                )
                                    return i;
                                s = t[o];
                            }
                            return 0;
                        }
                        static strokeOffset(e, t) {
                            for (; c.i.isText(e); )
                                c.i.isText((e = e.previousSibling)) &&
                                    e.nodeValue &&
                                    (t += e.nodeValue.length);
                            return t;
                        }
                        calcHierarchyLadder(e) {
                            const t = [];
                            if (
                                !e ||
                                !e.parentNode ||
                                !c.i.isOrContains(this.j.editor, e)
                            )
                                return [];
                            for (; e && e !== this.j.editor; )
                                e &&
                                    !k.isIgnoredNode(e) &&
                                    t.push(k.countNodesBeforeInParent(e)),
                                    (e = e.parentNode);
                            return t.reverse();
                        }
                        getElementByLadder(e) {
                            let t,
                                i = this.j.editor;
                            for (t = 0; i && e.length > t; t += 1)
                                i = i.childNodes[e[t]];
                            return i;
                        }
                        get isBlocked() {
                            return this.__isBlocked;
                        }
                        __block(e) {
                            this.__isBlocked = e;
                        }
                        transaction(e) {
                            this.__block(!0);
                            try {
                                e();
                            } catch (e) {}
                            this.__block(!1);
                        }
                        make() {
                            const e = {
                                html: "",
                                range: {
                                    startContainer: [],
                                    startOffset: 0,
                                    endContainer: [],
                                    endOffset: 0,
                                },
                            };
                            e.html = this.removeJoditSelection(this.j.editor);
                            const t = this.j.s.sel;
                            if (t && t.rangeCount) {
                                const i = t.getRangeAt(0),
                                    s = this.calcHierarchyLadder(
                                        i.startContainer
                                    ),
                                    o = this.calcHierarchyLadder(
                                        i.endContainer
                                    );
                                let r = k.strokeOffset(
                                        i.startContainer,
                                        i.startOffset
                                    ),
                                    n = k.strokeOffset(
                                        i.endContainer,
                                        i.endOffset
                                    );
                                s.length ||
                                    i.startContainer === this.j.editor ||
                                    (r = 0),
                                    o.length ||
                                        i.endContainer === this.j.editor ||
                                        (n = 0),
                                    (e.range = {
                                        startContainer: s,
                                        startOffset: r,
                                        endContainer: o,
                                        endOffset: n,
                                    });
                            }
                            return e;
                        }
                        restore(e) {
                            this.transaction(() => {
                                const t = this.storeScrollState();
                                this.j.getNativeEditorValue() !== e.html &&
                                    (this.j.value = e.html),
                                    this.restoreOnlySelection(e),
                                    this.restoreScrollState(t);
                            });
                        }
                        storeScrollState() {
                            return [this.j.ow.scrollY, this.j.editor.scrollTop];
                        }
                        restoreScrollState(e) {
                            const { j: t } = this,
                                { ow: i } = t;
                            i.scrollTo(i.scrollX, e[0]),
                                (t.editor.scrollTop = e[1]);
                        }
                        restoreOnlySelection(e) {
                            try {
                                if (e.range) {
                                    const t = this.j.ed.createRange();
                                    t.setStart(
                                        this.getElementByLadder(
                                            e.range.startContainer
                                        ),
                                        e.range.startOffset
                                    ),
                                        t.setEnd(
                                            this.getElementByLadder(
                                                e.range.endContainer
                                            ),
                                            e.range.endOffset
                                        ),
                                        this.j.s.selectRange(t);
                                }
                            } catch (e) {
                                this.j.editor.lastChild &&
                                    this.j.s.setCursorAfter(
                                        this.j.editor.lastChild
                                    );
                            }
                        }
                        destruct() {
                            this.__block(!1), super.destruct();
                        }
                        static isIgnoredNode(e) {
                            return (
                                (c.i.isText(e) && !e.nodeValue) ||
                                c.i.isTemporary(e)
                            );
                        }
                        removeJoditSelection(e) {
                            const t = e.cloneNode(!0);
                            return (
                                t
                                    .querySelectorAll(`[${u.TEMP_ATTR}]`)
                                    .forEach(c.i.unwrap),
                                t.innerHTML
                            );
                        }
                    }
                    class C {
                        constructor(e) {
                            (this.size = e),
                                (this.commands = []),
                                (this.stackPosition = -1);
                        }
                        get length() {
                            return this.commands.length;
                        }
                        clearRedo() {
                            this.commands.length = this.stackPosition + 1;
                        }
                        clear() {
                            (this.commands.length = 0),
                                (this.stackPosition = -1);
                        }
                        push(e) {
                            this.clearRedo(),
                                this.commands.push(e),
                                (this.stackPosition += 1),
                                this.commands.length > this.size &&
                                    (this.commands.shift(),
                                    (this.stackPosition -= 1));
                        }
                        replace(e) {
                            this.commands[this.stackPosition] = e;
                        }
                        current() {
                            return this.commands[this.stackPosition];
                        }
                        undo() {
                            return (
                                !!this.canUndo() &&
                                (this.commands[this.stackPosition] &&
                                    this.commands[this.stackPosition].undo(),
                                (this.stackPosition -= 1),
                                !0)
                            );
                        }
                        redo() {
                            return (
                                !!this.canRedo() &&
                                ((this.stackPosition += 1),
                                this.commands[this.stackPosition] &&
                                    this.commands[this.stackPosition].redo(),
                                !0)
                            );
                        }
                        canUndo() {
                            return this.stackPosition >= 0;
                        }
                        canRedo() {
                            return (
                                this.commands.length - 1 > this.stackPosition
                            );
                        }
                    }
                    class S {
                        undo() {
                            this.history.snapshot.restore(this.oldValue);
                        }
                        redo() {
                            this.history.snapshot.restore(this.newValue);
                        }
                        constructor(e, t, i, s) {
                            (this.oldValue = e),
                                (this.newValue = t),
                                (this.history = i),
                                (this.tick = s);
                        }
                    }
                    var x = i(51663);
                    (w.D.prototype.history = {
                        enable: !0,
                        maxHistoryLength: 1 / 0,
                        timeout: 1e3,
                    }),
                        (w.D.prototype.observer = w.D.prototype.history);
                    class E extends n.Hr {
                        className() {
                            return "History";
                        }
                        get startValue() {
                            return this.__startValue;
                        }
                        set startValue(e) {
                            this.__startValue = e;
                        }
                        constructor(
                            e,
                            t = new C(e.o.history.maxHistoryLength),
                            i = new k(e)
                        ) {
                            super(e),
                                (this.updateTick = 0),
                                (this.__stack = t),
                                (this.snapshot = i),
                                e.o.history.enable &&
                                    e.e.on("afterAddPlace.history", () => {
                                        this.isInDestruct ||
                                            ((this.startValue =
                                                this.snapshot.make()),
                                            e.events
                                                .on(
                                                    "internalChange internalUpdate",
                                                    () => {
                                                        this.startValue =
                                                            this.snapshot.make();
                                                    }
                                                )
                                                .on(
                                                    e.editor,
                                                    [
                                                        "changeSelection",
                                                        "selectionstart",
                                                        "selectionchange",
                                                        "mousedown",
                                                        "mouseup",
                                                        "keydown",
                                                        "keyup",
                                                    ]
                                                        .map(
                                                            (e) =>
                                                                e + ".history"
                                                        )
                                                        .join(" "),
                                                    () => {
                                                        this.startValue.html ===
                                                            this.j.getNativeEditorValue() &&
                                                            (this.startValue =
                                                                this.snapshot.make());
                                                    }
                                                )
                                                .on(
                                                    this,
                                                    "change.history",
                                                    this.onChange
                                                ));
                                    });
                        }
                        __upTick() {
                            this.updateTick += 1;
                        }
                        onChange() {
                            this.__processChanges();
                        }
                        __processChanges() {
                            !this.snapshot.isBlocked &&
                                this.j.o.history.enable &&
                                this.updateStack();
                        }
                        updateStack(e = !1) {
                            const t = this.snapshot.make();
                            if (!k.equal(t, this.startValue)) {
                                const i = new S(
                                    this.startValue,
                                    t,
                                    this,
                                    this.updateTick
                                );
                                if (e) {
                                    const e = this.__stack.current();
                                    e &&
                                        this.updateTick === e.tick &&
                                        this.__stack.replace(i);
                                } else this.__stack.push(i);
                                (this.startValue = t), this.fireChangeStack();
                            }
                        }
                        redo() {
                            this.__stack.redo() &&
                                ((this.startValue = this.snapshot.make()),
                                this.fireChangeStack());
                        }
                        canRedo() {
                            return this.__stack.canRedo();
                        }
                        undo() {
                            this.__stack.undo() &&
                                ((this.startValue = this.snapshot.make()),
                                this.fireChangeStack());
                        }
                        canUndo() {
                            return this.__stack.canUndo();
                        }
                        clear() {
                            (this.startValue = this.snapshot.make()),
                                this.__stack.clear(),
                                this.fireChangeStack();
                        }
                        get length() {
                            return this.__stack.length;
                        }
                        fireChangeStack() {
                            var e;
                            this.j &&
                                !this.j.isInDestruct &&
                                (null === (e = this.j.events) ||
                                    void 0 === e ||
                                    e.fire("changeStack"));
                        }
                        destruct() {
                            this.isInDestruct ||
                                (this.j.events && this.j.e.off(".history"),
                                this.snapshot.destruct(),
                                super.destruct());
                        }
                    }
                    (0, y.gn)(
                        [(0, x.debounce)()],
                        E.prototype,
                        "onChange",
                        null
                    );
                    var _ = i(61833),
                        j = i(78930);
                    let z = class e extends n.Hr {
                        className() {
                            return "StatusBar";
                        }
                        hide() {
                            this.container.classList.add("jodit_hidden");
                        }
                        show() {
                            this.container.classList.remove("jodit_hidden");
                        }
                        get isShown() {
                            return !this.container.classList.contains(
                                "jodit_hidden"
                            );
                        }
                        getHeight() {
                            var e, t;
                            return null !==
                                (t =
                                    null === (e = this.container) ||
                                    void 0 === e
                                        ? void 0
                                        : e.offsetHeight) && void 0 !== t
                                ? t
                                : 0;
                        }
                        findEmpty(e = !1) {
                            const t = this.getElms(e ? "item-right" : "item");
                            for (let e = 0; t.length > e; e += 1)
                                if (!t[e].innerHTML.trim().length) return t[e];
                        }
                        append(e, t = !1) {
                            var i;
                            const s =
                                this.findEmpty(t) ||
                                this.j.c.div(this.getFullElName("item"));
                            t &&
                                s.classList.add(
                                    this.getFullElName("item-right")
                                ),
                                s.appendChild(e),
                                null === (i = this.container) ||
                                    void 0 === i ||
                                    i.appendChild(s),
                                this.j.o.statusbar && this.show(),
                                this.j.e.fire("resize");
                        }
                        constructor(e, t) {
                            super(e),
                                (this.target = t),
                                (this.mods = {}),
                                (this.container = e.c.div("jodit-status-bar")),
                                t.appendChild(this.container),
                                this.hide();
                        }
                        destruct() {
                            this.isInDestruct ||
                                (this.setStatus(n.n$.beforeDestruct),
                                c.i.safeRemove(this.container),
                                super.destruct());
                        }
                    };
                    z = (0, y.gn)([x.component, (0, x.derive)(j.$t, j.Fx)], z);
                    var T = i(38683),
                        I = i(28171),
                        L = i(81023),
                        M = i(63328),
                        A = i(67698);
                    i(78855);
                    const D = new WeakMap();
                    function P(e, t) {
                        const i = ((e, t) => {
                                if ((0, h.isFunction)(e.o.buildData))
                                    return e.o.buildData.call(e, t);
                                const i = e.ow.FormData;
                                if (void 0 !== i) {
                                    if (t instanceof i) return t;
                                    if ((0, h.isString)(t)) return t;
                                    const e = new i();
                                    return (
                                        Object.keys(t).forEach((i) => {
                                            e.append(i, t[i]);
                                        }),
                                        e
                                    );
                                }
                                return t;
                            })(e, t),
                            s = (t) => {
                                const i = new r.t({
                                    xhr() {
                                        const t = new XMLHttpRequest();
                                        return (
                                            void 0 !== e.j.ow.FormData &&
                                            t.upload
                                                ? (e.j.progressbar
                                                      .show()
                                                      .progress(10),
                                                  t.upload.addEventListener(
                                                      "progress",
                                                      (t) => {
                                                          if (
                                                              t.lengthComputable
                                                          ) {
                                                              let i =
                                                                  t.loaded /
                                                                  t.total;
                                                              (i *= 100),
                                                                  e.j.progressbar
                                                                      .show()
                                                                      .progress(
                                                                          i
                                                                      ),
                                                                  100 > i ||
                                                                      e.j.progressbar.hide();
                                                          }
                                                      },
                                                      !1
                                                  ))
                                                : e.j.progressbar.hide(),
                                            t
                                        );
                                    },
                                    method: e.o.method || "POST",
                                    data: t,
                                    url: (0, h.isFunction)(e.o.url)
                                        ? e.o.url(t)
                                        : e.o.url,
                                    headers: e.o.headers,
                                    queryBuild: e.o.queryBuild,
                                    contentType: e.o.contentType.call(e, t),
                                    withCredentials: e.o.withCredentials || !1,
                                });
                                let s = D.get(e);
                                return (
                                    s || ((s = new Set()), D.set(e, s)),
                                    s.add(i),
                                    e.j.e.one("beforeDestruct", i.destruct),
                                    i
                                        .send()
                                        .then((e) => e.json())
                                        .catch((t) => {
                                            e.o.error.call(e, t);
                                        })
                                        .finally(() => {
                                            i.destruct(),
                                                null == s || s.delete(i);
                                        })
                                );
                            };
                        return (0, h.isPromise)(i)
                            ? i.then(s).catch((t) => {
                                  e.o.error.call(e, t);
                              })
                            : s(i);
                    }
                    function N(e, t, i, s, o) {
                        if (!t)
                            return Promise.reject((0, h.error)("Need files"));
                        const { o: r } = e;
                        let n = (0, h.toArray)(t);
                        if (!n.length)
                            return Promise.reject((0, h.error)("Need files"));
                        const a = [];
                        if (r.insertImageAsBase64URI) {
                            let t, s;
                            for (s = 0; n.length > s; s += 1)
                                if (((t = n[s]), t && t.type)) {
                                    const o = t.type.match(/\/([a-z0-9]+)/i),
                                        l = o[1] ? o[1].toLowerCase() : "";
                                    if (r.imagesExtensions.includes(l)) {
                                        const o = new FileReader();
                                        a.push(
                                            e.j.async.promise((s, n) => {
                                                (o.onerror = n),
                                                    (o.onloadend = () => {
                                                        const t = {
                                                            baseurl: "",
                                                            files: [o.result],
                                                            isImages: [!0],
                                                        };
                                                        ((0, h.isFunction)(i)
                                                            ? i
                                                            : r.defaultHandlerSuccess
                                                        ).call(e, t),
                                                            s(t);
                                                    }),
                                                    o.readAsDataURL(t);
                                            })
                                        ),
                                            (n[s] = null);
                                    }
                                }
                        }
                        if (((n = n.filter((e) => e)), n.length)) {
                            const t = new FormData();
                            let l;
                            t.append(r.pathVariableName, e.path),
                                t.append("source", e.source);
                            for (let i = 0; n.length > i; i += 1)
                                if (((l = n[i]), l)) {
                                    const s = /\.[\d\w]+$/.test(l.name),
                                        o = l.type.match(/\/([a-z0-9]+)/i),
                                        a = o && o[1] ? o[1].toLowerCase() : "";
                                    let c =
                                        n[i].name ||
                                        ("" + Math.random()).replace(".", "");
                                    if (!s && a) {
                                        let e = a;
                                        ["jpeg", "jpg"].includes(e) &&
                                            (e = "jpeg|jpg"),
                                            RegExp(".(" + e + ")$", "i").test(
                                                c
                                            ) || (c += "." + a);
                                    }
                                    const [d, h, u] = r.processFileName.call(
                                        e,
                                        r.filesVariableName(i),
                                        n[i],
                                        c
                                    );
                                    t.append(d, h, u);
                                }
                            o && o(t),
                                r.data &&
                                    (0, h.isPlainObject)(r.data) &&
                                    Object.keys(r.data).forEach((e) => {
                                        t.append(e, r.data[e]);
                                    }),
                                r.prepareData.call(e, t),
                                a.push(
                                    P(e, t)
                                        .then((t) =>
                                            r.isSuccess.call(e, t)
                                                ? (((0, h.isFunction)(i)
                                                      ? i
                                                      : r.defaultHandlerSuccess
                                                  ).call(
                                                      e,
                                                      r.process.call(e, t)
                                                  ),
                                                  t)
                                                : (((0, h.isFunction)(s)
                                                      ? s
                                                      : r.defaultHandlerError
                                                  ).call(
                                                      e,
                                                      (0, h.error)(
                                                          r.getMessage.call(
                                                              e,
                                                              t
                                                          )
                                                      )
                                                  ),
                                                  t)
                                        )
                                        .then(() => {
                                            e.j.events &&
                                                e.j.e.fire("filesWereUploaded");
                                        })
                                );
                        }
                        return Promise.all(a);
                    }
                    function R(e) {
                        return !!(e && e.files && e.files.length > 0);
                    }
                    function q(e) {
                        return !!(e && e.items && e.items.length > 0);
                    }
                    var B = i(67493),
                        O = i(99820);
                    (w.D.prototype.enableDragAndDropFileToEditor = !0),
                        (w.D.prototype.uploader = {
                            url: "",
                            insertImageAsBase64URI: !1,
                            imagesExtensions: ["jpg", "png", "jpeg", "gif"],
                            headers: null,
                            data: null,
                            filesVariableName: (e) => `files[${e}]`,
                            withCredentials: !1,
                            pathVariableName: "path",
                            format: "json",
                            method: "POST",
                            prepareData: (e) => e,
                            isSuccess: (e) => e.success,
                            getMessage: (e) =>
                                void 0 !== e.data.messages &&
                                (0, B.k)(e.data.messages)
                                    ? e.data.messages.join(" ")
                                    : "",
                            processFileName: (e, t, i) => [e, t, i],
                            process: (e) => e.data,
                            error(e) {
                                this.j.e.fire(
                                    "errorMessage",
                                    e.message,
                                    "error",
                                    4e3
                                );
                            },
                            getDisplayName: (e, t) => e + t,
                            defaultHandlerSuccess(e) {
                                const t = this.j || this;
                                (0, O.Z)(t) &&
                                    e.files &&
                                    e.files.length &&
                                    e.files.forEach((i, s) => {
                                        const [o, r] =
                                                e.isImages && e.isImages[s]
                                                    ? ["img", "src"]
                                                    : ["a", "href"],
                                            n = t.createInside.element(o);
                                        n.setAttribute(r, e.baseurl + i),
                                            "a" === o &&
                                                (n.textContent =
                                                    t.o.uploader.getDisplayName.call(
                                                        this,
                                                        e.baseurl,
                                                        i
                                                    )),
                                            "img" === o
                                                ? t.s.insertImage(
                                                      n,
                                                      null,
                                                      t.o.imageDefaultWidth
                                                  )
                                                : t.s.insertNode(n);
                                    });
                            },
                            defaultHandlerError(e) {
                                this.j.e.fire("errorMessage", e.message);
                            },
                            contentType(e) {
                                return (
                                    (void 0 === this.ow.FormData ||
                                        "string" == typeof e) &&
                                    "application/x-www-form-urlencoded; charset=UTF-8"
                                );
                            },
                        });
                    class H extends n.Hr {
                        get j() {
                            return this.jodit;
                        }
                        className() {
                            return "Uploader";
                        }
                        get o() {
                            return this.options;
                        }
                        setPath(e) {
                            return (this.path = e), this;
                        }
                        setSource(e) {
                            return (this.source = e), this;
                        }
                        bind(e, t, i) {
                            const s = () => {
                                    e.classList.remove("jodit_drag_hover");
                                },
                                o = this,
                                r = (e) => {
                                    let r, n, a;
                                    const l = e.clipboardData,
                                        c = (e) => {
                                            n &&
                                                (e.append("extension", a),
                                                e.append("mimetype", n.type));
                                        };
                                    if (!u.IS_IE && R(l))
                                        return (
                                            N(o, l.files, t, i).finally(s), !1
                                        );
                                    if (q(l)) {
                                        const { items: d } = l;
                                        for (r = 0; d.length > r; r += 1)
                                            if (
                                                "file" === d[r].kind &&
                                                "image/png" === d[r].type
                                            ) {
                                                if (
                                                    ((n = d[r].getAsFile()), n)
                                                ) {
                                                    const e =
                                                        n.type.match(
                                                            /\/([a-z0-9]+)/i
                                                        );
                                                    (a = e[1]
                                                        ? e[1].toLowerCase()
                                                        : ""),
                                                        N(
                                                            o,
                                                            [n],
                                                            t,
                                                            i,
                                                            c
                                                        ).finally(s);
                                                }
                                                e.preventDefault();
                                                break;
                                            }
                                    }
                                };
                            o.j && o.j.editor !== e
                                ? o.j.e.on(e, "paste", r)
                                : o.j.e.on("beforePaste", r),
                                this.attachEvents(e, t, i, s);
                        }
                        attachEvents(e, t, i, s) {
                            const o = this;
                            o.j.e
                                .on(
                                    e,
                                    "dragend dragover dragenter dragleave drop",
                                    (e) => {
                                        e.preventDefault();
                                    }
                                )
                                .on(e, "dragover", (t) => {
                                    (R(t.dataTransfer) || q(t.dataTransfer)) &&
                                        (e.classList.add("jodit_drag_hover"),
                                        t.preventDefault());
                                })
                                .on(e, "dragend dragleave", (t) => {
                                    e.classList.remove("jodit_drag_hover"),
                                        R(t.dataTransfer) && t.preventDefault();
                                })
                                .on(e, "drop", (r) => {
                                    e.classList.remove("jodit_drag_hover"),
                                        R(r.dataTransfer) &&
                                            (r.preventDefault(),
                                            r.stopImmediatePropagation(),
                                            N(
                                                o,
                                                r.dataTransfer.files,
                                                t,
                                                i
                                            ).finally(s));
                                });
                            const r = e.querySelector("input[type=file]");
                            r &&
                                o.j.e.on(r, "change", () => {
                                    N(o, r.files, t, i)
                                        .then(() => {
                                            (r.value = ""),
                                                /safari/i.test(
                                                    navigator.userAgent
                                                ) ||
                                                    ((r.type = ""),
                                                    (r.type = "file"));
                                        })
                                        .finally(s);
                                });
                        }
                        uploadRemoteImage(e, t, i) {
                            const s = this,
                                { o } = s,
                                r = (0, h.isFunction)(i)
                                    ? i
                                    : o.defaultHandlerError;
                            P(s, { action: "fileUploadRemote", url: e })
                                .then((e) => {
                                    o.isSuccess.call(s, e)
                                        ? ((0, h.isFunction)(t)
                                              ? t
                                              : o.defaultHandlerSuccess
                                          ).call(s, o.process.call(s, e))
                                        : r.call(
                                              s,
                                              (0, h.error)(
                                                  o.getMessage.call(s, e)
                                              )
                                          );
                                })
                                .catch((e) => r.call(s, e));
                        }
                        constructor(e, t) {
                            super(e),
                                (this.path = ""),
                                (this.source = "default"),
                                (this.options = (0, h.ConfigProto)(
                                    t || {},
                                    (0, h.ConfigProto)(
                                        w.D.defaultOptions.uploader,
                                        (0, h.isJoditObject)(e)
                                            ? e.o.uploader
                                            : {}
                                    )
                                ));
                        }
                        destruct() {
                            this.setStatus(n.n$.beforeDestruct);
                            const e = D.get(this);
                            e &&
                                (e.forEach((e) => {
                                    try {
                                        e.destruct();
                                    } catch (e) {}
                                }),
                                e.clear()),
                                super.destruct();
                        }
                    }
                    var F = i(15496),
                        V = i(4596);
                },
                15496(e, t, i) {
                    "use strict";
                    i.d(t, {
                        D() {
                            return d;
                        },
                    });
                    var s = i(52784),
                        o = i(47077),
                        r = i(1510),
                        n = i(46696),
                        a = i(12692),
                        l = i(86673);
                    let c = class e extends l.u1 {
                        className() {
                            return "UIMessage";
                        }
                        constructor(e, t) {
                            super(e),
                                this.setMod("active", !0),
                                this.setMod("variant", t.variant),
                                (this.container.textContent = t.text);
                        }
                    };
                    c = (0, s.gn)([n.w], c);
                    let d = class e extends r.q {
                        className() {
                            return "UIMessages";
                        }
                        constructor(
                            e,
                            t,
                            i = { defaultTimeout: 3e3, defaultOffset: 5 }
                        ) {
                            super(e),
                                (this.__box = t),
                                (this.options = i),
                                (this.__messages = new Set());
                        }
                        info(e, t) {
                            this.__message(e, "info", t);
                        }
                        success(e, t) {
                            this.__message(e, "success", t);
                        }
                        error(e, t) {
                            this.__message(e, "error", t);
                        }
                        message(e, t, i) {
                            this.__message(e, t, i);
                        }
                        __message(e, t = "info", i) {
                            const s = e + ":" + t;
                            if (this.__messages.has(s))
                                return void this.async.updateTimeout(
                                    s,
                                    i || this.options.defaultTimeout
                                );
                            this.__box.appendChild(this.container);
                            const o = new c(this.j, { text: e, variant: t });
                            this.append(o),
                                this.__calcOffsets(),
                                this.__messages.add(s);
                            const r = this.__getRemoveCallback(o, s);
                            this.j.e.on(o.container, "pointerdown", r),
                                this.async.setTimeout(r, {
                                    label: s,
                                    timeout: i || this.options.defaultTimeout,
                                });
                        }
                        __getRemoveCallback(e, t) {
                            const i = (s) => {
                                s && s.preventDefault(),
                                    e.isInDestruct ||
                                        (this.async.clearTimeout(t),
                                        this.j.e.off(
                                            e.container,
                                            "pointerdown",
                                            i
                                        ),
                                        this.__messages.delete(t),
                                        e.setMod("active", !1),
                                        this.async.setTimeout(() => {
                                            this.remove(e),
                                                e.destruct(),
                                                this.__calcOffsets();
                                        }, 300));
                            };
                            return i;
                        }
                        __calcOffsets() {
                            let e = 5;
                            this.elements.forEach((t) => {
                                (0, o.i)(t.container, "bottom", e + "px"),
                                    (e +=
                                        t.container.offsetHeight +
                                        this.options.defaultOffset);
                            });
                        }
                    };
                    (0, s.gn)(
                        [(0, a.YP)(":errorMessage")],
                        d.prototype,
                        "__message",
                        null
                    ),
                        (d = (0, s.gn)([n.w], d));
                },
                38683(e, t, i) {
                    "use strict";
                    i.d(t, {
                        i() {
                            return h;
                        },
                    });
                    var s = i(52784),
                        o = i(36257),
                        r = i(97039),
                        n = i(47643),
                        a = i(95950),
                        l = i(78855),
                        c = i(51663);
                    const d = new WeakMap();
                    class h extends a.Hr {
                        constructor() {
                            super(...arguments), (this.selected = new Set());
                        }
                        className() {
                            return "Table";
                        }
                        recalculateStyles() {
                            const e = (0, l.ZO)(this.j, h, "style", !0),
                                t = [];
                            this.selected.forEach((e) => {
                                const i = (0, n.cssPath)(e);
                                i && t.push(i);
                            }),
                                (e.innerHTML = t.length
                                    ? t.join(",") +
                                      `{${this.jodit.options.table.selectionCellStyle}}`
                                    : "");
                        }
                        addSelection(e) {
                            this.selected.add(e), this.recalculateStyles();
                            const t = r.i.closest(e, "table", this.j.editor);
                            if (t) {
                                const i = h.selectedByTable.get(t) || new Set();
                                i.add(e), h.selectedByTable.set(t, i);
                            }
                        }
                        removeSelection(e) {
                            this.selected.delete(e), this.recalculateStyles();
                            const t = r.i.closest(e, "table", this.j.editor);
                            if (t) {
                                const i = h.selectedByTable.get(t);
                                i &&
                                    (i.delete(e),
                                    i.size || h.selectedByTable.delete(t));
                            }
                        }
                        getAllSelectedCells() {
                            return (0, n.toArray)(this.selected);
                        }
                        static getSelectedCellsByTable(e) {
                            const t = h.selectedByTable.get(e);
                            return t ? (0, n.toArray)(t) : [];
                        }
                        destruct() {
                            return this.selected.clear(), super.destruct();
                        }
                        static getRowsCount(e) {
                            return e.rows.length;
                        }
                        static getColumnsCount(e) {
                            return h
                                .formalMatrix(e)
                                .reduce((e, t) => Math.max(e, t.length), 0);
                        }
                        static formalMatrix(e, t) {
                            const i = [[]],
                                s = (0, n.toArray)(e.rows),
                                o = (e, s) => {
                                    void 0 === i[s] && (i[s] = []);
                                    const o = e.colSpan,
                                        r = e.rowSpan;
                                    let n,
                                        a,
                                        l = 0;
                                    for (; i[s][l]; ) l += 1;
                                    for (a = 0; r > a; a += 1)
                                        for (n = 0; o > n; n += 1) {
                                            if (
                                                (void 0 === i[s + a] &&
                                                    (i[s + a] = []),
                                                t &&
                                                    !1 ===
                                                        t(
                                                            e,
                                                            s + a,
                                                            l + n,
                                                            o,
                                                            r
                                                        ))
                                            )
                                                return !1;
                                            i[s + a][l + n] = e;
                                        }
                                };
                            for (let e = 0; s.length > e; e += 1) {
                                const t = (0, n.toArray)(s[e].cells);
                                for (let s = 0; t.length > s; s += 1)
                                    if (!1 === o(t[s], e)) return i;
                            }
                            return i;
                        }
                        static formalCoordinate(e, t, i = !1) {
                            let s = 0,
                                o = 0,
                                r = 1,
                                n = 1;
                            return (
                                h.formalMatrix(e, (e, a, l, c, d) => {
                                    if (t === e)
                                        return (
                                            (s = a),
                                            (o = l),
                                            (r = c || 1),
                                            (n = d || 1),
                                            i &&
                                                ((o += (c || 1) - 1),
                                                (s += (d || 1) - 1)),
                                            !1
                                        );
                                }),
                                [s, o, r, n]
                            );
                        }
                        static appendRow(e, t, i, s) {
                            var o;
                            let r;
                            if (t)
                                (r = t.cloneNode(!0)),
                                    (0, n.$$)("td,th", t).forEach((e) => {
                                        const t = (0, n.attr)(e, "rowspan");
                                        if (t && parseInt(t, 10) > 1) {
                                            const i = parseInt(t, 10) - 1;
                                            (0, n.attr)(
                                                e,
                                                "rowspan",
                                                i > 1 ? i : null
                                            );
                                        }
                                    }),
                                    (0, n.$$)("td,th", r).forEach((e) => {
                                        e.innerHTML = "";
                                    });
                            else {
                                const t = h.getColumnsCount(e);
                                r = s.element("tr");
                                for (let e = 0; t > e; e += 1)
                                    r.appendChild(s.element("td"));
                            }
                            i && t && t.nextSibling
                                ? t.parentNode &&
                                  t.parentNode.insertBefore(r, t.nextSibling)
                                : !i && t
                                ? t.parentNode &&
                                  t.parentNode.insertBefore(r, t)
                                : (
                                      (null ===
                                          (o =
                                              e.getElementsByTagName(
                                                  "tbody"
                                              )) || void 0 === o
                                          ? void 0
                                          : o[0]) || e
                                  ).appendChild(r);
                        }
                        static removeRow(e, t) {
                            const i = h.formalMatrix(e);
                            let s;
                            const o = e.rows[t];
                            i[t].forEach((a, l) => {
                                if (((s = !1), 0 > t - 1 || i[t - 1][l] !== a))
                                    if (i[t + 1] && i[t + 1][l] === a) {
                                        if (
                                            a.parentNode === o &&
                                            a.parentNode.nextSibling
                                        ) {
                                            s = !0;
                                            let o = l + 1;
                                            for (; i[t + 1][o] === a; ) o += 1;
                                            const n = r.i.next(
                                                a.parentNode,
                                                (e) => r.i.isTag(e, "tr"),
                                                e
                                            );
                                            n &&
                                                (i[t + 1][o]
                                                    ? n.insertBefore(
                                                          a,
                                                          i[t + 1][o]
                                                      )
                                                    : n.appendChild(a));
                                        }
                                    } else r.i.safeRemove(a);
                                else s = !0;
                                if (
                                    s &&
                                    (a.parentNode === o || a !== i[t][l - 1])
                                ) {
                                    const e = a.rowSpan;
                                    (0, n.attr)(
                                        a,
                                        "rowspan",
                                        e - 1 > 1 ? e - 1 : null
                                    );
                                }
                            }),
                                r.i.safeRemove(o);
                        }
                        static appendColumn(e, t, i, s) {
                            const o = h.formalMatrix(e);
                            let a;
                            for (
                                (void 0 === t || 0 > t) &&
                                    (t = h.getColumnsCount(e) - 1),
                                    a = 0;
                                o.length > a;
                                a += 1
                            ) {
                                const e = s.element("td"),
                                    l = o[a][t];
                                let c = !1;
                                i
                                    ? ((o[a] && l && t + 1 >= o[a].length) ||
                                          l !== o[a][t + 1]) &&
                                      (l.nextSibling
                                          ? r.i.before(l.nextSibling, e)
                                          : l.parentNode &&
                                            l.parentNode.appendChild(e),
                                      (c = !0))
                                    : (0 > t - 1 ||
                                          (o[a][t] !== o[a][t - 1] &&
                                              o[a][t].parentNode)) &&
                                      (r.i.before(o[a][t], e), (c = !0)),
                                    c ||
                                        (0, n.attr)(
                                            o[a][t],
                                            "colspan",
                                            parseInt(
                                                (0, n.attr)(
                                                    o[a][t],
                                                    "colspan"
                                                ) || "1",
                                                10
                                            ) + 1
                                        );
                            }
                        }
                        static removeColumn(e, t) {
                            const i = h.formalMatrix(e);
                            let s;
                            i.forEach((e, o) => {
                                const a = e[t];
                                if (
                                    ((s = !1),
                                    0 > t - 1 || i[o][t - 1] !== a
                                        ? e.length > t + 1 && i[o][t + 1] === a
                                            ? (s = !0)
                                            : r.i.safeRemove(a)
                                        : (s = !0),
                                    s && (0 > o - 1 || a !== i[o - 1][t]))
                                ) {
                                    const e = a.colSpan;
                                    (0, n.attr)(
                                        a,
                                        "colspan",
                                        e - 1 > 1 ? "" + (e - 1) : null
                                    );
                                }
                            });
                        }
                        static getSelectedBound(e, t) {
                            const i = [
                                    [1 / 0, 1 / 0],
                                    [0, 0],
                                ],
                                s = h.formalMatrix(e);
                            let o, r, n;
                            for (o = 0; s.length > o; o += 1)
                                for (r = 0; s[o] && s[o].length > r; r += 1)
                                    t.includes(s[o][r]) &&
                                        ((i[0][0] = Math.min(o, i[0][0])),
                                        (i[0][1] = Math.min(r, i[0][1])),
                                        (i[1][0] = Math.max(o, i[1][0])),
                                        (i[1][1] = Math.max(r, i[1][1])));
                            for (o = i[0][0]; i[1][0] >= o; o += 1)
                                for (n = 1, r = i[0][1]; i[1][1] >= r; r += 1) {
                                    for (
                                        ;
                                        s[o] &&
                                        s[o][r - n] &&
                                        s[o][r] === s[o][r - n];

                                    )
                                        (i[0][1] = Math.min(r - n, i[0][1])),
                                            (i[1][1] = Math.max(
                                                r - n,
                                                i[1][1]
                                            )),
                                            (n += 1);
                                    for (
                                        n = 1;
                                        s[o] &&
                                        s[o][r + n] &&
                                        s[o][r] === s[o][r + n];

                                    )
                                        (i[0][1] = Math.min(r + n, i[0][1])),
                                            (i[1][1] = Math.max(
                                                r + n,
                                                i[1][1]
                                            )),
                                            (n += 1);
                                    for (
                                        n = 1;
                                        s[o - n] && s[o][r] === s[o - n][r];

                                    )
                                        (i[0][0] = Math.min(o - n, i[0][0])),
                                            (i[1][0] = Math.max(
                                                o - n,
                                                i[1][0]
                                            )),
                                            (n += 1);
                                    for (
                                        n = 1;
                                        s[o + n] && s[o][r] === s[o + n][r];

                                    )
                                        (i[0][0] = Math.min(o + n, i[0][0])),
                                            (i[1][0] = Math.max(
                                                o + n,
                                                i[1][0]
                                            )),
                                            (n += 1);
                                }
                            return i;
                        }
                        static normalizeTable(e) {
                            let t, i, s, o;
                            const r = [],
                                a = h.formalMatrix(e);
                            for (i = 0; a[0].length > i; i += 1) {
                                for (
                                    s = 1e6, o = !1, t = 0;
                                    a.length > t;
                                    t += 1
                                )
                                    if (void 0 !== a[t][i]) {
                                        if (2 > a[t][i].colSpan) {
                                            o = !0;
                                            break;
                                        }
                                        s = Math.min(s, a[t][i].colSpan);
                                    }
                                if (!o)
                                    for (t = 0; a.length > t; t += 1)
                                        void 0 !== a[t][i] &&
                                            h.mark(
                                                a[t][i],
                                                "colspan",
                                                a[t][i].colSpan - s + 1,
                                                r
                                            );
                            }
                            for (t = 0; a.length > t; t += 1) {
                                for (
                                    s = 1e6, o = !1, i = 0;
                                    a[t].length > i;
                                    i += 1
                                )
                                    if (void 0 !== a[t][i]) {
                                        if (2 > a[t][i].rowSpan) {
                                            o = !0;
                                            break;
                                        }
                                        s = Math.min(s, a[t][i].rowSpan);
                                    }
                                if (!o)
                                    for (i = 0; a[t].length > i; i += 1)
                                        void 0 !== a[t][i] &&
                                            h.mark(
                                                a[t][i],
                                                "rowspan",
                                                a[t][i].rowSpan - s + 1,
                                                r
                                            );
                            }
                            for (t = 0; a.length > t; t += 1)
                                for (i = 0; a[t].length > i; i += 1)
                                    void 0 !== a[t][i] &&
                                        (a[t][i].hasAttribute("rowspan") &&
                                            1 === a[t][i].rowSpan &&
                                            (0, n.attr)(
                                                a[t][i],
                                                "rowspan",
                                                null
                                            ),
                                        a[t][i].hasAttribute("colspan") &&
                                            1 === a[t][i].colSpan &&
                                            (0, n.attr)(
                                                a[t][i],
                                                "colspan",
                                                null
                                            ),
                                        a[t][i].hasAttribute("class") &&
                                            !(0, n.attr)(a[t][i], "class") &&
                                            (0, n.attr)(
                                                a[t][i],
                                                "class",
                                                null
                                            ));
                            h.unmark(r);
                        }
                        static mergeSelected(e, t) {
                            const i = [],
                                s = h.getSelectedBound(
                                    e,
                                    h.getSelectedCellsByTable(e)
                                );
                            let a,
                                l = 0,
                                c = null,
                                d = 0,
                                p = 0,
                                m = 0;
                            const f = new Set(),
                                g = [];
                            s &&
                                (s[0][0] - s[1][0] || s[0][1] - s[1][1]) &&
                                (h.formalMatrix(e, (e, o, r, v, b) => {
                                    if (
                                        !(
                                            s[0][0] > o ||
                                            o > s[1][0] ||
                                            s[0][1] > r ||
                                            r > s[1][1]
                                        )
                                    ) {
                                        if (((a = e), f.has(a))) return;
                                        f.add(a),
                                            o === s[0][0] &&
                                                a.style.width &&
                                                (l += a.offsetWidth),
                                            "" !==
                                                (0, n.trim)(
                                                    e.innerHTML.replace(
                                                        /<br(\/)?>/g,
                                                        ""
                                                    )
                                                ) && i.push(e.innerHTML),
                                            v > 1 && (p += v - 1),
                                            b > 1 && (m += b - 1),
                                            c
                                                ? (h.mark(a, "remove", 1, g),
                                                  u(t).removeSelection(a))
                                                : ((c = e), (d = r));
                                    }
                                }),
                                (p = s[1][1] - s[0][1] + 1),
                                (m = s[1][0] - s[0][0] + 1),
                                c &&
                                    (p > 1 && h.mark(c, "colspan", p, g),
                                    m > 1 && h.mark(c, "rowspan", m, g),
                                    l &&
                                        (h.mark(
                                            c,
                                            "width",
                                            ((l / e.offsetWidth) * 100).toFixed(
                                                o.ACCURACY
                                            ) + "%",
                                            g
                                        ),
                                        d &&
                                            h.setColumnWidthByDelta(
                                                e,
                                                d,
                                                0,
                                                !0,
                                                g
                                            )),
                                    (c.innerHTML = i.join("<br/>")),
                                    u(t).addSelection(c),
                                    f.delete(c),
                                    h.unmark(g),
                                    h.normalizeTable(e),
                                    (0, n.toArray)(e.rows).forEach((e, t) => {
                                        e.cells.length || r.i.safeRemove(e);
                                    })));
                        }
                        static splitHorizontal(e, t) {
                            let i, s, o, n, a;
                            const l = [];
                            h.getSelectedCellsByTable(e).forEach((c) => {
                                (s = t.createInside.element("td")),
                                    s.appendChild(t.createInside.element("br")),
                                    (o = t.createInside.element("tr")),
                                    (i = h.formalCoordinate(e, c)),
                                    2 > c.rowSpan
                                        ? (h.formalMatrix(e, (e, t, s) => {
                                              i[0] === t &&
                                                  i[1] !== s &&
                                                  e !== c &&
                                                  h.mark(
                                                      e,
                                                      "rowspan",
                                                      e.rowSpan + 1,
                                                      l
                                                  );
                                          }),
                                          r.i.after(r.i.closest(c, "tr", e), o),
                                          o.appendChild(s))
                                        : (h.mark(
                                              c,
                                              "rowspan",
                                              c.rowSpan - 1,
                                              l
                                          ),
                                          h.formalMatrix(e, (t, s, o) => {
                                              s > i[0] &&
                                                  i[0] + c.rowSpan > s &&
                                                  i[1] > o &&
                                                  t.parentNode.rowIndex === s &&
                                                  (a = t),
                                                  s > i[0] &&
                                                      t === c &&
                                                      (n = e.rows[s]);
                                          }),
                                          a
                                              ? r.i.after(a, s)
                                              : n.insertBefore(
                                                    s,
                                                    n.firstChild
                                                )),
                                    c.colSpan > 1 &&
                                        h.mark(s, "colspan", c.colSpan, l),
                                    h.unmark(l),
                                    u(t).removeSelection(c);
                            }),
                                this.normalizeTable(e);
                        }
                        static splitVertical(e, t) {
                            let i, s, n;
                            const a = [];
                            h.getSelectedCellsByTable(e).forEach((l) => {
                                (i = h.formalCoordinate(e, l)),
                                    2 > l.colSpan
                                        ? h.formalMatrix(e, (e, t, s) => {
                                              i[1] === s &&
                                                  i[0] !== t &&
                                                  e !== l &&
                                                  h.mark(
                                                      e,
                                                      "colspan",
                                                      e.colSpan + 1,
                                                      a
                                                  );
                                          })
                                        : h.mark(
                                              l,
                                              "colspan",
                                              l.colSpan - 1,
                                              a
                                          ),
                                    (s = t.createInside.element("td")),
                                    s.appendChild(t.createInside.element("br")),
                                    l.rowSpan > 1 &&
                                        h.mark(s, "rowspan", l.rowSpan, a);
                                const c = l.offsetWidth;
                                r.i.after(l, s),
                                    (n = c / e.offsetWidth / 2),
                                    h.mark(
                                        l,
                                        "width",
                                        (100 * n).toFixed(o.ACCURACY) + "%",
                                        a
                                    ),
                                    h.mark(
                                        s,
                                        "width",
                                        (100 * n).toFixed(o.ACCURACY) + "%",
                                        a
                                    ),
                                    h.unmark(a),
                                    u(t).removeSelection(l);
                            }),
                                h.normalizeTable(e);
                        }
                        static setColumnWidthByDelta(e, t, i, s, r) {
                            const n = h.formalMatrix(e);
                            let a = 0;
                            for (let s = 0; n.length > s; s += 1) {
                                const l = n[s][t];
                                if (1 >= l.colSpan || 1 >= n.length) {
                                    h.mark(
                                        l,
                                        "width",
                                        (
                                            ((l.offsetWidth + i) /
                                                e.offsetWidth) *
                                            100
                                        ).toFixed(o.ACCURACY) + "%",
                                        r
                                    ),
                                        (a = s);
                                    break;
                                }
                            }
                            for (let e = a + 1; n.length > e; e += 1)
                                h.mark(n[e][t], "width", null, r);
                            s || h.unmark(r);
                        }
                        static mark(e, t, i, s) {
                            var o;
                            s.push(e);
                            const r =
                                null !== (o = d.get(e)) && void 0 !== o
                                    ? o
                                    : {};
                            (r[t] = void 0 === i ? 1 : i), d.set(e, r);
                        }
                        static unmark(e) {
                            e.forEach((e) => {
                                const t = d.get(e);
                                t &&
                                    (Object.keys(t).forEach((i) => {
                                        const s = t[i];
                                        switch (i) {
                                            case "remove":
                                                r.i.safeRemove(e);
                                                break;
                                            case "rowspan":
                                                (0, n.attr)(
                                                    e,
                                                    "rowspan",
                                                    (0, n.isNumber)(s) && s > 1
                                                        ? s
                                                        : null
                                                );
                                                break;
                                            case "colspan":
                                                (0, n.attr)(
                                                    e,
                                                    "colspan",
                                                    (0, n.isNumber)(s) && s > 1
                                                        ? s
                                                        : null
                                                );
                                                break;
                                            case "width":
                                                null == s
                                                    ? (e.style.removeProperty(
                                                          "width"
                                                      ),
                                                      (0, n.attr)(e, "style") ||
                                                          (0, n.attr)(
                                                              e,
                                                              "style",
                                                              null
                                                          ))
                                                    : (e.style.width = "" + s);
                                        }
                                        delete t[i];
                                    }),
                                    d.delete(e));
                            });
                        }
                    }
                    (h.selectedByTable = new WeakMap()),
                        (0, s.gn)(
                            [(0, c.debounce)()],
                            h.prototype,
                            "recalculateStyles",
                            null
                        );
                    const u = (e) => e.getInstance("Table", e.o);
                },
                63328(e, t, i) {
                    "use strict";
                    i.d(t, {
                        h() {
                            return m;
                        },
                    });
                    var s = i(52784),
                        o = i(18095),
                        r = i(51663),
                        n = i(97039),
                        a = i(59316),
                        l = i(30446),
                        c = i(47643),
                        d = i(34759),
                        h = i(81023),
                        u = i(78680),
                        p = i(32551);
                    let m = class e extends o.y3 {
                        className() {
                            return "ToolbarButton";
                        }
                        get toolbar() {
                            return this.closest(h.n);
                        }
                        get button() {
                            return this.container.querySelector(
                                `button.${this.componentName}__button`
                            );
                        }
                        update() {
                            const { control: e, state: t } = this,
                                i = this.closest(h.n);
                            (t.disabled = this.calculateDisabledStatus(i)),
                                (t.activated =
                                    this.calculateActivatedStatus(i)),
                                (0, c.isFunction)(e.update) &&
                                    i &&
                                    e.update(this, i.jodit),
                                super.update();
                        }
                        calculateActivatedStatus(e) {
                            return !(
                                ((0, c.isJoditObject)(this.j) &&
                                    !this.j.editorIsActive) ||
                                ((!(0, c.isFunction)(this.control.isActive) ||
                                    !this.control.isActive(
                                        this.j,
                                        this.control,
                                        this
                                    )) &&
                                    (!e || !e.shouldBeActive(this)))
                            );
                        }
                        calculateDisabledStatus(e) {
                            return !(
                                !this.j.o.disabled &&
                                (!this.j.o.readonly ||
                                    (this.j.o.activeButtonsInReadOnly &&
                                        this.j.o.activeButtonsInReadOnly.includes(
                                            this.control.name
                                        ))) &&
                                (!(0, c.isFunction)(this.control.isDisabled) ||
                                    !this.control.isDisabled(
                                        this.j,
                                        this.control,
                                        this
                                    )) &&
                                (!e || !e.shouldBeDisabled(this))
                            );
                        }
                        onChangeActivated() {
                            (0, c.attr)(
                                this.button,
                                "aria-pressed",
                                this.state.activated
                            ),
                                super.onChangeActivated();
                        }
                        onChangeText() {
                            (0, c.isFunction)(this.control.template)
                                ? (this.text.innerHTML = this.control.template(
                                      this.j,
                                      this.control.name,
                                      this.j.i18n(this.state.text)
                                  ))
                                : super.onChangeText(),
                                this.setMod(
                                    "text-icons",
                                    !!this.text.innerText.trim().length
                                );
                        }
                        onChangeTabIndex() {
                            (0, c.attr)(
                                this.button,
                                "tabindex",
                                this.state.tabIndex
                            );
                        }
                        onChangeTooltip() {
                            (0, c.attr)(
                                this.button,
                                "aria-label",
                                this.state.tooltip
                            ),
                                super.onChangeTooltip();
                        }
                        createContainer() {
                            const e = this.componentName,
                                t = this.j.c.span(e),
                                i = super.createContainer();
                            return (
                                (0, c.attr)(t, "role", "listitem"),
                                i.classList.remove(e),
                                i.classList.add(e + "__button"),
                                Object.defineProperty(i, "component", {
                                    value: this,
                                }),
                                t.appendChild(i),
                                (this.trigger = this.j.c.fromHTML(
                                    `<span role="trigger" class="${e}__trigger">${d.J.get(
                                        "chevron"
                                    )}</span>`
                                )),
                                t
                            );
                        }
                        focus() {
                            var e;
                            null ===
                                (e = this.container.querySelector("button")) ||
                                void 0 === e ||
                                e.focus();
                        }
                        onChangeHasTrigger() {
                            this.state.hasTrigger
                                ? this.container.appendChild(this.trigger)
                                : n.i.safeRemove(this.trigger),
                                this.setMod(
                                    "with-trigger",
                                    this.state.hasTrigger || null
                                );
                        }
                        onChangeDisabled() {
                            const e = this.state.disabled ? "disabled" : null;
                            (0, c.attr)(this.trigger, "disabled", e),
                                (0, c.attr)(this.button, "disabled", e),
                                (0, c.attr)(this.container, "disabled", e);
                        }
                        initTooltip() {
                            this.j.o.textIcons ||
                                !this.j.o.showTooltip ||
                                this.j.o.useNativeTooltip ||
                                this.j.e
                                    .off(
                                        this.container,
                                        "mouseenter mouseleave"
                                    )
                                    .on(this.container, "mousemove", (e) => {
                                        this.state.tooltip &&
                                            !this.state.disabled &&
                                            this.j.e.fire(
                                                "delayShowTooltip",
                                                () => ({
                                                    x: e.clientX + 10,
                                                    y: e.clientY + 10,
                                                }),
                                                this.state.tooltip
                                            );
                                    })
                                    .on(this.container, "mouseleave", () => {
                                        this.j.e.fire("hideTooltip");
                                    });
                        }
                        constructor(e, t, i = null) {
                            super(e),
                                (this.control = t),
                                (this.target = i),
                                (this.state = {
                                    ...(0, o.Yc)(),
                                    theme: "toolbar",
                                    currentValue: "",
                                    hasTrigger: !1,
                                }),
                                (this.openedPopup = null),
                                e.e.on(
                                    [this.button, this.trigger],
                                    "mousedown",
                                    (e) => e.preventDefault()
                                ),
                                this.onAction(this.onClick),
                                this.hookStatus(u.n.ready, () => {
                                    this.initFromControl(),
                                        this.initTooltip(),
                                        this.update();
                                }),
                                t.mods &&
                                    Object.keys(t.mods).forEach((e) => {
                                        t.mods && this.setMod(e, t.mods[e]);
                                    });
                        }
                        initFromControl() {
                            var e;
                            const { control: t, state: i } = this;
                            this.updateSize(), (i.name = t.name);
                            const { textIcons: s } = this.j.o;
                            if (
                                !0 === s ||
                                ((0, c.isFunction)(s) && s(t.name)) ||
                                t.template
                            )
                                (i.icon = (0, o.Yc)().icon),
                                    (i.text = t.text || t.name);
                            else {
                                if (t.iconURL) i.icon.iconURL = t.iconURL;
                                else {
                                    const s = t.icon || t.name;
                                    i.icon.name =
                                        d.J.exists(s) ||
                                        (null === (e = this.j.o.extraIcons) ||
                                        void 0 === e
                                            ? void 0
                                            : e[s])
                                            ? s
                                            : "";
                                }
                                t.iconURL ||
                                    i.icon.name ||
                                    (i.text = t.text || t.name);
                            }
                            t.tooltip &&
                                (i.tooltip = this.j.i18n(
                                    (0, c.isFunction)(t.tooltip)
                                        ? t.tooltip(this.j, t, this)
                                        : t.tooltip
                                )),
                                (i.hasTrigger = !!(
                                    t.list ||
                                    (t.popup && t.exec)
                                ));
                        }
                        onTriggerClick(e) {
                            var t, i, s;
                            if (this.openedPopup) return void this.closePopup();
                            const { control: o } = this;
                            if (((e.buffer = { actionTrigger: this }), o.list))
                                return this.openControlList(o);
                            if ((0, c.isFunction)(o.popup)) {
                                const e = this.openPopup();
                                if (
                                    ((e.parentElement = this),
                                    !1 !==
                                        this.j.e.fire(
                                            (0, c.camelCase)(
                                                `before-${o.name}-open-popup`
                                            ),
                                            this.target,
                                            o,
                                            e
                                        ))
                                ) {
                                    const r =
                                            null !==
                                                (s =
                                                    null !==
                                                        (i =
                                                            null ===
                                                                (t =
                                                                    this
                                                                        .toolbar) ||
                                                            void 0 === t
                                                                ? void 0
                                                                : t.getTarget(
                                                                      this
                                                                  )) &&
                                                    void 0 !== i
                                                        ? i
                                                        : this.target) &&
                                            void 0 !== s
                                                ? s
                                                : null,
                                        n = o.popup(
                                            this.j,
                                            r,
                                            o,
                                            this.closePopup,
                                            this
                                        );
                                    n &&
                                        e
                                            .setContent(
                                                (0, c.isString)(n)
                                                    ? this.j.c.fromHTML(n)
                                                    : n
                                            )
                                            .open(
                                                () =>
                                                    (0, c.position)(
                                                        this.container
                                                    ),
                                                !1,
                                                this.j.o.allowTabNavigation
                                                    ? this.container
                                                    : void 0
                                            );
                                }
                                this.j.e.fire(
                                    (0, c.camelCase)(
                                        `after-${o.name}-open-popup`
                                    ),
                                    e.container
                                );
                            }
                        }
                        openControlList(e) {
                            var t;
                            const i =
                                    null !==
                                        (t = this.jodit.options.controls) &&
                                    void 0 !== t
                                        ? t
                                        : {},
                                s = (e) => (0, p.z)(e, i),
                                o = e.list,
                                r = this.openPopup(),
                                n = (0, l.R)(this.j);
                            (r.parentElement = this),
                                (n.parentElement = r),
                                (n.mode = "vertical");
                            const a = (t, i) => {
                                if ((0, c.isString)(i) && s(i))
                                    return { name: "" + i, ...s(i) };
                                if ((0, c.isString)(t) && s(t))
                                    return {
                                        name: "" + t,
                                        ...s(t),
                                        ...("object" == typeof i ? i : {}),
                                    };
                                ((e) =>
                                    (0, c.isPlainObject)(e) &&
                                    "title" in e &&
                                    "value" in e)(t) &&
                                    ((i = t.value), (t = t.title));
                                const { childTemplate: o } = e,
                                    r = {
                                        name: "" + t,
                                        template:
                                            o &&
                                            ((e, t, i) => o(e, t, i, this)),
                                        exec: e.childExec
                                            ? (t, i, s) => {
                                                  var o;
                                                  return null ===
                                                      (o = e.childExec) ||
                                                      void 0 === o
                                                      ? void 0
                                                      : o.call(e, t, i, {
                                                            ...s,
                                                            parentControl: e,
                                                        });
                                              }
                                            : e.exec,
                                        data: e.data,
                                        command: e.command,
                                        isActive: e.isChildActive,
                                        isDisabled: e.isChildDisabled,
                                        mode: e.mode,
                                        args: [...(e.args ? e.args : []), t, i],
                                    };
                                return (0, c.isString)(i) && (r.text = i), r;
                            };
                            n.build(
                                (0, c.isArray)(o)
                                    ? o.map(a)
                                    : (0, c.keys)(o, !1).map((e) => a(e, o[e])),
                                this.target
                            ),
                                r
                                    .setContent(n.container)
                                    .open(
                                        () => (0, c.position)(this.container),
                                        !1,
                                        this.j.o.allowTabNavigation
                                            ? this.container
                                            : void 0
                                    ),
                                (this.state.activated = !0);
                        }
                        onOutsideClick(e) {
                            this.openedPopup &&
                                ((e &&
                                    n.i.isNode(e.target) &&
                                    (n.i.isOrContains(
                                        this.container,
                                        e.target
                                    ) ||
                                        this.openedPopup.isOwnClick(e))) ||
                                    this.closePopup());
                        }
                        openPopup() {
                            return (
                                this.closePopup(),
                                (this.openedPopup = new a.G(this.j, !1)),
                                this.j.e
                                    .on(
                                        this.ow,
                                        "mousedown touchstart",
                                        this.onOutsideClick
                                    )
                                    .on(
                                        "escape closeAllPopups",
                                        this.onOutsideClick
                                    ),
                                this.openedPopup
                            );
                        }
                        closePopup() {
                            this.openedPopup &&
                                (this.j.e
                                    .off(
                                        this.ow,
                                        "mousedown touchstart",
                                        this.onOutsideClick
                                    )
                                    .off(
                                        "escape closeAllPopups",
                                        this.onOutsideClick
                                    ),
                                (this.state.activated = !1),
                                this.openedPopup.close(),
                                this.openedPopup.destruct(),
                                (this.openedPopup = null));
                        }
                        onClick(e) {
                            var t, i, s, o, r, n, a;
                            const { control: l } = this;
                            if ((0, c.isFunction)(l.exec)) {
                                const c =
                                        null !==
                                            (s =
                                                null !==
                                                    (i =
                                                        null ===
                                                            (t =
                                                                this.toolbar) ||
                                                        void 0 === t
                                                            ? void 0
                                                            : t.getTarget(
                                                                  this
                                                              )) && void 0 !== i
                                                    ? i
                                                    : this.target) &&
                                        void 0 !== s
                                            ? s
                                            : null,
                                    d = l.exec(this.j, c, {
                                        control: l,
                                        originalEvent: e,
                                        button: this,
                                    });
                                if (
                                    (!1 !== d &&
                                        !0 !== d &&
                                        (null ===
                                            (r =
                                                null === (o = this.j) ||
                                                void 0 === o
                                                    ? void 0
                                                    : o.e) ||
                                            void 0 === r ||
                                            r.fire("synchro"),
                                        this.parentElement &&
                                            this.parentElement.update(),
                                        null ===
                                            (a =
                                                null === (n = this.j) ||
                                                void 0 === n
                                                    ? void 0
                                                    : n.e) ||
                                            void 0 === a ||
                                            a.fire("closeAllPopups afterExec")),
                                    !1 !== d)
                                )
                                    return;
                            }
                            return l.list
                                ? this.openControlList(l)
                                : (0, c.isFunction)(l.popup)
                                ? this.onTriggerClick(e)
                                : void (
                                      (l.command || l.name) &&
                                      ((0, c.call)(
                                          (0, c.isJoditObject)(this.j)
                                              ? this.j.execCommand.bind(this.j)
                                              : this.j.od.execCommand.bind(
                                                    this.j.od
                                                ),
                                          l.command || l.name,
                                          !1,
                                          l.args && l.args[0]
                                      ),
                                      this.j.e.fire("closeAllPopups"))
                                  );
                        }
                        destruct() {
                            return this.closePopup(), super.destruct();
                        }
                    };
                    (0, s.gn)(
                        [(0, r.watch)("state.tooltip")],
                        m.prototype,
                        "onChangeTooltip",
                        null
                    ),
                        (0, s.gn)(
                            [(0, r.watch)("state.hasTrigger")],
                            m.prototype,
                            "onChangeHasTrigger",
                            null
                        ),
                        (0, s.gn)(
                            [(0, r.watch)("trigger:click")],
                            m.prototype,
                            "onTriggerClick",
                            null
                        ),
                        (0, s.gn)(
                            [r.autobind],
                            m.prototype,
                            "onOutsideClick",
                            null
                        ),
                        (0, s.gn)(
                            [r.autobind],
                            m.prototype,
                            "closePopup",
                            null
                        ),
                        (m = (0, s.gn)([r.component], m));
                },
                67698(e, t, i) {
                    "use strict";
                    i.d(t, {
                        c() {
                            return l;
                        },
                    });
                    var s = i(52784),
                        o = i(18095),
                        r = i(97039),
                        n = i(47643),
                        a = i(51663);
                    let l = class e extends o.y3 {
                        className() {
                            return "ToolbarContent";
                        }
                        update() {
                            const e = this.control.getContent(
                                this.j,
                                this.control,
                                this
                            );
                            ((0, n.isString)(e) ||
                                e.parentNode !== this.container) &&
                                (r.i.detach(this.container),
                                this.container.appendChild(
                                    (0, n.isString)(e)
                                        ? this.j.create.fromHTML(e)
                                        : e
                                )),
                                super.update();
                        }
                        createContainer() {
                            return this.j.c.span(this.componentName);
                        }
                        constructor(e, t, i = null) {
                            super(e),
                                (this.control = t),
                                (this.target = i),
                                this.container.classList.add(
                                    `${this.componentName}_${this.clearName(
                                        t.name
                                    )}`
                                ),
                                (0, n.attr)(this.container, "role", "content");
                        }
                    };
                    l = (0, s.gn)([a.component], l);
                },
                81023(e, t, i) {
                    "use strict";
                    i.d(t, {
                        n() {
                            return l;
                        },
                    });
                    var s = i(52784),
                        o = i(47643),
                        r = i(86673),
                        n = i(30446),
                        a = i(51663);
                    let l = class e extends r.bz {
                        className() {
                            return "ToolbarCollection";
                        }
                        get firstButton() {
                            const [e] = this.buttons;
                            return e || null;
                        }
                        makeButton(e, t = null) {
                            return (0, n.g)(this.j, e, t);
                        }
                        shouldBeActive(e) {}
                        shouldBeDisabled(e) {}
                        getTarget(e) {
                            return e.target || null;
                        }
                        immediateUpdate() {
                            this.isDestructed ||
                                this.j.isLocked ||
                                (super.update(),
                                this.j.e.fire("afterUpdateToolbar"));
                        }
                        setDirection(e) {
                            (this.container.style.direction = e),
                                this.container.setAttribute("dir", e);
                        }
                        constructor(e) {
                            super(e),
                                (this.listenEvents =
                                    "updateToolbar changeStack mousedown mouseup keydown change afterInit readonly afterResize selectionchange changeSelection focus afterSetMode touchstart focus blur"),
                                (this.update = this.j.async.debounce(
                                    this.immediateUpdate,
                                    () => this.j.defaultTimeout
                                )),
                                (this.__tooltip = null),
                                this.initEvents(),
                                (this.__tooltip = r.Ne.make(e));
                        }
                        initEvents() {
                            this.j.e
                                .on(this.listenEvents, this.update)
                                .on("afterSetMode focus", this.immediateUpdate);
                        }
                        hide() {
                            this.container.remove();
                        }
                        show() {
                            this.appendTo(this.j.toolbarContainer);
                        }
                        showInline(e) {
                            throw (0, o.error)(
                                "The method is not implemented for this class."
                            );
                        }
                        build(e, t = null) {
                            const i = this.j.e.fire("beforeToolbarBuild", e);
                            return i && (e = i), super.build(e, t), this;
                        }
                        destruct() {
                            var e;
                            this.isDestructed ||
                                (null === (e = this.__tooltip) ||
                                    void 0 === e ||
                                    e.destruct(),
                                this.j.e
                                    .off(this.listenEvents, this.update)
                                    .off(
                                        "afterSetMode focus",
                                        this.immediateUpdate
                                    ),
                                super.destruct());
                        }
                    };
                    (0, s.gn)(
                        [a.autobind],
                        l.prototype,
                        "immediateUpdate",
                        null
                    ),
                        (l = (0, s.gn)([a.component], l));
                },
                28171(e, t, i) {
                    "use strict";
                    i.d(t, {
                        N() {
                            return c;
                        },
                    });
                    var s = i(52784),
                        o = i(81023),
                        r = i(36257),
                        n = i(97039),
                        a = i(47643),
                        l = i(51663);
                    let c = class e extends o.n {
                        className() {
                            return "ToolbarEditorCollection";
                        }
                        shouldBeDisabled(e) {
                            const t = super.shouldBeDisabled(e);
                            if (void 0 !== t) return t;
                            const i =
                                void 0 === e.control.mode
                                    ? r.MODE_WYSIWYG
                                    : e.control.mode;
                            return !(
                                i === r.MODE_SPLIT || i === this.j.getRealMode()
                            );
                        }
                        shouldBeActive(e) {
                            const t = super.shouldBeActive(e);
                            if (void 0 !== t) return t;
                            const i = this.j.selection
                                ? this.j.s.current()
                                : null;
                            if (!i) return !1;
                            let s;
                            if (e.control.tags) {
                                const t = e.control.tags;
                                if (
                                    ((s = i),
                                    n.i.up(
                                        s,
                                        (e) => {
                                            if (
                                                e &&
                                                -1 !==
                                                    t.indexOf(
                                                        e.nodeName.toLowerCase()
                                                    )
                                            )
                                                return !0;
                                        },
                                        this.j.editor
                                    ))
                                )
                                    return !0;
                            }
                            if (e.control.css) {
                                const t = e.control.css;
                                if (
                                    ((s = i),
                                    n.i.up(
                                        s,
                                        (e) => {
                                            if (e && !n.i.isText(e))
                                                return this.checkActiveStatus(
                                                    t,
                                                    e
                                                );
                                        },
                                        this.j.editor
                                    ))
                                )
                                    return !0;
                            }
                            return !1;
                        }
                        getTarget(e) {
                            return e.target || this.j.s.current() || null;
                        }
                        constructor(e) {
                            super(e),
                                (this.checkActiveStatus = (e, t) => {
                                    let i = 0,
                                        s = 0;
                                    return (
                                        Object.keys(e).forEach((o) => {
                                            const r = e[o];
                                            (0, a.isFunction)(r)
                                                ? r(
                                                      this.j,
                                                      "" + (0, a.css)(t, o)
                                                  ) && (i += 1)
                                                : -1 !==
                                                      r.indexOf(
                                                          "" + (0, a.css)(t, o)
                                                      ) && (i += 1),
                                                (s += 1);
                                        }),
                                        s === i
                                    );
                                }),
                                this.prependInvisibleInput(this.container);
                        }
                        prependInvisibleInput(e) {
                            const t = this.j.create.element("input", {
                                tabIndex: -1,
                                disabled: !0,
                                style: "width: 0; height:0; position: absolute; visibility: hidden;",
                            });
                            n.i.appendChildFirst(e, t);
                        }
                        showInline(e) {
                            this.jodit.e.fire("showInlineToolbar", e);
                        }
                        hide() {
                            this.jodit.e.fire("hidePopup"),
                                super.hide(),
                                this.jodit.e.fire("toggleToolbar");
                        }
                        show() {
                            super.show(), this.jodit.e.fire("toggleToolbar");
                        }
                    };
                    c = (0, s.gn)([l.component], c);
                },
                30446(e, t, i) {
                    "use strict";
                    i.d(t, {
                        R() {
                            return l;
                        },
                        g() {
                            return c;
                        },
                    });
                    var s = i(47643),
                        o = i(81023),
                        r = i(28171),
                        n = i(63328),
                        a = i(67698);
                    function l(e, t) {
                        const i = (0, s.isJoditObject)(e)
                            ? new r.N(e)
                            : new o.n(e);
                        return (
                            e.o.textIcons &&
                                i.container.classList.add("jodit_text_icons"),
                            t && (i.parentElement = t),
                            e.o.toolbarButtonSize &&
                                (i.buttonSize = e.o.toolbarButtonSize),
                            i
                        );
                    }
                    function c(e, t, i = null) {
                        if ((0, s.isFunction)(t.getContent))
                            return new a.c(e, t, i);
                        const o = new n.h(e, t, i);
                        return (
                            (o.state.tabIndex = e.o.allowTabNavigation
                                ? 0
                                : -1),
                            o
                        );
                    }
                },
                23963(e, t, i) {
                    "use strict";
                    i.d(t, {
                        YW() {
                            return n;
                        },
                        ov() {
                            return h;
                        },
                        IL() {
                            return d;
                        },
                    });
                    var s = i(47643),
                        o = i(86673),
                        r = i(97039);
                    o.JO.set("palette", i(81762));
                    const n = (e, t, i) => {
                        const n = "jodit-color-picker",
                            a = (0, s.normalizeColor)(i),
                            l = e.c.div(n),
                            c = e.o.textIcons
                                ? `<span>${e.i18n("palette")}</span>`
                                : o.JO.get("palette"),
                            d = (e) => {
                                const t = [];
                                return (
                                    (0, s.isPlainObject)(e)
                                        ? Object.keys(e).forEach((i) => {
                                              t.push(
                                                  `<div class="${n}__group ${n}__group-${i}">`
                                              ),
                                                  t.push(d(e[i])),
                                                  t.push("</div>");
                                          })
                                        : (0, s.isArray)(e) &&
                                          e.forEach((e) => {
                                              t.push(
                                                  `<span class='${n}__color-item ${
                                                      a === e
                                                          ? n +
                                                            "__color-item_active_true"
                                                          : ""
                                                  }' title="${e}" style="background-color:${e}" data-color="${e}"></span>`
                                              );
                                          }),
                                    t.join("")
                                );
                            };
                        l.appendChild(
                            e.c.fromHTML(
                                `<div class="${n}__groups">${d(
                                    e.o.colors
                                )}</div>`
                            )
                        ),
                            l.appendChild(
                                e.c.fromHTML(
                                    `<div data-ref="extra" class="${n}__extra"></div>`
                                )
                            );
                        const { extra: h } = (0, s.refs)(l);
                        return (
                            e.o.showBrowserColorPicker &&
                                (0, s.hasBrowserColorPicker)() &&
                                (h.appendChild(
                                    e.c.fromHTML(
                                        `<div class="${n}__native">${c}<input type="color" value="#ffffff"/></div>`
                                    )
                                ),
                                e.e.on(l, "change", (e) => {
                                    e.stopPropagation();
                                    const i = e.target;
                                    if (
                                        !i ||
                                        !i.tagName ||
                                        !r.i.isTag(i, "input")
                                    )
                                        return;
                                    const o = i.value || "";
                                    (0, s.isFunction)(t) && t(o),
                                        e.preventDefault();
                                })),
                            e.e.on(l, "mousedown touchend", (i) => {
                                i.stopPropagation(), i.preventDefault();
                                let o = i.target;
                                if (
                                    ((o &&
                                        o.tagName &&
                                        !r.i.isTag(o, "svg") &&
                                        !r.i.isTag(o, "path")) ||
                                        !o.parentNode ||
                                        (o = r.i.closest(
                                            o.parentNode,
                                            "span",
                                            e.editor
                                        )),
                                    !r.i.isTag(o, "span") ||
                                        !o.classList.contains(
                                            n + "__color-item"
                                        ))
                                )
                                    return;
                                const a = (0, s.attr)(o, "-color") || "";
                                t && (0, s.isFunction)(t) && t(a);
                            }),
                            e.e.fire("afterGenerateColorPicker", l, h, t, a),
                            l
                        );
                    };
                    var a = i(27177),
                        l = i(95950),
                        c = i(38886);
                    const d = (e, t, i) => {
                            const r = e.c.div("jodit-tabs"),
                                n = e.c.div("jodit-tabs__wrapper"),
                                d = e.c.div("jodit-tabs__buttons"),
                                h = {},
                                u = [];
                            let p = "",
                                m = 0;
                            r.appendChild(d), r.appendChild(n);
                            const f = (e) => {
                                h[e] &&
                                    (u.forEach((e) => {
                                        e.state.activated = !1;
                                    }),
                                    (0, s.$$)(".jodit-tab", n).forEach((e) => {
                                        e.classList.remove("jodit-tab_active");
                                    }),
                                    (h[e].button.state.activated = !0),
                                    h[e].tab.classList.add("jodit-tab_active"));
                            };
                            if (
                                (t.forEach(
                                    ({ icon: s, name: r, content: g }) => {
                                        const v = e.c.div("jodit-tab"),
                                            b = (0, o.zx)(e, s || r, r);
                                        e.e.on(b.container, "mousedown", (e) =>
                                            e.preventDefault()
                                        ),
                                            p || (p = r),
                                            d.appendChild(b.container),
                                            u.push(b),
                                            b.container.classList.add(
                                                "jodit-tabs__button",
                                                "jodit-tabs__button_columns_" +
                                                    t.length
                                            ),
                                            (0, a.m)(g)
                                                ? v.appendChild(
                                                      e.c.div("jodit-tab_empty")
                                                  )
                                                : v.appendChild(
                                                      l.wA.isInstanceOf(g, o.u1)
                                                          ? g.container
                                                          : g
                                                  ),
                                            n.appendChild(v),
                                            b.onAction(
                                                () => (
                                                    f(r),
                                                    (0, a.m)(g) &&
                                                        !c.i.isElement(g) &&
                                                        g.call(e),
                                                    i && (i.__activeTab = r),
                                                    !1
                                                )
                                            ),
                                            (h[r] = { button: b, tab: v }),
                                            (m += 1);
                                    }
                                ),
                                !m)
                            )
                                return r;
                            if (
                                ((0, s.$$)("a", d).forEach((e) => {
                                    e.style.width = (100 / m).toFixed(10) + "%";
                                }),
                                f(
                                    i && i.__activeTab && h[i.__activeTab]
                                        ? i.__activeTab
                                        : p
                                ),
                                i)
                            ) {
                                let e = i.__activeTab;
                                Object.defineProperty(i, "__activeTab", {
                                    configurable: !0,
                                    enumerable: !1,
                                    get: () => e,
                                    set(t) {
                                        (e = t), f(t);
                                    },
                                });
                            }
                            return r;
                        },
                        h = (e, t, i, n, a = !0) => {
                            let l;
                            const c = [];
                            if (
                                t.upload &&
                                e.o.uploader &&
                                (e.o.uploader.url ||
                                    e.o.uploader.insertImageAsBase64URI)
                            ) {
                                const i = e.c.fromHTML(
                                    `<div class="jodit-drag-and-drop__file-box"><strong>${e.i18n(
                                        a ? "Drop image" : "Drop file"
                                    )}</strong><span><br>${e.i18n(
                                        "or click"
                                    )}</span><input type="file" accept="${
                                        a ? "image/*" : "*"
                                    }" tabindex="-1" dir="auto" multiple=""/></div>`
                                );
                                e.uploader.bind(
                                    i,
                                    (i) => {
                                        const o = (0, s.isFunction)(t.upload)
                                            ? t.upload
                                            : e.o.uploader
                                                  .defaultHandlerSuccess;
                                        (0, s.isFunction)(o) && o.call(e, i),
                                            e.e.fire("closeAllPopups");
                                    },
                                    (t) => {
                                        e.e.fire("errorMessage", t.message),
                                            e.e.fire("closeAllPopups");
                                    }
                                ),
                                    c.push({
                                        icon: "upload",
                                        name: "Upload",
                                        content: i,
                                    });
                            }
                            if (
                                (t.filebrowser &&
                                    (e.o.filebrowser.ajax.url ||
                                        e.o.filebrowser.items.url) &&
                                    c.push({
                                        icon: "folder",
                                        name: "Browse",
                                        content() {
                                            n && n(),
                                                t.filebrowser &&
                                                    e.filebrowser.open(
                                                        t.filebrowser,
                                                        a
                                                    );
                                        },
                                    }),
                                t.url)
                            ) {
                                const n = new o.y3(e, {
                                        type: "submit",
                                        variant: "primary",
                                        text: "Insert",
                                    }),
                                    a = new o.x4(e, [
                                        new o.u3(e, {
                                            required: !0,
                                            label: "URL",
                                            name: "url",
                                            type: "text",
                                            placeholder: "https://",
                                        }),
                                        new o.u3(e, {
                                            name: "text",
                                            label: "Alternative text",
                                        }),
                                        new o.eC(e, [n]),
                                    ]);
                                (l = null),
                                    i &&
                                        !r.i.isText(i) &&
                                        (r.i.isTag(i, "img") ||
                                            (0, s.$$)("img", i).length) &&
                                        ((l =
                                            "IMG" === i.tagName
                                                ? i
                                                : (0, s.$$)("img", i)[0]),
                                        (0, s.val)(
                                            a.container,
                                            "input[name=url]",
                                            (0, s.attr)(l, "src")
                                        ),
                                        (0, s.val)(
                                            a.container,
                                            "input[name=text]",
                                            (0, s.attr)(l, "alt")
                                        ),
                                        (n.state.text = "Update")),
                                    i &&
                                        r.i.isTag(i, "a") &&
                                        ((0, s.val)(
                                            a.container,
                                            "input[name=url]",
                                            (0, s.attr)(i, "href")
                                        ),
                                        (0, s.val)(
                                            a.container,
                                            "input[name=text]",
                                            (0, s.attr)(i, "title")
                                        ),
                                        (n.state.text = "Update")),
                                    a.onSubmit((i) => {
                                        (0, s.isFunction)(t.url) &&
                                            t.url.call(e, i.url, i.text);
                                    }),
                                    c.push({
                                        icon: "link",
                                        name: "URL",
                                        content: a.container,
                                    });
                            }
                            return d(e, c);
                        };
                },
                8039(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            ar() {
                                return s;
                            },
                            cs_cz() {
                                return o;
                            },
                            de() {
                                return r;
                            },
                            es() {
                                return n;
                            },
                            fa() {
                                return a;
                            },
                            fr() {
                                return l;
                            },
                            he() {
                                return c;
                            },
                            hu() {
                                return d;
                            },
                            id() {
                                return h;
                            },
                            it() {
                                return u;
                            },
                            ja() {
                                return p;
                            },
                            ko() {
                                return m;
                            },
                            nl() {
                                return f;
                            },
                            pl() {
                                return g;
                            },
                            pt_br() {
                                return v;
                            },
                            ru() {
                                return b;
                            },
                            tr() {
                                return y;
                            },
                            zh_cn() {
                                return w;
                            },
                            zh_tw() {
                                return k;
                            },
                        });
                    const s = i(64364),
                        o = i(99982),
                        r = i(20746),
                        n = i(37215),
                        a = i(88559),
                        l = i(69346),
                        c = i(6127),
                        d = i(74340),
                        h = i(29999),
                        u = i(52210),
                        p = i(60420),
                        m = i(52096),
                        f = i(32257),
                        g = i(94887),
                        v = i(14704),
                        b = i(65108),
                        y = i(44704),
                        w = i(13100),
                        k = i(59483);
                },
                95584(e, t, i) {
                    "use strict";
                    var s = i(25916);
                    t.Z = [
                        {
                            name: "eye",
                            tooltip: "Open link",
                            exec(e, t) {
                                const i = (0, s.attr)(t, "href");
                                t && i && e.ow.open(i);
                            },
                        },
                        { name: "link", tooltip: "Edit link", icon: "pencil" },
                        "unlink",
                        "brush",
                        "file",
                    ];
                },
                84066(e, t, i) {
                    "use strict";
                    var s = i(77574),
                        o = i(47077),
                        r = i(23963);
                    const n = (e) =>
                        e.args && (0, s.HD)(e.args[0])
                            ? e.args[0].toLowerCase()
                            : "";
                    t.Z = [
                        {
                            name: "brush",
                            popup(e, t, i, n) {
                                if (!(0, s.Zu)(e)) return;
                                const a = e
                                    .getInstance("Table", e.o)
                                    .getAllSelectedCells();
                                if (!a.length) return !1;
                                const l = (t) =>
                                    (0, r.YW)(
                                        e,
                                        (i) => {
                                            a.forEach((e) => {
                                                (0, o.i)(e, t, i);
                                            }),
                                                e.lock(),
                                                e.synchronizeValues(),
                                                n(),
                                                e.unlock();
                                        },
                                        (0, o.i)(a[0], t)
                                    );
                                return (0, r.IL)(e, [
                                    {
                                        name: "Background",
                                        content: l("background-color"),
                                    },
                                    { name: "Text", content: l("color") },
                                    {
                                        name: "Border",
                                        content: l("border-color"),
                                    },
                                ]);
                            },
                            tooltip: "Background",
                        },
                        {
                            name: "valign",
                            list: ["Top", "Middle", "Bottom", "Normal"],
                            childTemplate(e, t, i) {
                                return i;
                            },
                            exec(e, t, { control: i }) {
                                const s = n(i);
                                e.getInstance("Table", e.o)
                                    .getAllSelectedCells()
                                    .forEach((e) => {
                                        (0, o.i)(
                                            e,
                                            "vertical-align",
                                            "normal" === s ? "" : s
                                        );
                                    });
                            },
                            tooltip: "Vertical align",
                        },
                        {
                            name: "splitv",
                            list: {
                                tablesplitv: "Split vertical",
                                tablesplitg: "Split horizontal",
                            },
                            tooltip: "Split",
                        },
                        { name: "align", icon: "left" },
                        "\n",
                        {
                            name: "merge",
                            command: "tablemerge",
                            tooltip: "Merge",
                        },
                        {
                            name: "addcolumn",
                            list: {
                                tableaddcolumnbefore: "Insert column before",
                                tableaddcolumnafter: "Insert column after",
                            },
                            exec(e, t, { control: i }) {
                                if (!(0, s.Zu)(e)) return;
                                const o = n(i);
                                e.execCommand(o, !1, t);
                            },
                            tooltip: "Add column",
                        },
                        {
                            name: "addrow",
                            list: {
                                tableaddrowbefore: "Insert row above",
                                tableaddrowafter: "Insert row below",
                            },
                            exec(e, t, { control: i }) {
                                if (!(0, s.Zu)(e)) return;
                                const o = n(i);
                                e.execCommand(o, !1, t);
                            },
                            tooltip: "Add row",
                        },
                        {
                            name: "delete",
                            icon: "bin",
                            list: {
                                tablebin: "Delete table",
                                tablebinrow: "Delete row",
                                tablebincolumn: "Delete column",
                                tableempty: "Empty cell",
                            },
                            exec(e, t, { control: i }) {
                                if (!(0, s.Zu)(e)) return;
                                const o = n(i);
                                e.execCommand(o, !1, t), e.e.fire("hidePopup");
                            },
                            tooltip: "Delete",
                        },
                    ];
                },
                3298(e, t, i) {
                    "use strict";
                    var s = i(25930);
                    t.Z = [
                        {
                            name: "bin",
                            tooltip: "Delete",
                            exec(e, t) {
                                t && e.s.removeNode(t);
                            },
                        },
                        s.A,
                    ];
                },
                25930(e, t, i) {
                    "use strict";
                    i.d(t, {
                        A() {
                            return a;
                        },
                    });
                    var s = i(97039),
                        o = i(20405),
                        r = i(47077),
                        n = i(99705);
                    const a = {
                        name: "left",
                        childTemplate(e, t, i) {
                            return i;
                        },
                        list: ["Left", "Right", "Center", "Normal"],
                        exec(e, t, { control: i }) {
                            if (!s.i.isTag(t, ["img", "jodit", "jodit-media"]))
                                return;
                            const r =
                                i.args && (0, o.H)(i.args[0])
                                    ? i.args[0].toLowerCase()
                                    : "";
                            if (!r) return !1;
                            (0, n.zC)(t, r),
                                s.i.isTag(t, ["jodit", "jodit-media"]) &&
                                    t.firstElementChild &&
                                    (0, n.zC)(t.firstElementChild, r),
                                e.synchronizeValues(),
                                e.e.fire("recalcPositionPopup");
                        },
                        tooltip: "Horizontal align",
                    };
                    t.Z = [
                        {
                            name: "delete",
                            icon: "bin",
                            tooltip: "Delete",
                            exec(e, t) {
                                t && e.s.removeNode(t);
                            },
                        },
                        {
                            name: "pencil",
                            exec(e, t) {
                                "img" === t.tagName.toLowerCase() &&
                                    e.e.fire("openImageProperties", t);
                            },
                            tooltip: "Edit",
                        },
                        {
                            name: "valign",
                            list: ["Top", "Middle", "Bottom", "Normal"],
                            tooltip: "Vertical align",
                            exec(e, t, { control: i }) {
                                if (!s.i.isTag(t, "img")) return;
                                const n =
                                    i.args && (0, o.H)(i.args[0])
                                        ? i.args[0].toLowerCase()
                                        : "";
                                if (!n) return !1;
                                (0, r.i)(
                                    t,
                                    "vertical-align",
                                    "normal" === n ? "" : n
                                ),
                                    e.e.fire("recalcPositionPopup");
                            },
                        },
                        a,
                    ];
                },
                88642(e, t) {
                    "use strict";
                    t.Z = [
                        "bold",
                        "italic",
                        "|",
                        "ul",
                        "ol",
                        "eraser",
                        "|",
                        "fontsize",
                        "brush",
                        "paragraph",
                        "---",
                        "image",
                        "table",
                        "\n",
                        "link",
                        "|",
                        "align",
                        "|",
                        "undo",
                        "redo",
                        "|",
                        "copyformat",
                        "fullsize",
                        "---",
                        "dots",
                    ];
                },
                5803(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            ar() {
                                return s;
                            },
                            cs_cz() {
                                return o;
                            },
                            de() {
                                return r;
                            },
                            es() {
                                return n;
                            },
                            fa() {
                                return a;
                            },
                            fr() {
                                return l;
                            },
                            he() {
                                return c;
                            },
                            hu() {
                                return d;
                            },
                            id() {
                                return h;
                            },
                            it() {
                                return u;
                            },
                            ja() {
                                return p;
                            },
                            ko() {
                                return m;
                            },
                            nl() {
                                return f;
                            },
                            pl() {
                                return g;
                            },
                            pt_br() {
                                return v;
                            },
                            ru() {
                                return b;
                            },
                            tr() {
                                return y;
                            },
                            zh_cn() {
                                return w;
                            },
                            zh_tw() {
                                return k;
                            },
                        });
                    const s = i(7713),
                        o = i(79457),
                        r = i(95551),
                        n = i(86184),
                        a = i(43418),
                        l = i(65643),
                        c = i(96250),
                        d = i(8754),
                        h = i(99271),
                        u = i(26080),
                        p = i(23267),
                        m = i(70074),
                        f = i(51419),
                        g = i(38179),
                        v = i(61707),
                        b = i(15035),
                        y = i(28048),
                        w = i(72647),
                        k = i(65107);
                },
                42214(e, t, i) {
                    "use strict";
                    i.d(t, {
                        L() {
                            return h;
                        },
                    });
                    var s = i(52784),
                        o = i(10818),
                        r = i(47643),
                        n = i(36257),
                        a = i(51663),
                        l = i(29527),
                        c = i(78855),
                        d = i(43854);
                    (d.D.prototype.askBeforePasteFromWord = !0),
                        (d.D.prototype.processPasteFromWord = !0),
                        (d.D.prototype.defaultActionOnPasteFromWord = null),
                        (d.D.prototype.pasteFromWordActionList = [
                            { value: n.INSERT_AS_HTML, text: "Keep" },
                            { value: n.INSERT_AS_TEXT, text: "Clean" },
                            {
                                value: n.INSERT_ONLY_TEXT,
                                text: "Insert only Text",
                            },
                        ]);
                    class h extends o.S {
                        constructor() {
                            super(...arguments), (this.requires = ["paste"]);
                        }
                        afterInit(e) {}
                        beforeDestruct(e) {}
                        processWordHTML(e, t, i) {
                            const { j: s } = this,
                                {
                                    processPasteFromWord: o,
                                    askBeforePasteFromWord: n,
                                    defaultActionOnPasteFromWord: a,
                                    defaultActionOnPaste: c,
                                    pasteFromWordActionList: d,
                                } = s.o;
                            return !(
                                !o ||
                                !(0, r.isHtmlFromWord)(t) ||
                                (n
                                    ? (0, l.$t)(
                                          s,
                                          "The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?",
                                          "Word Paste Detected",
                                          (s) => {
                                              this.insertFromWordByType(
                                                  e,
                                                  t,
                                                  s,
                                                  i
                                              );
                                          },
                                          d
                                      )
                                    : this.insertFromWordByType(
                                          e,
                                          t,
                                          a || c,
                                          i
                                      ),
                                0)
                            );
                        }
                        insertFromWordByType(e, t, i, s) {
                            var o;
                            switch (i) {
                                case n.INSERT_AS_HTML: {
                                    t = (0, r.applyStyles)(t);
                                    const e =
                                        null === (o = this.j.events) ||
                                        void 0 === o
                                            ? void 0
                                            : o.fire("beautifyHTML", t);
                                    (0, r.isString)(e) && (t = e);
                                    break;
                                }
                                case n.INSERT_AS_TEXT:
                                    t = (0, r.cleanFromWord)(t);
                                    break;
                                case n.INSERT_ONLY_TEXT:
                                    t = (0, r.stripTags)(
                                        (0, r.cleanFromWord)(t)
                                    );
                            }
                            (0, l.kU)(e, this.j, t);
                        }
                    }
                    (0, s.gn)(
                        [(0, a.watch)(":processHTML")],
                        h.prototype,
                        "processWordHTML",
                        null
                    ),
                        c.pw.add("pasteFromWord", h);
                },
                29527(e, t, i) {
                    "use strict";
                    i.d(t, {
                        $t() {
                            return c;
                        },
                        ZH() {
                            return l;
                        },
                        kU() {
                            return a;
                        },
                    });
                    var s = i(77574),
                        o = i(38886),
                        r = i(36257),
                        n = i(4846);
                    function a(e, t, i) {
                        if (t.isInDestruct) return;
                        ((e) => !(!e || "drop" !== e.type))(e) &&
                            t.s.insertCursorAtPoint(e.clientX, e.clientY);
                        const r = t.e.fire("beforePasteInsert", i);
                        !(0, s.nj)(r) &&
                            ((0, s.HD)(r) || (0, s.hj)(r) || o.i.isNode(r)) &&
                            (i = r),
                            (0, s.HD)(i) &&
                                (i = ((e) => {
                                    const t = (e = e.replace(
                                        /<meta[^>]+?>/g,
                                        ""
                                    )).search(/<!--StartFragment-->/i);
                                    -1 !== t && (e = e.substring(t + 20));
                                    const i = e.search(/<!--EndFragment-->/i);
                                    return (
                                        -1 !== i && (e = e.substring(0, i)), e
                                    );
                                })(i)),
                            t.s.insertHTML(i);
                    }
                    function l(e) {
                        const t = e.types;
                        let i = "";
                        if (
                            (0, s.kJ)(t) ||
                            "[object DOMStringList]" === {}.toString.call(t)
                        )
                            for (let e = 0; t.length > e; e += 1)
                                i += t[e] + ";";
                        else i = (t || r.TEXT_PLAIN) + ";";
                        return i;
                    }
                    function c(e, t, i, s, o) {
                        if (
                            !1 === e.e.fire("beforeOpenPasteDialog", t, i, s, o)
                        )
                            return;
                        const r = e.confirm(
                                `<div style="word-break: normal; white-space: normal">${e.i18n(
                                    t
                                )}</div>`,
                                e.i18n(i)
                            ),
                            a = o.map(({ text: t, value: i }) =>
                                (0, n.zx)(e, {
                                    text: t,
                                    name: t.toLowerCase(),
                                    tabIndex: 0,
                                }).onAction(() => {
                                    r.close(), s(i);
                                })
                            );
                        r.e.one(r, "afterClose", () => {
                            e.s.isFocused() || e.s.focus();
                        });
                        const l = (0, n.zx)(e, {
                            text: "Cancel",
                            tabIndex: 0,
                        }).onAction(() => {
                            r.close();
                        });
                        return (
                            r.setFooter([...a, l]),
                            a[0].focus(),
                            (a[0].state.variant = "primary"),
                            e.e.fire("afterOpenPasteDialog", r, t, i, s, o),
                            r
                        );
                    }
                },
                93549(e, t, i) {
                    "use strict";
                    i.d(t, {
                        u() {
                            return p;
                        },
                    });
                    var s = i(52784),
                        o = i(36257),
                        r = i(69403),
                        n = i(47077),
                        a = i(98768),
                        l = i(38886),
                        c = i(27056),
                        d = i(51663),
                        h = i(78855),
                        u = i(43854);
                    function p(e) {
                        var t;
                        if (!e.firstChild) return !0;
                        const i = e.firstChild;
                        if (
                            o.INSEPARABLE_TAGS.has(
                                null === (t = i.nodeName) || void 0 === t
                                    ? void 0
                                    : t.toLowerCase()
                            ) ||
                            /^(TABLE)$/i.test(i.nodeName)
                        )
                            return !1;
                        const s = l.i.next(
                            i,
                            (e) => e && !l.i.isEmptyTextNode(e),
                            e
                        );
                        return l.i.isText(i) && !s
                            ? l.i.isEmptyTextNode(i)
                            : !s &&
                                  l.i.each(
                                      i,
                                      (e) =>
                                          !l.i.isTag(e, ["ul", "li", "ol"]) &&
                                          (l.i.isEmpty(e) || l.i.isTag(e, "br"))
                                  );
                    }
                    (u.D.prototype.showPlaceholder = !0),
                        (u.D.prototype.placeholder = "Type something"),
                        (u.D.prototype.useInputsPlaceholder = !0);
                    class m extends c.S {
                        constructor() {
                            super(...arguments),
                                (this.addNativeListeners = () => {
                                    this.j.e
                                        .off(
                                            this.j.editor,
                                            "input.placeholder keydown.placeholder"
                                        )
                                        .on(
                                            this.j.editor,
                                            "input.placeholder keydown.placeholder",
                                            this.toggle
                                        );
                                }),
                                (this.addEvents = () => {
                                    const e = this.j;
                                    e.o.useInputsPlaceholder &&
                                        e.element.hasAttribute("placeholder") &&
                                        (this.placeholderElm.innerHTML =
                                            (0, r.Lj)(
                                                e.element,
                                                "placeholder"
                                            ) || ""),
                                        e.e.fire(
                                            "placeholder",
                                            this.placeholderElm.innerHTML
                                        ),
                                        e.e
                                            .off(".placeholder")
                                            .on(
                                                "changePlace.placeholder",
                                                this.addNativeListeners
                                            )
                                            .on(
                                                "change.placeholder focus.placeholder keyup.placeholder mouseup.placeholder keydown.placeholder mousedown.placeholder afterSetMode.placeholder changePlace.placeholder",
                                                this.toggle
                                            )
                                            .on(window, "load", this.toggle),
                                        this.addNativeListeners(),
                                        this.toggle();
                                });
                        }
                        afterInit(e) {
                            e.o.showPlaceholder &&
                                ((this.placeholderElm = e.c.fromHTML(
                                    `<span data-ref="placeholder" style="display: none;" class="jodit-placeholder">${e.i18n(
                                        e.o.placeholder
                                    )}</span>`
                                )),
                                "rtl" === e.o.direction &&
                                    ((this.placeholderElm.style.right = "0px"),
                                    (this.placeholderElm.style.direction =
                                        "rtl")),
                                e.e
                                    .on("readonly", (e) => {
                                        e ? this.hide() : this.toggle();
                                    })
                                    .on("changePlace", this.addEvents),
                                this.addEvents());
                        }
                        show() {
                            const e = this.j;
                            if (e.o.readonly) return;
                            let t = 0,
                                i = 0;
                            const s = e.s.current(),
                                o =
                                    (s &&
                                        l.i.closest(
                                            s,
                                            l.i.isBlock,
                                            e.editor
                                        )) ||
                                    e.editor,
                                r = e.ew.getComputedStyle(o),
                                c = e.ew.getComputedStyle(e.editor);
                            e.workplace.appendChild(this.placeholderElm);
                            const { firstChild: d } = e.editor;
                            if (l.i.isElement(d) && !(0, a._)(d)) {
                                const s = e.ew.getComputedStyle(d);
                                (t = parseInt(
                                    s.getPropertyValue("margin-top"),
                                    10
                                )),
                                    (i = parseInt(
                                        s.getPropertyValue("margin-left"),
                                        10
                                    )),
                                    (this.placeholderElm.style.fontSize =
                                        parseInt(
                                            s.getPropertyValue("font-size"),
                                            10
                                        ) + "px"),
                                    (this.placeholderElm.style.lineHeight =
                                        s.getPropertyValue("line-height"));
                            } else
                                (this.placeholderElm.style.fontSize =
                                    parseInt(
                                        r.getPropertyValue("font-size"),
                                        10
                                    ) + "px"),
                                    (this.placeholderElm.style.lineHeight =
                                        r.getPropertyValue("line-height"));
                            (0, n.i)(this.placeholderElm, {
                                display: "block",
                                textAlign: r.getPropertyValue("text-align"),
                                paddingTop: parseInt(c.paddingTop, 10) + "px",
                                paddingLeft: parseInt(c.paddingLeft, 10) + "px",
                                paddingRight:
                                    parseInt(c.paddingRight, 10) + "px",
                                marginTop: Math.max(
                                    parseInt(
                                        r.getPropertyValue("margin-top"),
                                        10
                                    ),
                                    t
                                ),
                                marginLeft: Math.max(
                                    parseInt(
                                        r.getPropertyValue("margin-left"),
                                        10
                                    ),
                                    i
                                ),
                            });
                        }
                        hide() {
                            l.i.safeRemove(this.placeholderElm);
                        }
                        toggle() {
                            const e = this.j;
                            e.editor &&
                                !e.isInDestruct &&
                                (e.getRealMode() === o.MODE_WYSIWYG &&
                                p(e.editor)
                                    ? this.show()
                                    : this.hide());
                        }
                        beforeDestruct(e) {
                            this.hide(),
                                e.e
                                    .off(".placeholder")
                                    .off(window, "load", this.toggle);
                        }
                    }
                    (0, s.gn)(
                        [(0, d.debounce)((e) => e.defaultTimeout / 10, !0)],
                        m.prototype,
                        "toggle",
                        null
                    ),
                        h.pw.add("placeholder", m);
                },
                54152(e, t, i) {
                    "use strict";
                    i.d(t, {
                        a() {
                            return o;
                        },
                    });
                    var s = i(21305);
                    function o(e) {
                        const t = (e, t = e.ownerDocument.styleSheets) =>
                            (0, s.q)(t)
                                .map((e) => {
                                    try {
                                        return (0, s.q)(e.cssRules);
                                    } catch (e) {}
                                    return [];
                                })
                                .flat()
                                .filter((t) => {
                                    try {
                                        return !(
                                            !t || !e.matches(t.selectorText)
                                        );
                                    } catch (e) {}
                                    return !1;
                                });
                        class i {
                            constructor(i, s, o) {
                                this.css = {};
                                const r = o || {},
                                    n = (t) => {
                                        const i = t.selectorText
                                            .split(",")
                                            .map((e) => e.trim())
                                            .sort()
                                            .join(",");
                                        0 == !!this.css[i] &&
                                            (this.css[i] = {});
                                        const s =
                                            t.style.cssText.split(
                                                /;(?![A-Za-z0-9])/
                                            );
                                        for (let t = 0; s.length > t; t++) {
                                            if (!s[t]) continue;
                                            const o = s[t].split(":");
                                            (o[0] = o[0].trim()),
                                                (o[1] = o[1].trim()),
                                                (this.css[i][o[0]] =
                                                    o[1].replace(
                                                        /var\(([^)]+)\)/g,
                                                        (t, i) => {
                                                            const [s, o] =
                                                                i.split(",");
                                                            return (
                                                                e.ew
                                                                    .getComputedStyle(
                                                                        e.editor
                                                                    )
                                                                    .getPropertyValue(
                                                                        s.trim()
                                                                    ) ||
                                                                o ||
                                                                t
                                                            ).trim();
                                                        }
                                                    ));
                                        }
                                    };
                                (() => {
                                    const o = i.innerHeight,
                                        a = s.createTreeWalker(
                                            e.editor,
                                            NodeFilter.SHOW_ELEMENT,
                                            () => NodeFilter.FILTER_ACCEPT
                                        );
                                    for (; a.nextNode(); ) {
                                        const e = a.currentNode;
                                        if (
                                            o > e.getBoundingClientRect().top ||
                                            r.scanFullPage
                                        ) {
                                            const i = t(e);
                                            if (i)
                                                for (
                                                    let e = 0;
                                                    i.length > e;
                                                    e++
                                                )
                                                    n(i[e]);
                                        }
                                    }
                                })();
                            }
                            generateCSS() {
                                let e = "";
                                for (const t in this.css)
                                    if (!/:not\(/.test(t)) {
                                        e += t + " { ";
                                        for (const i in this.css[t])
                                            e +=
                                                i +
                                                ": " +
                                                this.css[t][i] +
                                                "; ";
                                        e += "}\n";
                                    }
                                return e;
                            }
                        }
                        try {
                            return new i(e.ew, e.ed, {
                                scanFullPage: !0,
                            }).generateCSS();
                        } catch (e) {}
                        return "";
                    }
                },
                33589(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            ar() {
                                return s;
                            },
                            cs_cz() {
                                return o;
                            },
                            de() {
                                return r;
                            },
                            es() {
                                return n;
                            },
                            fa() {
                                return a;
                            },
                            fr() {
                                return l;
                            },
                            he() {
                                return c;
                            },
                            hu() {
                                return d;
                            },
                            id() {
                                return h;
                            },
                            it() {
                                return u;
                            },
                            ja() {
                                return p;
                            },
                            ko() {
                                return m;
                            },
                            nl() {
                                return f;
                            },
                            pl() {
                                return g;
                            },
                            pt_br() {
                                return v;
                            },
                            ru() {
                                return b;
                            },
                            tr() {
                                return y;
                            },
                            zh_cn() {
                                return w;
                            },
                            zh_tw() {
                                return k;
                            },
                        });
                    const s = i(97871),
                        o = i(30689),
                        r = i(80242),
                        n = i(18338),
                        a = i(30402),
                        l = i(64941),
                        c = i(58543),
                        d = i(63504),
                        h = i(44927),
                        u = i(79211),
                        p = i(8903),
                        m = i(68537),
                        f = i(91597),
                        g = i(52608),
                        v = i(51529),
                        b = i(72924),
                        y = i(19366),
                        w = i(54398),
                        k = i(84052);
                },
                87815(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            ar() {
                                return s;
                            },
                            cs_cz() {
                                return o;
                            },
                            de() {
                                return r;
                            },
                            es() {
                                return n;
                            },
                            fa() {
                                return a;
                            },
                            fr() {
                                return l;
                            },
                            he() {
                                return c;
                            },
                            hu() {
                                return d;
                            },
                            id() {
                                return h;
                            },
                            it() {
                                return u;
                            },
                            ja() {
                                return p;
                            },
                            ko() {
                                return m;
                            },
                            nl() {
                                return f;
                            },
                            pl() {
                                return g;
                            },
                            pt_br() {
                                return v;
                            },
                            ru() {
                                return b;
                            },
                            tr() {
                                return y;
                            },
                            zh_cn() {
                                return w;
                            },
                            zh_tw() {
                                return k;
                            },
                        });
                    const s = i(54942),
                        o = i(91982),
                        r = i(67793),
                        n = i(73246),
                        a = i(83233),
                        l = i(40695),
                        c = i(18732),
                        d = i(14389),
                        h = i(49571),
                        u = i(59462),
                        p = i(53146),
                        m = i(70124),
                        f = i(62202),
                        g = i(56803),
                        v = i(17431),
                        b = i(14556),
                        y = i(87539),
                        w = i(34929),
                        k = i(47996);
                },
                1120(e, t, i) {
                    "use strict";
                    i.r(t),
                        i.d(t, {
                            Jodit() {
                                return Ci;
                            },
                        });
                    var s = {};
                    i.r(s),
                        i.d(s, {
                            angle_down() {
                                return z;
                            },
                            angle_left() {
                                return T;
                            },
                            angle_right() {
                                return I;
                            },
                            angle_up() {
                                return L;
                            },
                            bin() {
                                return M;
                            },
                            cancel() {
                                return A;
                            },
                            center() {
                                return D;
                            },
                            check() {
                                return P;
                            },
                            chevron() {
                                return N;
                            },
                            dots() {
                                return R;
                            },
                            eye() {
                                return q;
                            },
                            file() {
                                return B;
                            },
                            folder() {
                                return O;
                            },
                            info_circle() {
                                return H;
                            },
                            left() {
                                return F;
                            },
                            lock() {
                                return V;
                            },
                            ok() {
                                return W;
                            },
                            pencil() {
                                return $;
                            },
                            plus() {
                                return U;
                            },
                            resize_handler() {
                                return Y;
                            },
                            right() {
                                return G;
                            },
                            save() {
                                return K;
                            },
                            settings() {
                                return J;
                            },
                            unlock() {
                                return X;
                            },
                            update() {
                                return Z;
                            },
                            upload() {
                                return Q;
                            },
                            valign() {
                                return ee;
                            },
                        });
                    var o = {};
                    i.r(o),
                        i.d(o, {
                            allowAttributes() {
                                return je;
                            },
                            fillEmptyParagraph() {
                                return ze;
                            },
                            removeEmptyTextNode() {
                                return Ie;
                            },
                            removeInvTextNodes() {
                                return Le;
                            },
                            replaceOldTags() {
                                return _e;
                            },
                            sanitizeAttributes() {
                                return Me;
                            },
                            tryRemoveNode() {
                                return Te;
                            },
                        });
                    var r = {};
                    i.r(r),
                        i.d(r, {
                            checkBlockNesting() {
                                return pi;
                            },
                        });
                    var n = {};
                    i.r(n),
                        i.d(n, {
                            removeExtraBr() {
                                return mi;
                            },
                        });
                    var a = {};
                    i.r(a),
                        i.d(a, {
                            license() {
                                return wi.V;
                            },
                            poweredByJodit() {
                                return ki;
                            },
                        });
                    var l,
                        c = i(52784),
                        d = i(43854),
                        h = i(36257),
                        u = i(6293),
                        p = i(47643),
                        m = i(50372),
                        f = i(78855),
                        g = i(51663),
                        v = i(78930),
                        b = i(67106);
                    const y = "data-jodit-default-style-display",
                        w = "data-jodit-default-classes";
                    let Jodit = (l = class Jodit extends u.ViewWithToolbar {
                        className() {
                            return "Jodit";
                        }
                        waitForReady() {
                            return this.isReady
                                ? Promise.resolve(this)
                                : this.async.promise((e) => {
                                      this.hookStatus("ready", () => e(this));
                                  });
                        }
                        static get ready() {
                            return new Promise((e) => {
                                f.TB.on("oditready", e);
                            });
                        }
                        get text() {
                            if (this.editor) return this.editor.innerText || "";
                            const e = this.createInside.div();
                            return (
                                (e.innerHTML = this.getElementValue()),
                                e.innerText || ""
                            );
                        }
                        get defaultTimeout() {
                            return (0, p.isNumber)(this.o.defaultTimeout)
                                ? this.o.defaultTimeout
                                : d.D.defaultOptions.defaultTimeout;
                        }
                        static atom(e) {
                            return (0, p.markAsAtomic)(e);
                        }
                        static make(e, t) {
                            return new this(e, t);
                        }
                        static isJoditAssigned(e) {
                            return (
                                e &&
                                (0, p.isJoditObject)(e.component) &&
                                !e.component.isInDestruct
                            );
                        }
                        static get defaultOptions() {
                            return d.D.defaultOptions;
                        }
                        __setPlaceField(e, t) {
                            this.currentPlace ||
                                ((this.currentPlace = {}),
                                (this.places = [this.currentPlace])),
                                (this.currentPlace[e] = t);
                        }
                        get element() {
                            return this.currentPlace.element;
                        }
                        get editor() {
                            return this.currentPlace.editor;
                        }
                        set editor(e) {
                            this.__setPlaceField("editor", e);
                        }
                        get container() {
                            return this.currentPlace.container;
                        }
                        set container(e) {
                            this.__setPlaceField("container", e);
                        }
                        get workplace() {
                            return this.currentPlace.workplace;
                        }
                        get statusbar() {
                            return this.currentPlace.statusbar;
                        }
                        get iframe() {
                            return this.currentPlace.iframe;
                        }
                        set iframe(e) {
                            this.__setPlaceField("iframe", e);
                        }
                        get history() {
                            return this.currentPlace.history;
                        }
                        get observer() {
                            return this.history;
                        }
                        get editorWindow() {
                            return this.currentPlace.editorWindow;
                        }
                        set editorWindow(e) {
                            this.__setPlaceField("editorWindow", e);
                        }
                        get ew() {
                            return this.editorWindow;
                        }
                        get editorDocument() {
                            return this.currentPlace.editorWindow.document;
                        }
                        get ed() {
                            return this.editorDocument;
                        }
                        get options() {
                            return this.currentPlace.options;
                        }
                        set options(e) {
                            this.__setPlaceField("options", e);
                        }
                        get s() {
                            return this.selection;
                        }
                        get uploader() {
                            return this.getInstance(
                                "Uploader",
                                this.o.uploader
                            );
                        }
                        get filebrowser() {
                            const e = this,
                                t = (0, p.ConfigProto)(
                                    {
                                        defaultTimeout: e.defaultTimeout,
                                        uploader: e.o.uploader,
                                        language: e.o.language,
                                        license: e.o.license,
                                        theme: e.o.theme,
                                        shadowRoot: e.o.shadowRoot,
                                        defaultCallback(t) {
                                            t.files &&
                                                t.files.length &&
                                                t.files.forEach((i, s) => {
                                                    const o = t.baseurl + i;
                                                    t.isImages && t.isImages[s]
                                                        ? e.s.insertImage(
                                                              o,
                                                              null,
                                                              e.o
                                                                  .imageDefaultWidth
                                                          )
                                                        : e.s.insertNode(
                                                              e.createInside.fromHTML(
                                                                  `<a href='${o}' title='${o}'>${o}</a>`
                                                              )
                                                          );
                                                });
                                        },
                                    },
                                    this.o.filebrowser
                                );
                            return e.getInstance("FileBrowser", t);
                        }
                        get mode() {
                            return this.__mode;
                        }
                        set mode(e) {
                            this.setMode(e);
                        }
                        getNativeEditorValue() {
                            const e = this.e.fire("beforeGetNativeEditorValue");
                            return (0, p.isString)(e)
                                ? e
                                : this.editor
                                ? this.editor.innerHTML
                                : this.getElementValue();
                        }
                        setNativeEditorValue(e) {
                            const t = { value: e };
                            this.e.fire("beforeSetNativeEditorValue", t) ||
                                (this.editor &&
                                    (this.editor.innerHTML = t.value));
                        }
                        get value() {
                            return this.getEditorValue();
                        }
                        set value(e) {
                            this.setEditorValue(e),
                                this.history.__processChanges();
                        }
                        synchronizeValues() {
                            this.__imdSynchronizeValues();
                        }
                        __imdSynchronizeValues() {
                            this.setEditorValue();
                        }
                        getEditorValue(e = !0, t) {
                            let i;
                            if (
                                ((i = this.e.fire(
                                    "beforeGetValueFromEditor",
                                    t
                                )),
                                void 0 !== i)
                            )
                                return i;
                            (i = this.getNativeEditorValue().replace(
                                h.INVISIBLE_SPACE_REG_EXP(),
                                ""
                            )),
                                e &&
                                    (i = i.replace(
                                        /<span[^>]+id="jodit-selection_marker_[^>]+><\/span>/g,
                                        ""
                                    )),
                                "<br>" === i && (i = "");
                            const s = { value: i };
                            return (
                                this.e.fire("afterGetValueFromEditor", s, t),
                                s.value
                            );
                        }
                        setEditorValue(e) {
                            const t = this.e.fire("beforeSetValueToEditor", e);
                            if (!1 === t) return;
                            if (((0, p.isString)(t) && (e = t), !this.editor))
                                return void (
                                    void 0 !== e && this.__setElementValue(e)
                                );
                            if (!(0, p.isString)(e) && !(0, p.isVoid)(e))
                                throw (0, p.error)("value must be string");
                            (0, p.isVoid)(e) ||
                                this.getNativeEditorValue() === e ||
                                this.setNativeEditorValue(e),
                                this.e.fire("postProcessSetEditorValue");
                            const i = this.getElementValue(),
                                s = this.getEditorValue();
                            if (
                                !this.__isSilentChange &&
                                i !== s &&
                                h.SAFE_COUNT_CHANGE_CALL >
                                    this.__callChangeCount
                            ) {
                                this.__setElementValue(s),
                                    (this.__callChangeCount += 1);
                                try {
                                    this.history.__upTick(),
                                        this.e.fire("change", s, i),
                                        this.e.fire(
                                            this.history,
                                            "change",
                                            s,
                                            i
                                        );
                                } finally {
                                    this.__callChangeCount = 0;
                                }
                            }
                        }
                        updateElementValue() {
                            this.__setElementValue(this.getEditorValue());
                        }
                        getElementValue() {
                            return void 0 !== this.element.value
                                ? this.element.value
                                : this.element.innerHTML;
                        }
                        setElementValue(e) {
                            const t = this.getElementValue();
                            return (
                                (void 0 === e ||
                                    ((0, p.isString)(e) && e !== t)) &&
                                    (null != e || (e = t),
                                    e !== this.getEditorValue() &&
                                        this.setEditorValue(e)),
                                this.__setElementValue(e)
                            );
                        }
                        __setElementValue(e) {
                            if (!(0, p.isString)(e))
                                throw (0, p.error)("value must be string");
                            if (
                                this.element !== this.container &&
                                e !== this.getElementValue()
                            ) {
                                const t = { value: e },
                                    i = this.e.fire("beforeSetElementValue", t);
                                (0, p.callPromise)(i, () => {
                                    void 0 !== this.element.value
                                        ? (this.element.value = t.value)
                                        : (this.element.innerHTML = t.value),
                                        this.e.fire("afterSetElementValue", t);
                                });
                            }
                        }
                        registerCommand(e, t, i) {
                            const s = e.toLowerCase();
                            let o = this.commands.get(s);
                            if (
                                (void 0 === o &&
                                    ((o = []), this.commands.set(s, o)),
                                o.push(t),
                                !(0, p.isFunction)(t))
                            ) {
                                const o =
                                    this.o.commandToHotkeys[s] ||
                                    this.o.commandToHotkeys[e] ||
                                    t.hotkeys;
                                o &&
                                    this.registerHotkeyToCommand(
                                        o,
                                        s,
                                        null == i ? void 0 : i.stopPropagation
                                    );
                            }
                            return this;
                        }
                        registerHotkeyToCommand(e, t, i = !0) {
                            const s = (0, p.asArray)(e)
                                .map(p.normalizeKeyAliases)
                                .map((e) => e + ".hotkey")
                                .join(" ");
                            this.e
                                .off(s)
                                .on(
                                    s,
                                    (e, s) => (
                                        s && (s.shouldStop = null == i || i),
                                        this.execCommand(t)
                                    )
                                );
                        }
                        execCommand(e, t, i, ...s) {
                            if (
                                (this.s.isFocused() || this.s.focus(),
                                this.o.readonly &&
                                    !this.o.allowCommandsInReadOnly.includes(e))
                            )
                                return;
                            let o;
                            if (
                                ((e = e.toLowerCase()),
                                (o = this.e.fire(
                                    "beforeCommand",
                                    e,
                                    t,
                                    i,
                                    ...s
                                )),
                                !1 !== o &&
                                    (o = this.__execCustomCommands(
                                        e,
                                        t,
                                        i,
                                        ...s
                                    )),
                                !1 !== o)
                            )
                                if ((this.s.focus(), "selectall" === e))
                                    this.s.select(this.editor, !0),
                                        this.s.expandSelection();
                                else
                                    try {
                                        o = this.nativeExecCommand(e, t, i);
                                    } catch (e) {}
                            return (
                                this.e.fire("afterCommand", e, t, i),
                                this.setEditorValue(),
                                o
                            );
                        }
                        nativeExecCommand(e, t, i) {
                            this.__isSilentChange = !0;
                            try {
                                return this.ed.execCommand(e, t, i);
                            } finally {
                                this.__isSilentChange = !1;
                            }
                        }
                        __execCustomCommands(e, t, i, ...s) {
                            e = e.toLowerCase();
                            const o = this.commands.get(e);
                            if (void 0 !== o) {
                                let r;
                                return (
                                    o.forEach((o) => {
                                        let n;
                                        n = (0, p.isFunction)(o) ? o : o.exec;
                                        const a = n.call(this, e, t, i, ...s);
                                        void 0 !== a && (r = a);
                                    }),
                                    r
                                );
                            }
                        }
                        lock(e = "any") {
                            return (
                                !!super.lock(e) &&
                                ((this.__selectionLocked = this.s.save()),
                                this.s.clear(),
                                this.editor.classList.add("jodit_lock"),
                                this.e.fire("lock", !0),
                                !0)
                            );
                        }
                        unlock() {
                            return (
                                !!super.unlock() &&
                                (this.editor.classList.remove("jodit_lock"),
                                this.__selectionLocked && this.s.restore(),
                                this.e.fire("lock", !1),
                                !0)
                            );
                        }
                        getMode() {
                            return this.mode;
                        }
                        isEditorMode() {
                            return this.getRealMode() === h.MODE_WYSIWYG;
                        }
                        getRealMode() {
                            if (this.getMode() !== h.MODE_SPLIT)
                                return this.getMode();
                            const e = this.od.activeElement;
                            return e &&
                                (e === this.iframe ||
                                    u.Dom.isOrContains(this.editor, e) ||
                                    u.Dom.isOrContains(
                                        this.toolbar.container,
                                        e
                                    ))
                                ? h.MODE_WYSIWYG
                                : h.MODE_SOURCE;
                        }
                        setMode(e) {
                            const t = this.getMode(),
                                i = { mode: parseInt("" + e, 10) },
                                s = [
                                    "jodit-wysiwyg_mode",
                                    "jodit-source__mode",
                                    "jodit_split_mode",
                                ];
                            !1 !== this.e.fire("beforeSetMode", i) &&
                                ((this.__mode = [
                                    h.MODE_SOURCE,
                                    h.MODE_WYSIWYG,
                                    h.MODE_SPLIT,
                                ].includes(i.mode)
                                    ? i.mode
                                    : h.MODE_WYSIWYG),
                                this.o.saveModeInStorage &&
                                    this.storage.set(
                                        "jodit_default_mode",
                                        this.mode
                                    ),
                                s.forEach((e) => {
                                    this.container.classList.remove(e);
                                }),
                                this.container.classList.add(s[this.mode - 1]),
                                t !== this.getMode() &&
                                    this.e.fire("afterSetMode"));
                        }
                        toggleMode() {
                            let e = this.getMode();
                            [
                                h.MODE_SOURCE,
                                h.MODE_WYSIWYG,
                                this.o.useSplitMode ? h.MODE_SPLIT : 9,
                            ].includes(e + 1)
                                ? (e += 1)
                                : (e = h.MODE_WYSIWYG),
                                this.setMode(e);
                        }
                        setDisabled(e) {
                            this.o.disabled = e;
                            const t = this.__wasReadOnly;
                            this.setReadOnly(e || t),
                                (this.__wasReadOnly = t),
                                this.editor &&
                                    (this.editor.setAttribute(
                                        "aria-disabled",
                                        "" + e
                                    ),
                                    this.container.classList.toggle(
                                        "jodit_disabled",
                                        e
                                    ),
                                    this.e.fire("disabled", e));
                        }
                        getDisabled() {
                            return this.o.disabled;
                        }
                        setReadOnly(e) {
                            this.__wasReadOnly !== e &&
                                ((this.__wasReadOnly = e),
                                (this.o.readonly = e),
                                e
                                    ? this.editor &&
                                      this.editor.removeAttribute(
                                          "contenteditable"
                                      )
                                    : this.editor &&
                                      this.editor.setAttribute(
                                          "contenteditable",
                                          "true"
                                      ),
                                this.e && this.e.fire("readonly", e));
                        }
                        getReadOnly() {
                            return this.o.readonly;
                        }
                        focus() {
                            this.getMode() !== h.MODE_SOURCE && this.s.focus();
                        }
                        get isFocused() {
                            return this.s.isFocused();
                        }
                        beforeInitHook() {}
                        afterInitHook() {}
                        initOptions(e) {
                            this.options = (0, p.ConfigProto)(
                                e || {},
                                d.D.defaultOptions
                            );
                        }
                        initOwners() {
                            (this.editorWindow = this.o.ownerWindow),
                                (this.ownerWindow = this.o.ownerWindow);
                        }
                        constructor(e, t) {
                            super(t, !0),
                                (this.isJodit = !0),
                                (this.commands = new Map()),
                                (this.__selectionLocked = null),
                                (this.__wasReadOnly = !1),
                                (this.createInside = new u.Create(
                                    () => this.ed,
                                    this.o.createAttributes
                                )),
                                (this.editorIsActive = !1),
                                (this.__mode = h.MODE_WYSIWYG),
                                (this.__callChangeCount = 0),
                                (this.__isSilentChange = !1),
                                (this.__elementToPlace = new Map());
                            try {
                                const t = (0, p.resolveElement)(
                                    e,
                                    this.o.shadowRoot || this.od
                                );
                                if (l.isJoditAssigned(t)) return t.component;
                            } catch (e) {
                                throw (this.destruct(), e);
                            }
                            this.setStatus(u.STATUSES.beforeInit),
                                (this.id =
                                    (0, p.attr)(
                                        (0, p.resolveElement)(
                                            e,
                                            this.o.shadowRoot || this.od
                                        ),
                                        "id"
                                    ) || "" + new Date().getTime()),
                                (f.as[this.id] = this),
                                (this.storage = m.Ke.makeStorage(!0, this.id)),
                                this.attachEvents(t),
                                this.e.on(this.ow, "resize", () => {
                                    this.e && this.e.fire("resize");
                                }),
                                this.e.on(
                                    "prepareWYSIWYGEditor",
                                    this.__prepareWYSIWYGEditor
                                ),
                                (this.selection = new u.Select(this));
                            const i = this.beforeInitHook();
                            (0, p.callPromise)(i, () => {
                                this.e.fire("beforeInit", this);
                                const i = f.pw.init(this);
                                (0, p.callPromise)(i, () => {
                                    this.e.fire("afterPluginSystemInit", this),
                                        this.e.on("changePlace", () => {
                                            this.setReadOnly(this.o.readonly),
                                                this.setDisabled(
                                                    this.o.disabled
                                                );
                                        }),
                                        (this.places.length = 0);
                                    const i = this.addPlace(e, t);
                                    (f.as[this.id] = this),
                                        (0, p.callPromise)(i, () => {
                                            this.e &&
                                                this.e.fire("afterInit", this),
                                                this.afterInitHook(),
                                                this.setStatus(
                                                    u.STATUSES.ready
                                                ),
                                                this.e.fire(
                                                    "afterConstructor",
                                                    this
                                                );
                                        });
                                });
                            });
                        }
                        addPlace(e, t) {
                            const i = (0, p.resolveElement)(
                                e,
                                this.o.shadowRoot || this.od
                            );
                            this.attachEvents(t),
                                i.attributes &&
                                    (0, p.toArray)(i.attributes).forEach(
                                        (e) => {
                                            const i = e.name;
                                            let s = e.value;
                                            void 0 === d.D.defaultOptions[i] ||
                                                (t && void 0 !== t[i]) ||
                                                (-1 !==
                                                    [
                                                        "readonly",
                                                        "disabled",
                                                    ].indexOf(i) &&
                                                    (s =
                                                        "" === s ||
                                                        "true" === s),
                                                /^[0-9]+(\.)?([0-9]+)?$/.test(
                                                    "" + s
                                                ) && (s = Number(s)),
                                                (this.options[i] = s));
                                        }
                                    );
                            let s = this.c.div("jodit-container");
                            s.classList.add("jodit"),
                                s.classList.add("jodit-container"),
                                s.classList.add(
                                    "jodit_theme_" + (this.o.theme || "default")
                                ),
                                k(this.o.className, s),
                                this.o.containerStyle &&
                                    (0, p.css)(s, this.o.containerStyle);
                            const { styleValues: o } = this.o;
                            Object.keys(o).forEach((e) => {
                                const t = (0, p.kebabCase)(e);
                                s.style.setProperty("--jd-" + t, o[e]);
                            }),
                                s.setAttribute("contenteditable", "false");
                            let r = null;
                            this.o.inline &&
                                (-1 ===
                                    ["TEXTAREA", "INPUT"].indexOf(i.nodeName) &&
                                    ((s = i),
                                    i.setAttribute(w, "" + i.className),
                                    (r = s.innerHTML),
                                    (s.innerHTML = "")),
                                s.classList.add("jodit_inline"),
                                s.classList.add("jodit-container")),
                                i !== s &&
                                    (i.style.display &&
                                        i.setAttribute(y, i.style.display),
                                    (i.style.display = "none"));
                            const n = this.c.div("jodit-workplace", {
                                contenteditable: !1,
                            });
                            s.appendChild(n),
                                this.message.destruct(),
                                (this.message = new u.UIMessages(this, n)),
                                i.parentNode &&
                                    i !== s &&
                                    i.parentNode.insertBefore(s, i),
                                Object.defineProperty(i, "component", {
                                    enumerable: !1,
                                    configurable: !0,
                                    value: this,
                                });
                            const a = this.c.div("jodit-wysiwyg", {
                                contenteditable: !0,
                                "aria-disabled": !1,
                                tabindex: this.o.tabIndex,
                            });
                            n.appendChild(a);
                            const l = {
                                editor: a,
                                element: i,
                                container: s,
                                workplace: n,
                                statusbar: new u.StatusBar(this, s),
                                options: this.isReady
                                    ? (0, p.ConfigProto)(
                                          t || {},
                                          d.D.defaultOptions
                                      )
                                    : this.options,
                                history: new u.History(this),
                                editorWindow: this.ow,
                            };
                            this.__elementToPlace.set(a, l),
                                this.setCurrentPlace(l),
                                this.places.push(l),
                                this.setNativeEditorValue(
                                    this.getElementValue()
                                );
                            const c = this.__initEditor(r),
                                h = this.options;
                            return (0, p.callPromise)(c, () => {
                                h.enableDragAndDropFileToEditor &&
                                    h.uploader &&
                                    (h.uploader.url ||
                                        h.uploader.insertImageAsBase64URI) &&
                                    this.uploader.bind(this.editor),
                                    this.__elementToPlace.get(this.editor) ||
                                        this.__elementToPlace.set(
                                            this.editor,
                                            l
                                        ),
                                    this.e.fire("afterAddPlace", l);
                            });
                        }
                        addDisclaimer(e) {
                            this.workplace.appendChild(e);
                        }
                        setCurrentPlace(e) {
                            this.currentPlace !== e &&
                                (this.isEditorMode() ||
                                    this.setMode(h.MODE_WYSIWYG),
                                (this.currentPlace = e),
                                this.buildToolbar(),
                                this.isReady && this.e.fire("changePlace", e));
                        }
                        __initEditor(e) {
                            const t = this.__createEditor();
                            return (0, p.callPromise)(t, () => {
                                if (this.isInDestruct) return;
                                if (this.element !== this.container) {
                                    const e = this.getElementValue();
                                    e !== this.getEditorValue() &&
                                        this.setEditorValue(e);
                                } else null != e && this.setEditorValue(e);
                                let t = this.o.defaultMode;
                                if (this.o.saveModeInStorage) {
                                    const e =
                                        this.storage.get("jodit_default_mode");
                                    "string" == typeof e &&
                                        (t = parseInt(e, 10));
                                }
                                this.setMode(t),
                                    this.o.readonly &&
                                        ((this.__wasReadOnly = !1),
                                        this.setReadOnly(!0)),
                                    this.o.disabled && this.setDisabled(!0);
                                try {
                                    this.ed.execCommand(
                                        "defaultParagraphSeparator",
                                        !1,
                                        this.o.enter.toLowerCase()
                                    );
                                } catch (e) {}
                                try {
                                    this.ed.execCommand(
                                        "enableObjectResizing",
                                        !1,
                                        "false"
                                    );
                                } catch (e) {}
                                try {
                                    this.ed.execCommand(
                                        "enableInlineTableEditing",
                                        !1,
                                        "false"
                                    );
                                } catch (e) {}
                            });
                        }
                        __createEditor() {
                            const e = this.editor,
                                t = this.e.fire("createEditor", this);
                            return (0, p.callPromise)(t, () => {
                                if (!this.isInDestruct) {
                                    if (
                                        ((!1 === t || (0, p.isPromise)(t)) &&
                                            u.Dom.safeRemove(e),
                                        k(
                                            this.o.editorClassName ||
                                                this.o.editorCssClass,
                                            this.editor
                                        ),
                                        this.o.editorCssClass &&
                                            this.editor.classList.add(
                                                this.o.editorCssClass
                                            ),
                                        this.o.style &&
                                            (0, p.css)(
                                                this.editor,
                                                this.o.style
                                            ),
                                        this.e
                                            .on("synchro", () => {
                                                this.setEditorValue();
                                            })
                                            .on("focus", () => {
                                                this.editorIsActive = !0;
                                            })
                                            .on(
                                                "blur",
                                                () => (this.editorIsActive = !1)
                                            ),
                                        this.__prepareWYSIWYGEditor(),
                                        this.o.direction)
                                    ) {
                                        const e =
                                            "rtl" ===
                                            this.o.direction.toLowerCase()
                                                ? "rtl"
                                                : "ltr";
                                        (this.container.style.direction = e),
                                            this.container.setAttribute(
                                                "dir",
                                                e
                                            ),
                                            this.toolbar.setDirection(e);
                                    }
                                    this.o.triggerChangeEvent &&
                                        this.e.on(
                                            "change",
                                            this.async.debounce(() => {
                                                this.e &&
                                                    this.e.fire(
                                                        this.element,
                                                        "change"
                                                    );
                                            }, this.defaultTimeout)
                                        );
                                }
                            });
                        }
                        __prepareWYSIWYGEditor() {
                            const { editor: e } = this;
                            if (this.o.direction) {
                                const e =
                                    "rtl" === this.o.direction.toLowerCase()
                                        ? "rtl"
                                        : "ltr";
                                (this.editor.style.direction = e),
                                    this.editor.setAttribute("dir", e);
                            }
                            this.e
                                .on(e, "mousedown touchstart focus", () => {
                                    const t = this.__elementToPlace.get(e);
                                    t && this.setCurrentPlace(t);
                                })
                                .on(e, "compositionend", this.synchronizeValues)
                                .on(
                                    e,
                                    "selectionchange selectionstart keydown keyup input keypress dblclick mousedown mouseup click copy cut dragstart drop dragover paste resize touchstart touchend focus blur",
                                    (e) => {
                                        if (
                                            !this.o.readonly &&
                                            !this.__isSilentChange &&
                                            !(
                                                e instanceof
                                                    this.ew.KeyboardEvent &&
                                                e.isComposing
                                            ) &&
                                            this.e &&
                                            this.e.fire
                                        ) {
                                            if (!1 === this.e.fire(e.type, e))
                                                return !1;
                                            this.synchronizeValues();
                                        }
                                    }
                                );
                        }
                        fetch(e, t) {
                            const i = new b.t(
                                    { url: e, ...t },
                                    this.o.defaultAjaxOptions
                                ),
                                s = () => {
                                    this.e.off("beforeDestruct", s),
                                        this.progressbar.progress(100).hide(),
                                        i.destruct();
                                };
                            this.e.one("beforeDestruct", s),
                                this.progressbar.show().progress(30);
                            const o = i.send();
                            return o.finally(s).catch(() => null), o;
                        }
                        destruct() {
                            if (this.isInDestruct) return;
                            if (
                                (this.setStatus(u.STATUSES.beforeDestruct),
                                this.__elementToPlace.clear(),
                                !this.editor)
                            )
                                return;
                            const e = this.getEditorValue();
                            this.storage.clear(),
                                this.buffer.clear(),
                                this.commands.clear(),
                                (this.__selectionLocked = null),
                                this.e.off(this.ow, "resize"),
                                this.e.off(this.ow),
                                this.e.off(this.od),
                                this.e.off(this.od.body),
                                this.places.forEach(
                                    ({
                                        container: t,
                                        workplace: i,
                                        statusbar: s,
                                        element: o,
                                        iframe: r,
                                        editor: n,
                                        history: a,
                                    }) => {
                                        if (o !== t)
                                            if (o.hasAttribute(y)) {
                                                const e = (0, p.attr)(o, y);
                                                e &&
                                                    ((o.style.display = e),
                                                    o.removeAttribute(y));
                                            } else o.style.display = "";
                                        else
                                            o.hasAttribute(w) &&
                                                ((o.className =
                                                    (0, p.attr)(o, w) || ""),
                                                o.removeAttribute(w));
                                        o.hasAttribute("style") &&
                                            !(0, p.attr)(o, "style") &&
                                            o.removeAttribute("style"),
                                            s.destruct(),
                                            this.e.off(t),
                                            this.e.off(o),
                                            this.e.off(n),
                                            u.Dom.safeRemove(i),
                                            u.Dom.safeRemove(n),
                                            t !== o && u.Dom.safeRemove(t),
                                            Object.defineProperty(
                                                o,
                                                "component",
                                                {
                                                    enumerable: !1,
                                                    configurable: !0,
                                                    value: null,
                                                }
                                            ),
                                            u.Dom.safeRemove(r),
                                            t === o && (o.innerHTML = e),
                                            a.destruct();
                                    }
                                ),
                                (this.places.length = 0),
                                (this.currentPlace = {}),
                                delete f.as[this.id],
                                super.destruct();
                        }
                    });
                    function k(e, t) {
                        e && e.split(/\s+/).forEach((e) => t.classList.add(e));
                    }
                    (Jodit.fatMode = !1),
                        (Jodit.plugins = f.pw),
                        (Jodit.modules = f.qz),
                        (Jodit.ns = f.qz),
                        (Jodit.decorators = {}),
                        (Jodit.constants = h),
                        (Jodit.instances = f.as),
                        (Jodit.lang = h.lang),
                        (Jodit.core = { Plugin: u.Plugin }),
                        (0, c.gn)([g.cache], Jodit.prototype, "uploader", null),
                        (0, c.gn)(
                            [g.cache],
                            Jodit.prototype,
                            "filebrowser",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.throttle)()],
                            Jodit.prototype,
                            "synchronizeValues",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":internalChange")],
                            Jodit.prototype,
                            "updateElementValue",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Jodit.prototype,
                            "__prepareWYSIWYGEditor",
                            null
                        ),
                        (Jodit = l = (0, c.gn)([(0, g.derive)(v.lf)], Jodit));
                    var C = i(77574);
                    let S = {};
                    {
                        const e = i(89091),
                            t = i(61124),
                            s = i(34554),
                            o = i(57889),
                            r = i(88716),
                            n = i(72632),
                            a = i(46524),
                            l = i(32920),
                            c = i(53946),
                            d = i(90069),
                            h = i(53283),
                            u = i(87409),
                            p = i(134),
                            m = i(65296),
                            f = i(31130),
                            g = i(65453),
                            v = i(10676),
                            b = i(38039),
                            y = i(17046);
                        S = {
                            ar: e,
                            cs_cz: t,
                            de: s,
                            en: o,
                            es: r,
                            fr: n,
                            he: a,
                            hu: l,
                            id: c,
                            it: d,
                            ja: h,
                            ko: u,
                            nl: p,
                            pl: m,
                            pt_br: f,
                            ru: g,
                            tr: v,
                            zh_cn: b,
                            zh_tw: y,
                        };
                    }
                    const x = i(73725),
                        E = (e) => (e ? e.default || e : {}),
                        _ = {};
                    (0, C.kJ)(E(x)) &&
                        E(x).forEach((e, t) => {
                            _[t] = e;
                        }),
                        Object.keys(S).forEach((e) => {
                            const t = E(S[e]);
                            (0, C.kJ)(t)
                                ? ((S[e] = {}),
                                  t.forEach((t, i) => {
                                      S[e][_[i]] = t;
                                  }))
                                : (S[e] = t);
                        });
                    var j = S,
                        z = i(61764),
                        T = i(5886),
                        I = i(26957),
                        L = i(86979),
                        M = i(9678),
                        A = i(39606),
                        D = i(20435),
                        P = i(12005),
                        N = i(49295),
                        R = i(12637),
                        q = i(68115),
                        B = i(68490),
                        O = i(23948),
                        H = i(22144),
                        F = i(2895),
                        V = i(69072),
                        W = i(92475),
                        $ = i(93324),
                        U = i(47680),
                        Y = i(55793),
                        G = i(93894),
                        K = i(84916),
                        J = i(58315),
                        X = i(27669),
                        Z = i(1274),
                        Q = i(32039),
                        ee = i(42215),
                        te = i(34759);
                    (d.D.prototype.controls.about = {
                        exec(e) {
                            const t = e.dlg(),
                                i = e.i18n.bind(e);
                            t
                                .setMod("theme", e.o.theme)
                                .setHeader(i("About Jodit"))
                                .setContent(
                                    `<div class="jodit-about">\n\t\t\t\t\t<div>${i(
                                        "Jodit Editor"
                                    )} v.${e.getVersion()}</div>\n\t\t\t\t\t<div>${i(
                                        "License: %s",
                                        (0, p.isLicense)(e.o.license)
                                            ? (0, p.normalizeLicense)(
                                                  e.o.license
                                              )
                                            : "MIT"
                                    )}</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href="https://xdsoft.net/jodit/pro/" target="_blank">https://xdsoft.net/jodit/pro/</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<a href="https://xdsoft.net/jodit/doc/" target="_blank">${i(
                                        "Jodit User's Guide"
                                    )}</a>\n\t\t\t\t\t\t${i(
                                        "contains detailed help for using"
                                    )}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div>${i(
                                        "Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved."
                                    )}</div>\n\t\t\t\t</div>`
                                ),
                                (0, p.css)(t.dialog, {
                                    minHeight: 200,
                                    minWidth: 420,
                                }),
                                t.open(!0);
                        },
                        tooltip: "About Jodit",
                        mode: h.MODE_SOURCE + h.MODE_WYSIWYG,
                    }),
                        f.pw.add("about", (e) => {
                            e.registerButton({ name: "about", group: "info" });
                        }),
                        te.J.set("about", i(61515));
                    var ie = i(86673);
                    (d.D.prototype.addNewLine = !0),
                        (d.D.prototype.addNewLineOnDBLClick = !0),
                        (d.D.prototype.addNewLineTagsTriggers = [
                            "table",
                            "iframe",
                            "img",
                            "hr",
                            "pre",
                            "jodit",
                        ]),
                        (d.D.prototype.addNewLineDeltaShow = 20),
                        ie.JO.set("enter", i(49663));
                    const se = "addnewline";
                    class oe extends u.Plugin {
                        constructor() {
                            super(...arguments),
                                (this.line = this.j.c.fromHTML(
                                    `<div role="button" tabindex="-1" title="${this.j.i18n(
                                        "Break"
                                    )}" class="jodit-add-new-line"><span>${u.Icon.get(
                                        "enter"
                                    )}</span></div>`
                                )),
                                (this.isMatchedTag = (e) =>
                                    !(
                                        !e ||
                                        !this.j.o.addNewLineTagsTriggers.includes(
                                            e.nodeName.toLowerCase()
                                        )
                                    )),
                                (this.preview = !1),
                                (this.lineInFocus = !1),
                                (this.isShown = !1),
                                (this.hideForce = () => {
                                    this.isShown &&
                                        ((this.isShown = !1),
                                        this.j.async.clearTimeout(this.timeout),
                                        (this.lineInFocus = !1),
                                        u.Dom.safeRemove(this.line),
                                        this.line.style.setProperty(
                                            "--jd-offset-handle",
                                            "0"
                                        ));
                                }),
                                (this.canGetFocus = (e) =>
                                    null != e &&
                                    u.Dom.isBlock(e) &&
                                    !/^(img|table|iframe|hr)$/i.test(
                                        e.nodeName
                                    )),
                                (this.onClickLine = (e) => {
                                    const t = this.j,
                                        i = t.createInside.element(t.o.enter);
                                    this.preview &&
                                    this.current &&
                                    this.current.parentNode
                                        ? this.current === t.editor
                                            ? u.Dom.prepend(t.editor, i)
                                            : this.current.parentNode.insertBefore(
                                                  i,
                                                  this.current
                                              )
                                        : t.editor.appendChild(i),
                                        t.s.setCursorIn(i),
                                        (0, p.scrollIntoViewIfNeeded)(
                                            i,
                                            t.editor,
                                            t.ed
                                        ),
                                        t.synchronizeValues(),
                                        this.hideForce(),
                                        e.preventDefault();
                                });
                        }
                        show() {
                            this.isShown ||
                                this.j.o.readonly ||
                                this.j.isLocked ||
                                ((this.isShown = !0),
                                this.j.async.clearTimeout(this.timeout),
                                this.line.classList.toggle(
                                    "jodit-add-new-line_after",
                                    !this.preview
                                ),
                                this.j.container.appendChild(this.line),
                                (this.line.style.width =
                                    this.j.container.clientWidth + "px"));
                        }
                        onLock(e) {
                            e && this.isShown && this.hideForce();
                        }
                        hide() {
                            this.isShown &&
                                !this.lineInFocus &&
                                (this.timeout = this.j.async.setTimeout(
                                    this.hideForce,
                                    { timeout: 500, label: "add-new-line-hide" }
                                ));
                        }
                        afterInit(e) {
                            e.o.addNewLine &&
                                (e.e
                                    .on(this.line, "mousemove", (e) => {
                                        e.stopPropagation();
                                    })
                                    .on(
                                        this.line,
                                        "mousedown touchstart",
                                        this.onClickLine
                                    )
                                    .on("change", this.hideForce)
                                    .on(this.line, "mouseenter", () => {
                                        this.j.async.clearTimeout(this.timeout),
                                            (this.lineInFocus = !0);
                                    })
                                    .on(this.line, "mouseleave", () => {
                                        this.lineInFocus = !1;
                                    })
                                    .on(
                                        "changePlace",
                                        this.addEventListeners.bind(this)
                                    ),
                                this.addEventListeners());
                        }
                        addEventListeners() {
                            const e = this.j;
                            e.e
                                .off(e.editor, "." + se)
                                .off(e.container, "." + se)
                                .on(
                                    [e.ow, e.ew, e.editor],
                                    "scroll." + se,
                                    this.hideForce
                                )
                                .on(e.editor, "click." + se, this.hide)
                                .on(e.container, "mouseleave." + se, this.hide)
                                .on(
                                    e.editor,
                                    "mousemove." + se,
                                    this.onMouseMove
                                );
                        }
                        onDblClickEditor(e) {
                            const t = this.j;
                            if (
                                !t.o.readonly &&
                                t.o.addNewLineOnDBLClick &&
                                e.target === t.editor &&
                                t.s.isCollapsed()
                            ) {
                                const i = (0, p.offset)(t.editor, t, t.ed),
                                    s = e.pageY - t.ew.pageYOffset,
                                    o = t.createInside.element(t.o.enter);
                                Math.abs(s - (i.height + i.top)) >
                                    Math.abs(s - i.top) && t.editor.firstChild
                                    ? t.editor.insertBefore(
                                          o,
                                          t.editor.firstChild
                                      )
                                    : t.editor.appendChild(o),
                                    t.s.setCursorIn(o),
                                    t.synchronizeValues(),
                                    this.hideForce(),
                                    e.preventDefault();
                            }
                        }
                        onMouseMove(e) {
                            const t = this.j;
                            let i = t.ed.elementFromPoint(e.clientX, e.clientY);
                            if (
                                !u.Dom.isHTMLElement(i) ||
                                u.Dom.isOrContains(this.line, i)
                            )
                                return;
                            if (!u.Dom.isOrContains(t.editor, i)) return;
                            if (
                                (t.editor === i ||
                                    this.isMatchedTag(i) ||
                                    (i = u.Dom.closest(
                                        i,
                                        this.isMatchedTag,
                                        t.editor
                                    )),
                                !i)
                            )
                                return void this.hide();
                            if (this.isMatchedTag(i)) {
                                const e = u.Dom.up(i, u.Dom.isBlock, t.editor);
                                e && e !== t.editor && (i = e);
                            }
                            const s = (0, p.position)(i, this.j);
                            let o = !1,
                                { clientY: r, clientX: n } = e;
                            if (this.j.iframe) {
                                const { top: e, left: t } = (0, p.position)(
                                    this.j.iframe,
                                    this.j,
                                    !0
                                );
                                (r += e), (n += t);
                            }
                            const a = this.j.o.addNewLineDeltaShow;
                            Math.abs(r - s.top) > a ||
                                ((o = s.top), (this.preview = !0)),
                                Math.abs(r - (s.top + s.height)) > a ||
                                    ((o = s.top + s.height),
                                    (this.preview = !1)),
                                !1 === o ||
                                ((t.editor !== i || this.preview) &&
                                    (0, p.call)(
                                        this.preview ? u.Dom.prev : u.Dom.next,
                                        i,
                                        this.canGetFocus,
                                        t.editor
                                    ))
                                    ? ((this.current = !1), this.hide())
                                    : ((this.line.style.top = o + "px"),
                                      (this.current = i),
                                      this.show(),
                                      this.line.style.setProperty(
                                          "--jd-offset-handle",
                                          n - s.left - 10 + "px"
                                      ));
                        }
                        beforeDestruct() {
                            this.j.async.clearTimeout(this.timeout),
                                this.j.e
                                    .off(this.line)
                                    .off("changePlace", this.addEventListeners),
                                u.Dom.safeRemove(this.line),
                                this.j.e
                                    .off(
                                        [this.j.ow, this.j.ew, this.j.editor],
                                        "." + se
                                    )
                                    .off(this.j.container, "." + se);
                        }
                    }
                    (0, c.gn)(
                        [(0, g.watch)(":lock")],
                        oe.prototype,
                        "onLock",
                        null
                    ),
                        (0, c.gn)([g.autobind], oe.prototype, "hide", null),
                        (0, c.gn)(
                            [(0, g.watch)(":dblclick")],
                            oe.prototype,
                            "onDblClickEditor",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.debounce)((e) => 5 * e.defaultTimeout)],
                            oe.prototype,
                            "onMouseMove",
                            null
                        ),
                        f.pw.add("addNewLine", oe);
                    var re = i(10818),
                        ne = i(97039),
                        ae = i(5936),
                        le = i(38886),
                        ce = i(69403);
                    function de(e) {
                        return (t) =>
                            !0 !== e.e.fire("backSpaceIsMovedIgnore", t);
                    }
                    function he(e, t, i) {
                        const s = le.i.findSibling(t, i),
                            o = le.i.findSibling(t, !i);
                        if (
                            !le.i.closest(t, le.i.isElement, e.editor) &&
                            le.i.isTag(s, ["ul", "ol"]) &&
                            le.i.isTag(o, ["ul", "ol"]) &&
                            le.i.isTag(s.lastElementChild, "li") &&
                            le.i.isTag(o.firstElementChild, "li")
                        ) {
                            const { setCursorBefore: r, setCursorAfter: n } =
                                    e.s,
                                a = s.lastElementChild;
                            return (
                                (0, ce.RE)(
                                    i ? le.i.prepend : le.i.append,
                                    o.firstElementChild,
                                    t
                                ),
                                le.i.moveContent(o, s, !i, de(e)),
                                le.i.safeRemove(o),
                                (0, ce.RE)(
                                    i ? le.i.append : le.i.prepend,
                                    a,
                                    t
                                ),
                                (0, ce.RE)(i ? r : n, t),
                                !0
                            );
                        }
                        return !1;
                    }
                    function ue(e, t, i) {
                        let s = !1;
                        const { setCursorBefore: o, setCursorIn: r } = e.s;
                        let n = ne.i.closest(t, ne.i.isElement, e.editor);
                        if (!n || !ne.i.isEmpty(n)) return !1;
                        const a = ne.i.findNotEmptyNeighbor(t, i, e.editor);
                        do {
                            if (!n || !ne.i.isEmpty(n) || ne.i.isCell(n)) break;
                            {
                                ne.i.after(n, t);
                                const i = ne.i.closest(
                                    n,
                                    (e) => ne.i.isElement(e) && e !== n,
                                    e.editor
                                );
                                ne.i.safeRemove(n), (s = !0), (n = i);
                            }
                        } while (n);
                        return (
                            !(!s || !he(e, t, i)) ||
                            (!a ||
                            ne.i.isText(a) ||
                            ne.i.isTag(a, h.INSEPARABLE_TAGS)
                                ? o(t)
                                : r(a, !i),
                            s)
                        );
                    }
                    function pe(e, t, i, s) {
                        if (t && le.i.isElement(i)) {
                            le.i.moveContent(t, i, !s, de(e));
                            let o = t;
                            for (; o && o !== e.editor && le.i.isEmpty(o); ) {
                                const e = o.parentElement;
                                le.i.safeRemove(o), (o = e);
                            }
                            return !0;
                        }
                        return !1;
                    }
                    var me = i(25916);
                    const fe = [
                        (e, t, i) => {
                            const s = le.i.findSibling(t, i);
                            return !(
                                !le.i.isElement(s) ||
                                (!le.i.isTag(s, h.INSEPARABLE_TAGS) &&
                                    !le.i.isEmpty(s)) ||
                                (le.i.safeRemove(s),
                                le.i.isTag(s, "br") &&
                                    !le.i.findNotEmptySibling(t, !1) &&
                                    le.i.after(t, e.createInside.element("br")),
                                e.s.setCursorBefore(t),
                                le.i.isTag(s, "br") && ue(e, t, i),
                                0)
                            );
                        },
                        (e, t, i) => {
                            let s = ne.i.findSibling(t, i);
                            return (
                                !s &&
                                    t.parentElement &&
                                    t.parentElement !== e.editor &&
                                    (s = ne.i.findSibling(t.parentElement, i)),
                                !(
                                    !ne.i.isElement(s) ||
                                    ne.i.isContentEditable(s, e.editor) ||
                                    ((0, p.call)(
                                        i ? ne.i.before : ne.i.after,
                                        s,
                                        t
                                    ),
                                    ne.i.safeRemove(s),
                                    (0, ae.F)(e, t, i),
                                    (0, p.call)(
                                        i
                                            ? e.s.setCursorBefore
                                            : e.s.setCursorAfter,
                                        t
                                    ),
                                    0)
                                )
                            );
                        },
                        function e(t, i, s, o) {
                            var r, n, a;
                            const l = s ? -1 : 1,
                                c = ne.i.sibling(i, !s);
                            let d,
                                u = ne.i.sibling(i, s),
                                m = null,
                                f = !1;
                            const g = (e) => {
                                let i = ne.i.sibling(e, s);
                                return (
                                    !i &&
                                        e.parentNode &&
                                        e.parentNode !== t.editor &&
                                        (i = ((e, t, i, s = !1) => {
                                            const o = (e) =>
                                                t ? e.firstChild : e.lastChild;
                                            let r = ne.i.findNotEmptyNeighbor(
                                                e,
                                                !t,
                                                i
                                            );
                                            if (
                                                s &&
                                                ne.i.isElement(r) &&
                                                !ne.i.isInlineBlock(r)
                                            )
                                                return null;
                                            if (r)
                                                do {
                                                    if (!o(r)) return r;
                                                    r = o(r);
                                                } while (r);
                                            return null;
                                        })(e, !s, t.editor, !0)),
                                    i
                                );
                            };
                            for (
                                u || (u = g(i));
                                u && (ne.i.isText(u) || ne.i.isInlineBlock(u));

                            ) {
                                for (; ne.i.isInlineBlock(u); )
                                    u = s
                                        ? null == u
                                            ? void 0
                                            : u.lastChild
                                        : null == u
                                        ? void 0
                                        : u.firstChild;
                                if (!u) break;
                                if (
                                    null === (r = u.nodeValue) || void 0 === r
                                        ? void 0
                                        : r.length
                                ) {
                                    let e = (0, p.toArray)(u.nodeValue);
                                    const t = e.length;
                                    let i = s ? t - 1 : 0;
                                    if (e[i] === h.INVISIBLE_SPACE)
                                        for (; e[i] === h.INVISIBLE_SPACE; )
                                            i += l;
                                    if (
                                        ((d = e[i]),
                                        e[i + l] === h.INVISIBLE_SPACE)
                                    ) {
                                        for (
                                            i += l;
                                            e[i] === h.INVISIBLE_SPACE;

                                        )
                                            i += l;
                                        i += s ? 1 : -1;
                                    }
                                    if (
                                        ((e =
                                            s && 0 > i
                                                ? []
                                                : e.slice(
                                                      s ? 0 : i + 1,
                                                      s ? i : t
                                                  )),
                                        !c ||
                                            !ne.i.isText(c) ||
                                            (s ? /^ / : / $/).test(
                                                null !== (n = c.nodeValue) &&
                                                    void 0 !== n
                                                    ? n
                                                    : ""
                                            ) ||
                                            !(0, p.trimInv)(c.nodeValue || "")
                                                .length)
                                    )
                                        for (
                                            let t = s ? e.length - 1 : 0;
                                            (s ? t >= 0 : e.length > t) &&
                                            " " === e[t];
                                            t += s ? -1 : 1
                                        )
                                            e[t] = h.NBSP_SPACE;
                                    u.nodeValue = e.join("");
                                }
                                if (
                                    ((null === (a = u.nodeValue) || void 0 === a
                                        ? void 0
                                        : a.length) || (m = u),
                                    !(0, p.isVoid)(d) &&
                                        d !== h.INVISIBLE_SPACE)
                                ) {
                                    (f = !0),
                                        (0, p.call)(
                                            s ? ne.i.after : ne.i.before,
                                            u,
                                            i
                                        ),
                                        ("sentence" === o ||
                                            ("word" === o &&
                                                " " !== d &&
                                                d !== h.NBSP_SPACE)) &&
                                            e(t, i, s, o);
                                    break;
                                }
                                const v = g(u);
                                m && (ne.i.safeRemove(m), (m = null)), (u = v);
                            }
                            return (
                                m && (ne.i.safeRemove(m), (m = null)),
                                f &&
                                    (((e) => {
                                        let t = e.parentElement;
                                        for (; t && ne.i.isInlineBlock(t); ) {
                                            const i = t.parentElement;
                                            ne.i.isEmpty(t) &&
                                                (ne.i.after(t, e),
                                                ne.i.safeRemove(t)),
                                                (t = i);
                                        }
                                    })(i),
                                    ((e, t) => {
                                        t.parentElement !== e.editor &&
                                            ne.i.isBlock(t.parentElement) &&
                                            ne.i.each(
                                                t.parentElement,
                                                ne.i.isEmptyTextNode
                                            ) &&
                                            ne.i.after(
                                                t,
                                                e.createInside.element("br")
                                            );
                                    })(t, i),
                                    t.s.setCursorBefore(i),
                                    ne.i.isTag(i.previousSibling, "br") &&
                                        !ne.i.findNotEmptySibling(i, !1) &&
                                        ne.i.after(
                                            i,
                                            t.createInside.element("br")
                                        )),
                                f
                            );
                        },
                        (e, t) => !!le.i.isCell(t.parentElement),
                        ue,
                        (e, t, i) => {
                            const s = le.i.closest(t, le.i.isElement, e.editor);
                            if (!s) return !1;
                            const o = le.i.findNotEmptySibling(s, i);
                            return !(
                                !o ||
                                !le.i.isEmpty(o) ||
                                (le.i.safeRemove(o), e.s.setCursorBefore(t), 0)
                            );
                        },
                        he,
                        (e, t, i) => {
                            let s = t,
                                o = s;
                            for (
                                ;
                                s &&
                                !le.i.findNotEmptySibling(s, i) &&
                                s.parentElement !== e.editor;

                            )
                                (s = s.parentElement), (o = s);
                            if (
                                le.i.isElement(o) &&
                                le.i.isContentEditable(o, e.editor)
                            ) {
                                const s = le.i.findNotEmptySibling(o, i);
                                if (
                                    s &&
                                    (((e, t, i, s) => {
                                        const o = le.i.isTag(i, ["ol", "ul"]),
                                            r = le.i.isTag(t, ["ol", "ul"]),
                                            n = (e, t) =>
                                                t
                                                    ? e.firstElementChild
                                                    : e.lastElementChild;
                                        return r
                                            ? ((i = e.createInside.element(
                                                  e.o.enterBlock
                                              )),
                                              le.i.before(t, i),
                                              pe(e, n(t, s), i, s))
                                            : !(!i || !o || r) &&
                                                  pe(e, t, n(i, !s), s);
                                    })(e, o, s, i) ||
                                        pe(e, o, s, i))
                                )
                                    return e.s.setCursorBefore(t), !0;
                            }
                            return !1;
                        },
                        (e, t, i) => {
                            var s;
                            const o = le.i.closest(t, le.i.isElement, e.editor),
                                { s: r } = e;
                            if (
                                le.i.isTag(o, "li") &&
                                (null ===
                                    (s =
                                        null == o ? void 0 : o.parentElement) ||
                                void 0 === s
                                    ? void 0
                                    : s[
                                          i
                                              ? "firstElementChild"
                                              : "lastElementChild"
                                      ]) === o &&
                                r.cursorInTheEdge(i, o)
                            ) {
                                const s = o.parentElement,
                                    n = e.createInside.element(e.o.enterBlock);
                                return (
                                    (0, me.call)(
                                        i ? le.i.before : le.i.after,
                                        s,
                                        n
                                    ),
                                    le.i.moveContent(o, n),
                                    le.i.safeRemove(o),
                                    le.i.isEmpty(s) && le.i.safeRemove(s),
                                    (0, me.call)(
                                        i
                                            ? r.setCursorBefore
                                            : r.setCursorAfter,
                                        t
                                    ),
                                    !0
                                );
                            }
                            return !1;
                        },
                    ];
                    (d.D.prototype.delete = {
                        hotkeys: {
                            delete: ["delete", "cmd+backspace"],
                            deleteWord: [
                                "ctrl+delete",
                                "cmd+alt+backspace",
                                "ctrl+alt+backspace",
                            ],
                            deleteSentence: [
                                "ctrl+shift+delete",
                                "cmd+shift+delete",
                            ],
                            backspace: ["backspace"],
                            backspaceWord: ["ctrl+backspace"],
                            backspaceSentence: [
                                "ctrl+shift+backspace",
                                "cmd+shift+backspace",
                            ],
                        },
                    }),
                        f.pw.add(
                            "backspace",
                            class ge extends re.S {
                                constructor() {
                                    super(...arguments),
                                        (this.requires = ["hotkeys"]);
                                }
                                afterInit(e) {
                                    e.e.on("afterCommand.delete", (e) => {
                                        "delete" === e &&
                                            this.afterDeleteCommand();
                                    }),
                                        e
                                            .registerCommand(
                                                "deleteButton",
                                                {
                                                    exec: () =>
                                                        this.onDelete(!1),
                                                    hotkeys:
                                                        e.o.delete.hotkeys
                                                            .delete,
                                                },
                                                { stopPropagation: !1 }
                                            )
                                            .registerCommand(
                                                "backspaceButton",
                                                {
                                                    exec: () =>
                                                        this.onDelete(!0),
                                                    hotkeys:
                                                        e.o.delete.hotkeys
                                                            .backspace,
                                                },
                                                { stopPropagation: !1 }
                                            )
                                            .registerCommand(
                                                "deleteWordButton",
                                                {
                                                    exec: () =>
                                                        this.onDelete(
                                                            !1,
                                                            "word"
                                                        ),
                                                    hotkeys:
                                                        e.o.delete.hotkeys
                                                            .deleteWord,
                                                }
                                            )
                                            .registerCommand(
                                                "backspaceWordButton",
                                                {
                                                    exec: () =>
                                                        this.onDelete(
                                                            !0,
                                                            "word"
                                                        ),
                                                    hotkeys:
                                                        e.o.delete.hotkeys
                                                            .backspaceWord,
                                                }
                                            )
                                            .registerCommand(
                                                "deleteSentenceButton",
                                                {
                                                    exec: () =>
                                                        this.onDelete(
                                                            !1,
                                                            "sentence"
                                                        ),
                                                    hotkeys:
                                                        e.o.delete.hotkeys
                                                            .deleteSentence,
                                                }
                                            )
                                            .registerCommand(
                                                "backspaceSentenceButton",
                                                {
                                                    exec: () =>
                                                        this.onDelete(
                                                            !0,
                                                            "sentence"
                                                        ),
                                                    hotkeys:
                                                        e.o.delete.hotkeys
                                                            .backspaceSentence,
                                                }
                                            );
                                }
                                beforeDestruct(e) {
                                    e.e.off("afterCommand.delete");
                                }
                                afterDeleteCommand() {
                                    const e = this.j,
                                        t = e.s.current();
                                    if (
                                        (t &&
                                            ne.i.isTag(t.firstChild, "br") &&
                                            e.s.removeNode(t.firstChild),
                                        !(
                                            (0, p.trim)(
                                                e.editor.textContent || ""
                                            ) ||
                                            e.editor.querySelector(
                                                "img,table,jodit,iframe,hr"
                                            ) ||
                                            (t &&
                                                ne.i.closest(
                                                    t,
                                                    "table",
                                                    e.editor
                                                ))
                                        ))
                                    ) {
                                        e.editor.innerHTML = "";
                                        const t = e.s.setCursorIn(e.editor);
                                        e.s.removeNode(t);
                                    }
                                }
                                onDelete(e, t = "char") {
                                    const i = this.j,
                                        s = i.selection;
                                    if (
                                        (s.isFocused() || s.focus(),
                                        ((e) =>
                                            !e.s.isCollapsed() &&
                                            (e.execCommand("Delete"), !0))(i))
                                    )
                                        return !1;
                                    const o = s.range,
                                        r = i.createInside.text(
                                            h.INVISIBLE_SPACE
                                        );
                                    try {
                                        if (
                                            (ne.i.safeInsertNode(o, r),
                                            !ne.i.isOrContains(i.editor, r))
                                        )
                                            return;
                                        if (
                                            i.e.fire(
                                                "backSpaceBeforeCases",
                                                e,
                                                r
                                            )
                                        )
                                            return !1;
                                        if (
                                            ((0, ae.F)(i, r, e),
                                            fe.some((s) => {
                                                if (
                                                    (0, p.isFunction)(s) &&
                                                    s(i, r, e, t)
                                                )
                                                    return !0;
                                            }))
                                        )
                                            return !1;
                                    } catch (e) {
                                        throw e;
                                    } finally {
                                        i.e.fire("backSpaceAfterDelete", e, r),
                                            this.safeRemoveEmptyNode(r);
                                    }
                                    return !1;
                                }
                                safeRemoveEmptyNode(e) {
                                    var t, i;
                                    const { range: s } = this.j.s;
                                    s.startContainer === e &&
                                        (e.previousSibling
                                            ? ne.i.isText(e.previousSibling)
                                                ? s.setStart(
                                                      e.previousSibling,
                                                      null !==
                                                          (i =
                                                              null ===
                                                                  (t =
                                                                      e
                                                                          .previousSibling
                                                                          .nodeValue) ||
                                                              void 0 === t
                                                                  ? void 0
                                                                  : t.length) &&
                                                          void 0 !== i
                                                          ? i
                                                          : 0
                                                  )
                                                : s.setStartAfter(
                                                      e.previousSibling
                                                  )
                                            : e.nextSibling &&
                                              (ne.i.isText(e.nextSibling)
                                                  ? s.setStart(e.nextSibling, 0)
                                                  : s.setStartBefore(
                                                        e.nextSibling
                                                    )),
                                        s.collapse(!0),
                                        this.j.s.selectRange(s)),
                                        ne.i.safeRemove(e);
                                }
                            }
                        ),
                        (d.D.prototype.controls.subscript = {
                            tags: ["sub"],
                            tooltip: "subscript",
                        }),
                        (d.D.prototype.controls.superscript = {
                            tags: ["sup"],
                            tooltip: "superscript",
                        }),
                        (d.D.prototype.controls.bold = {
                            tagRegExp: /^(strong|b)$/i,
                            tags: ["strong", "b"],
                            css: { "font-weight": ["bold", "700"] },
                            tooltip: "Bold",
                        }),
                        (d.D.prototype.controls.italic = {
                            tagRegExp: /^(em|i)$/i,
                            tags: ["em", "i"],
                            css: { "font-style": "italic" },
                            tooltip: "Italic",
                        }),
                        (d.D.prototype.controls.underline = {
                            tagRegExp: /^(u)$/i,
                            tags: ["u"],
                            css: { "text-decoration-line": "underline" },
                            tooltip: "Underline",
                        }),
                        (d.D.prototype.controls.strikethrough = {
                            tagRegExp: /^(s)$/i,
                            tags: ["s"],
                            css: { "text-decoration-line": "line-through" },
                            tooltip: "Strike through",
                        }),
                        f.pw.add("bold", (e) => {
                            const t = (t) => {
                                const i = d.D.defaultOptions.controls[t],
                                    s = { ...i.css };
                                let o;
                                return (
                                    Object.keys(s).forEach((e) => {
                                        o || (o = {}),
                                            (o[e] = (0, p.isArray)(s[e])
                                                ? s[e][0]
                                                : s[e]);
                                    }),
                                    e.s.applyStyle(o, {
                                        element: i.tags ? i.tags[0] : void 0,
                                    }),
                                    e.synchronizeValues(),
                                    !1
                                );
                            };
                            [
                                "bold",
                                "italic",
                                "underline",
                                "strikethrough",
                            ].forEach((t) => {
                                e.registerButton({
                                    name: t,
                                    group: "font-style",
                                });
                            }),
                                ["superscript", "subscript"].forEach((t) => {
                                    e.registerButton({
                                        name: t,
                                        group: "script",
                                    });
                                }),
                                e
                                    .registerCommand("bold", {
                                        exec: t,
                                        hotkeys: ["ctrl+b", "cmd+b"],
                                    })
                                    .registerCommand("italic", {
                                        exec: t,
                                        hotkeys: ["ctrl+i", "cmd+i"],
                                    })
                                    .registerCommand("underline", {
                                        exec: t,
                                        hotkeys: ["ctrl+u", "cmd+u"],
                                    })
                                    .registerCommand("strikethrough", {
                                        exec: t,
                                    })
                                    .registerCommand("subscript", { exec: t })
                                    .registerCommand("superscript", {
                                        exec: t,
                                    });
                        }),
                        te.J.set("bold", i(76958))
                            .set("italic", i(49914))
                            .set("strikethrough", i(10946))
                            .set("subscript", i(61228))
                            .set("superscript", i(56095))
                            .set("underline", i(95347)),
                        (d.D.prototype.controls.classSpan = {
                            command: "applyClassName",
                            exec: p.memorizeExec,
                            list: [
                                "enabled",
                                "disabled",
                                "activated",
                                "text-left",
                                "text-center",
                                "text-right",
                                "warning",
                                "error",
                            ],
                            isChildActive(e, t) {
                                const i = e.s.current();
                                if (i) {
                                    const s =
                                        ne.i.closest(
                                            i,
                                            ne.i.isElement,
                                            e.editor
                                        ) || e.editor;
                                    return !(
                                        !t.args ||
                                        !s.classList.contains("" + t.args[0])
                                    );
                                }
                                return !1;
                            },
                            isActive(e, t) {
                                const i = e.s.current();
                                if (i) {
                                    const s =
                                        ne.i.closest(
                                            i,
                                            ne.i.isElement,
                                            e.editor
                                        ) || e.editor;
                                    let o = !1;
                                    return (
                                        t.list &&
                                            Object.keys(t.list).forEach((e) => {
                                                s.classList.contains(e) &&
                                                    (o = !0);
                                            }),
                                        !(
                                            !s ||
                                            s === e.editor ||
                                            void 0 === t.list ||
                                            !o
                                        )
                                    );
                                }
                                return !1;
                            },
                            childTemplate(e, t, i) {
                                return `<span class="${t}">${e.i18n(i)}</span>`;
                            },
                            tooltip: "Insert className",
                        }),
                        f.pw.add(
                            "classSpan",
                            class ve extends re.S {
                                constructor() {
                                    super(...arguments),
                                        (this.buttons = [
                                            {
                                                name: "classSpan",
                                                group: "font",
                                            },
                                        ]);
                                }
                                afterInit(e) {
                                    e.registerCommand(
                                        "applyClassName",
                                        (t, i, s) => (
                                            e.s.applyStyle(void 0, {
                                                className: s,
                                            }),
                                            !1
                                        )
                                    );
                                }
                                beforeDestruct() {}
                            }
                        ),
                        ie.JO.set("class-span", i(54));
                    var be = i(84159),
                        ye = i(27056),
                        we = i(29235),
                        ke = i(95049),
                        Ce = i(20405);
                    function Se(e) {
                        const t = /([^[]*)\[([^\]]+)]/,
                            i = /[\s]*,[\s]*/,
                            s = /^(.*)[\s]*=[\s]*(.*)$/,
                            o = {};
                        return (0, Ce.H)(e)
                            ? (e.split(i).map((e) => {
                                  e = (0, ke.f)(e);
                                  const r = t.exec(e),
                                      n = {},
                                      a = (e) => {
                                          e = (0, ke.f)(e);
                                          const t = s.exec(e);
                                          t ? (n[t[1]] = t[2]) : (n[e] = !0);
                                      };
                                  if (r) {
                                      const e = r[2].split(i);
                                      r[1] &&
                                          (e.forEach(a),
                                          (o[r[1].toUpperCase()] = n));
                                  } else o[e.toUpperCase()] = !0;
                              }),
                              o)
                            : !!e &&
                                  (Object.keys(e).forEach((t) => {
                                      o[t.toUpperCase()] = e[t];
                                  }),
                                  o);
                    }
                    function xe(e, t) {
                        const { s: i } = e;
                        let s = t;
                        if (!s) {
                            s = e.createInside.fake();
                            const { range: t } = i;
                            le.i.safeInsertNode(t, s), t.collapse();
                        }
                        const o = le.i.furthest(s, Ee, e.editor);
                        if (o)
                            if (i.cursorOnTheLeft(o)) le.i.before(o, s);
                            else if (i.cursorOnTheRight(o)) le.i.after(o, s);
                            else {
                                const e = i.splitSelection(o);
                                e && le.i.after(e, s);
                            }
                        t || (i.setCursorBefore(s), le.i.safeRemove(s));
                    }
                    function Ee(e) {
                        return (
                            le.i.isInlineBlock(e) &&
                            !le.i.isTag(e, h.INSEPARABLE_TAGS)
                        );
                    }
                    function _e(e, t, i) {
                        const s = ((e, t, i) => {
                            if (!i || !le.i.isHTMLElement(t)) return t;
                            const s =
                                i[t.nodeName.toLowerCase()] || i[t.nodeName];
                            return s
                                ? le.i.replace(t, s, e.createInside, !0, !1)
                                : t;
                        })(e, t, e.o.cleanHTML.replaceOldTags);
                        return t !== s ? ((t = s), !0) : i;
                    }
                    function je(e, t, i, s) {
                        if (s && le.i.isElement(t) && !0 !== s[t.nodeName]) {
                            const e = t.attributes;
                            if (e && e.length) {
                                const o = [];
                                for (let i = 0; e.length > i; i += 1) {
                                    const r = s[t.nodeName][e[i].name];
                                    (!r || (!0 !== r && r !== e[i].value)) &&
                                        o.push(e[i].name);
                                }
                                o.length && (i = !0),
                                    o.forEach((e) => {
                                        t.removeAttribute(e);
                                    });
                            }
                        }
                        return i;
                    }
                    function ze(e, t, i) {
                        if (
                            e.o.cleanHTML.fillEmptyParagraph &&
                            le.i.isBlock(t) &&
                            le.i.isEmpty(t, h.INSEPARABLE_TAGS)
                        ) {
                            const i = e.createInside.element("br");
                            return t.appendChild(i), !0;
                        }
                        return i;
                    }
                    function Te(e, t, i, s, o, r) {
                        return ((e, t, i, s, o) =>
                            !(
                                le.i.isText(t) ||
                                !((s && !s[t.nodeName]) || (o && o[t.nodeName]))
                            ) ||
                            (e.o.cleanHTML.removeEmptyElements &&
                                le.i.isElement(t) &&
                                null != t.nodeName.match(h.IS_INLINE) &&
                                !le.i.isTemporary(t) &&
                                0 === (0, ke.f)(t.innerHTML).length &&
                                (null == i || !le.i.isOrContains(t, i))))(
                            e,
                            t,
                            r,
                            s,
                            o
                        )
                            ? (le.i.safeRemove(t), !0)
                            : i;
                    }
                    function Ie(e, t, i, s, o, r) {
                        return le.i.isText(t) && !t.nodeValue
                            ? (t === r &&
                                  e.s.isCollapsed() &&
                                  e.s.setCursorAfter(t),
                              le.i.safeRemove(t),
                              !0)
                            : i;
                    }
                    function Le(e, t, i, s, o, r) {
                        return r !== t &&
                            le.i.isText(t) &&
                            null != t.nodeValue &&
                            (0, h.INVISIBLE_SPACE_REG_EXP)().test(t.nodeValue)
                            ? ((t.nodeValue = t.nodeValue.replace(
                                  (0, h.INVISIBLE_SPACE_REG_EXP)(),
                                  ""
                              )),
                              t === r &&
                                  e.s.isCollapsed() &&
                                  e.s.setCursorAfter(t),
                              t.nodeValue || le.i.safeRemove(t),
                              !0)
                            : i;
                    }
                    function Me(e, t, i) {
                        return (
                            !(
                                !le.i.isElement(t) ||
                                !(0, p.sanitizeHTMLElement)(t, {
                                    safeJavaScriptLink:
                                        e.options.cleanHTML.safeJavaScriptLink,
                                    removeOnError:
                                        e.options.cleanHTML.removeOnError,
                                })
                            ) || i
                        );
                    }
                    const Ae = Object.keys(o);
                    (d.D.prototype.cleanHTML = {
                        timeout: 300,
                        removeEmptyElements: !0,
                        fillEmptyParagraph: !0,
                        replaceNBSP: !0,
                        replaceOldTags: { i: "em", b: "strong" },
                        allowTags: !1,
                        denyTags: "script",
                        useIframeSandbox: !1,
                        removeOnError: !0,
                        safeJavaScriptLink: !0,
                        disableCleanFilter: null,
                    }),
                        (d.D.prototype.controls.eraser = {
                            command: "removeFormat",
                            tooltip: "Clear Formatting",
                        }),
                        te.J.set("eraser", i(2113));
                    class De extends ye.S {
                        constructor() {
                            super(...arguments),
                                (this.buttons = [
                                    { name: "eraser", group: "font-style" },
                                ]),
                                (this.currentSelectionNode = null),
                                (this.walker = new we.b(this.j.async, {
                                    timeout: this.j.o.cleanHTML.timeout,
                                }));
                        }
                        afterInit(e) {}
                        get isEditMode() {
                            return !(
                                this.j.isInDestruct ||
                                !this.j.isEditorMode() ||
                                this.j.getReadOnly()
                            );
                        }
                        onChangeCleanHTML() {
                            if (!this.isEditMode) return;
                            const e = this.j;
                            this.walker.setWork(e.editor),
                                (this.currentSelectionNode = e.s.current());
                        }
                        startWalker() {
                            const { jodit: e } = this,
                                t = Se(this.j.o.cleanHTML.allowTags),
                                i = Se(this.j.o.cleanHTML.denyTags);
                            this.walker
                                .on("visit", (s) =>
                                    ((e, t, i, s, r) => {
                                        let n = !1;
                                        const a =
                                            e.o.cleanHTML.disableCleanFilter;
                                        for (const l of Ae)
                                            if (
                                                !(
                                                    (a && a.has(l)) ||
                                                    ((n = (0, o[l])(
                                                        e,
                                                        t,
                                                        n,
                                                        i,
                                                        s,
                                                        r
                                                    )),
                                                    t.isConnected)
                                                )
                                            )
                                                return !0;
                                        return n;
                                    })(e, s, t, i, this.currentSelectionNode)
                                )
                                .on("end", (e) => {
                                    this.j.e.fire(
                                        e
                                            ? "internalChange finishedCleanHTMLWorker"
                                            : "finishedCleanHTMLWorker"
                                    );
                                });
                        }
                        beforeCommand(e) {
                            if ("removeformat" === e.toLowerCase())
                                return (
                                    this.j.s.isCollapsed()
                                        ? xe(this.j)
                                        : ((e) => {
                                              const {
                                                      s: t,
                                                      editor: i,
                                                      createInside: s,
                                                  } = e,
                                                  { range: o } = t,
                                                  r = o.cloneRange(),
                                                  n = o.cloneRange(),
                                                  a = s.fake(),
                                                  l = s.fake();
                                              r.collapse(!0),
                                                  n.collapse(!1),
                                                  le.i.safeInsertNode(r, a),
                                                  le.i.safeInsertNode(n, l),
                                                  o.setStartBefore(a),
                                                  o.collapse(!0),
                                                  t.selectRange(o),
                                                  xe(e, a),
                                                  o.setEndAfter(l),
                                                  o.collapse(!1),
                                                  t.selectRange(o),
                                                  xe(e, l);
                                              const c = [];
                                              le.i.between(a, l, (e) => {
                                                  Ee(e) &&
                                                      !le.i.isTag(e, ["a"]) &&
                                                      c.push(e),
                                                      le.i.isElement(e) &&
                                                          (0, me.attr)(
                                                              e,
                                                              "style"
                                                          ) &&
                                                          (0, me.attr)(
                                                              e,
                                                              "style",
                                                              null
                                                          );
                                              }),
                                                  c.forEach((e) =>
                                                      le.i.unwrap(e)
                                                  );
                                              const d = (e, t) => {
                                                  if (
                                                      !le.i.findNotEmptySibling(
                                                          e,
                                                          t
                                                      )
                                                  ) {
                                                      const s = e.parentNode;
                                                      if (
                                                          s &&
                                                          s !== i &&
                                                          (0, me.attr)(
                                                              s,
                                                              "style"
                                                          )
                                                      )
                                                          return (
                                                              (0, me.attr)(
                                                                  s,
                                                                  "style",
                                                                  null
                                                              ),
                                                              d(s, t),
                                                              !0
                                                          );
                                                  }
                                              };
                                              d(a, !0) && d(l, !1),
                                                  o.setStartAfter(a),
                                                  o.setEndBefore(l),
                                                  t.selectRange(o),
                                                  le.i.safeRemove(a),
                                                  le.i.safeRemove(l);
                                          })(this.j),
                                    !1
                                );
                        }
                        onBeforeSetNativeEditorValue(e) {
                            const t = this.j.o.cleanHTML.useIframeSandbox
                                ? this.j.createInside.sandbox()
                                : this.j.createInside.div();
                            return (
                                (t.innerHTML = e.value),
                                this.onSafeHTML(t),
                                (e.value = t.innerHTML),
                                (0, be.e)(t, {
                                    safeJavaScriptLink: !0,
                                    removeOnError: !0,
                                }),
                                le.i.safeRemove(t),
                                !1
                            );
                        }
                        onSafeHTML(e) {
                            (0, be.e)(e, this.j.o.cleanHTML);
                        }
                        beforeDestruct() {
                            this.walker.destruct();
                        }
                    }
                    (0, c.gn)(
                        [
                            (0, g.watch)([
                                ":change",
                                ":afterSetMode",
                                ":afterInit",
                                ":mousedown",
                                ":keydown",
                            ]),
                        ],
                        De.prototype,
                        "onChangeCleanHTML",
                        null
                    ),
                        (0, c.gn)(
                            [(0, g.hook)("ready")],
                            De.prototype,
                            "startWalker",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":beforeCommand")],
                            De.prototype,
                            "beforeCommand",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":beforeSetNativeEditorValue")],
                            De.prototype,
                            "onBeforeSetNativeEditorValue",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":safeHTML")],
                            De.prototype,
                            "onSafeHTML",
                            null
                        ),
                        f.pw.add("cleanHtml", De),
                        (d.D.prototype.controls.cut = {
                            command: "cut",
                            isDisabled(e) {
                                return e.s.isCollapsed();
                            },
                            tooltip: "Cut selection",
                        }),
                        (d.D.prototype.controls.copy = {
                            command: "copy",
                            isDisabled(e) {
                                return e.s.isCollapsed();
                            },
                            tooltip: "Copy selection",
                        }),
                        (d.D.prototype.controls.selectall = {
                            icon: "select-all",
                            command: "selectall",
                            tooltip: "Select all",
                        }),
                        te.J.set("copy", i(41567))
                            .set("cut", i(29129))
                            .set("paste", i(1307))
                            .set("select-all", i(58939)),
                        f.pw.add(
                            "clipboard",
                            class Pe {
                                constructor() {
                                    this.buttons = [
                                        { name: "cut", group: "clipboard" },
                                        { name: "copy", group: "clipboard" },
                                        { name: "paste", group: "clipboard" },
                                        {
                                            name: "selectall",
                                            group: "clipboard",
                                        },
                                    ];
                                }
                                init(e) {
                                    var t;
                                    null === (t = this.buttons) ||
                                        void 0 === t ||
                                        t.forEach((t) => e.registerButton(t)),
                                        e.e
                                            .off(
                                                `copy.${h.CLIPBOARD_ID} cut.${h.CLIPBOARD_ID}`
                                            )
                                            .on(
                                                `copy.${h.CLIPBOARD_ID} cut.${h.CLIPBOARD_ID}`,
                                                (t) => {
                                                    var i;
                                                    const s = e.s.html,
                                                        o =
                                                            (0,
                                                            p.getDataTransfer)(
                                                                t
                                                            ) ||
                                                            (0,
                                                            p.getDataTransfer)(
                                                                e.ew
                                                            ) ||
                                                            (0,
                                                            p.getDataTransfer)(
                                                                t.originalEvent
                                                            );
                                                    o &&
                                                        (o.setData(
                                                            h.TEXT_PLAIN,
                                                            (0, p.stripTags)(s)
                                                        ),
                                                        o.setData(
                                                            h.TEXT_HTML,
                                                            s
                                                        )),
                                                        e.buffer.set(
                                                            h.CLIPBOARD_ID,
                                                            s
                                                        ),
                                                        e.e.fire("pasteStack", {
                                                            html: s,
                                                            action:
                                                                e.o
                                                                    .defaultActionOnPaste ||
                                                                h.INSERT_AS_HTML,
                                                        }),
                                                        "cut" === t.type &&
                                                            (e.s.remove(),
                                                            e.s.focus()),
                                                        t.preventDefault(),
                                                        null ===
                                                            (i =
                                                                null == e
                                                                    ? void 0
                                                                    : e.events) ||
                                                            void 0 === i ||
                                                            i.fire(
                                                                "afterCopy",
                                                                s
                                                            );
                                                }
                                            );
                                }
                                destruct(e) {
                                    var t, i;
                                    null ===
                                        (t = null == e ? void 0 : e.buffer) ||
                                        void 0 === t ||
                                        t.set(h.CLIPBOARD_ID, ""),
                                        null ===
                                            (i =
                                                null == e
                                                    ? void 0
                                                    : e.events) ||
                                            void 0 === i ||
                                            i.off("." + h.CLIPBOARD_ID);
                                }
                            }
                        );
                    var Ne = i(23963);
                    te.J.set("brush", i(23129)),
                        (d.D.prototype.controls.brush = {
                            update(e, t) {
                                const i = (0, p.dataBind)(e, "color"),
                                    s = (i, s) => {
                                        s &&
                                            s !==
                                                "" + (0, p.css)(t.editor, i) &&
                                            (e.state.icon.fill = s);
                                    };
                                if (i) {
                                    const t = (0, p.dataBind)(e, "color");
                                    return void s(
                                        "color" === t ? t : "background-color",
                                        i
                                    );
                                }
                                const o = t.s.current();
                                if (o && !e.state.disabled) {
                                    const e =
                                        le.i.closest(
                                            o,
                                            le.i.isElement,
                                            t.editor
                                        ) || t.editor;
                                    s("color", "" + (0, p.css)(e, "color")),
                                        s(
                                            "background-color",
                                            "" +
                                                (0, p.css)(
                                                    e,
                                                    "background-color"
                                                )
                                        );
                                }
                                (e.state.icon.fill = ""),
                                    (e.state.activated = !1);
                            },
                            popup(e, t, i, s, o) {
                                let r = "",
                                    n = "",
                                    a = [],
                                    l = null;
                                return (
                                    t &&
                                        t !== e.editor &&
                                        le.i.isNode(t) &&
                                        (le.i.isElement(t) &&
                                            e.s.isCollapsed() &&
                                            !le.i.isTag(t, ["br", "hr"]) &&
                                            (l = t),
                                        le.i.up(
                                            t,
                                            (e) => {
                                                if (le.i.isHTMLElement(e)) {
                                                    const t = (0, p.css)(
                                                            e,
                                                            "color",
                                                            !0
                                                        ),
                                                        i = (0, p.css)(
                                                            e,
                                                            "background-color",
                                                            !0
                                                        );
                                                    if (t)
                                                        return (r = "" + t), !0;
                                                    if (i)
                                                        return (n = "" + i), !0;
                                                }
                                            },
                                            e.editor
                                        )),
                                    (a = [
                                        {
                                            name: "Background",
                                            content: (0, Ne.YW)(
                                                e,
                                                (t) => {
                                                    l
                                                        ? (l.style.backgroundColor =
                                                              t)
                                                        : e.execCommand(
                                                              "background",
                                                              !1,
                                                              t
                                                          ),
                                                        (0, p.dataBind)(
                                                            o,
                                                            "color",
                                                            t
                                                        ),
                                                        (0, p.dataBind)(
                                                            o,
                                                            "color-mode",
                                                            "background"
                                                        ),
                                                        s();
                                                },
                                                n
                                            ),
                                        },
                                        {
                                            name: "Text",
                                            content: (0, Ne.YW)(
                                                e,
                                                (t) => {
                                                    l
                                                        ? (l.style.color = t)
                                                        : e.execCommand(
                                                              "forecolor",
                                                              !1,
                                                              t
                                                          ),
                                                        (0, p.dataBind)(
                                                            o,
                                                            "color",
                                                            t
                                                        ),
                                                        (0, p.dataBind)(
                                                            o,
                                                            "color-mode",
                                                            "color"
                                                        ),
                                                        s();
                                                },
                                                r
                                            ),
                                        },
                                    ]),
                                    "background" !==
                                        e.o.colorPickerDefaultTab &&
                                        (a = a.reverse()),
                                    (0, Ne.IL)(e, a, l)
                                );
                            },
                            exec(e, t, { button: i }) {
                                const s = (0, p.dataBind)(i, "color-mode"),
                                    o = (0, p.dataBind)(i, "color");
                                if (!s) return !1;
                                if (
                                    t &&
                                    t !== e.editor &&
                                    le.i.isNode(t) &&
                                    le.i.isElement(t)
                                )
                                    switch (s) {
                                        case "color":
                                            t.style.color = o;
                                            break;
                                        case "background":
                                            t.style.backgroundColor = o;
                                    }
                                else
                                    e.execCommand(
                                        "background" === s ? s : "forecolor",
                                        !1,
                                        o
                                    );
                            },
                            tooltip: "Fill color or set the text color",
                        }),
                        f.pw.add("color", (e) => {
                            e.registerButton({ name: "brush", group: "color" });
                            const t = (t, i, s) => {
                                const o = (0, p.normalizeColor)(s);
                                switch (t) {
                                    case "background":
                                        e.s.applyStyle({
                                            backgroundColor: o || "",
                                        });
                                        break;
                                    case "forecolor":
                                        e.s.applyStyle({ color: o || "" });
                                }
                                return e.synchronizeValues(), !1;
                            };
                            e.registerCommand("forecolor", t).registerCommand(
                                "background",
                                t
                            );
                        });
                    var Re = i(47077);
                    const qe = "copy-format",
                        Be = [
                            "fontWeight",
                            "fontStyle",
                            "fontSize",
                            "color",
                            "margin",
                            "padding",
                            "borderWidth",
                            "borderStyle",
                            "borderColor",
                            "borderRadius",
                            "backgroundColor",
                            "textDecorationLine",
                            "fontFamily",
                        ],
                        Oe = (e, t, i, s) => {
                            let o = (0, Re.i)(i, t);
                            return (
                                o === s[t] &&
                                    (o =
                                        i.parentNode &&
                                        i !== e.editor &&
                                        i.parentNode !== e.editor
                                            ? Oe(e, t, i.parentNode, s)
                                            : void 0),
                                o
                            );
                        };
                    (d.D.prototype.controls.copyformat = {
                        exec(e, t, { button: i }) {
                            if (t) {
                                if (e.buffer.exists(qe))
                                    e.buffer.delete(qe),
                                        e.e.off(e.editor, "mouseup." + qe);
                                else {
                                    const i = {},
                                        s =
                                            le.i.up(
                                                t,
                                                (e) => e && !le.i.isText(e),
                                                e.editor
                                            ) || e.editor,
                                        o = e.createInside.span();
                                    e.editor.appendChild(o),
                                        Be.forEach((e) => {
                                            i[e] = (0, Re.i)(o, e);
                                        }),
                                        o !== e.editor && le.i.safeRemove(o);
                                    const r = ((e, t, i) => {
                                            const s = {};
                                            return (
                                                t &&
                                                    Be.forEach((o) => {
                                                        (s[o] = Oe(e, o, t, i)),
                                                            o.match(
                                                                /border(Style|Color)/
                                                            ) &&
                                                                !s.borderWidth &&
                                                                (s[o] = void 0);
                                                    }),
                                                s
                                            );
                                        })(e, s, i),
                                        n = () => {
                                            e.buffer.delete(qe);
                                            const t = e.s.current();
                                            t &&
                                                (le.i.isTag(t, "img")
                                                    ? (0, Re.i)(t, r)
                                                    : e.s.applyStyle(r)),
                                                e.e.off(
                                                    e.editor,
                                                    "mouseup." + qe
                                                );
                                        };
                                    e.e.on(e.editor, "mouseup." + qe, n),
                                        e.buffer.set(qe, !0);
                                }
                                i.update();
                            }
                        },
                        isActive(e) {
                            return e.buffer.exists(qe);
                        },
                        tooltip: "Paint format",
                    }),
                        f.pw.add("copyformat", (e) => {
                            e.registerButton({
                                name: "copyformat",
                                group: "clipboard",
                            }),
                                (0, f.xl)(i(8039));
                        }),
                        te.J.set("copyformat", i(70209));
                    var He,
                        Fe = i(26609);
                    class Ve extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.isFragmentFromEditor = !1),
                                (this.isCopyMode = !1),
                                (this.startDragPoint = { x: 0, y: 0 }),
                                (this.draggable = null),
                                (this.bufferRange = null),
                                (this.getText = (e) => {
                                    const t = (0, p.getDataTransfer)(e);
                                    return t
                                        ? t.getData(h.TEXT_HTML) ||
                                              t.getData(h.TEXT_PLAIN)
                                        : null;
                                });
                        }
                        afterInit() {
                            this.j.e.on(
                                [window, this.j.ed, this.j.editor],
                                "dragstart.DragAndDrop",
                                this.onDragStart
                            );
                        }
                        onDragStart(e) {
                            let t = e.target;
                            if (
                                (this.onDragEnd(),
                                (this.isFragmentFromEditor = le.i.isOrContains(
                                    this.j.editor,
                                    t,
                                    !0
                                )),
                                (this.isCopyMode =
                                    !this.isFragmentFromEditor ||
                                    (0, p.ctrlKey)(e)),
                                this.isFragmentFromEditor)
                            ) {
                                const e = this.j.s.sel,
                                    t =
                                        e && e.rangeCount
                                            ? e.getRangeAt(0)
                                            : null;
                                t && (this.bufferRange = t.cloneRange());
                            } else this.bufferRange = null;
                            (this.startDragPoint.x = e.clientX),
                                (this.startDragPoint.y = e.clientY),
                                (0, Fe.F)(t) && (t = t.querySelector("img")),
                                le.i.isTag(t, "img") &&
                                    ((this.draggable = t.cloneNode(!0)),
                                    (0, p.dataBind)(
                                        this.draggable,
                                        "target",
                                        t
                                    )),
                                this.addDragListeners();
                        }
                        addDragListeners() {
                            this.j.e
                                .on("dragover", this.onDrag)
                                .on("drop.DragAndDrop", this.onDrop)
                                .on(
                                    window,
                                    "dragend.DragAndDrop drop.DragAndDrop mouseup.DragAndDrop",
                                    this.onDragEnd
                                );
                        }
                        removeDragListeners() {
                            this.j.e
                                .off("dragover", this.onDrag)
                                .off("drop.DragAndDrop", this.onDrop)
                                .off(
                                    window,
                                    "dragend.DragAndDrop drop.DragAndDrop mouseup.DragAndDrop",
                                    this.onDragEnd
                                );
                        }
                        onDrag(e) {
                            this.draggable &&
                                (this.j.e.fire("hidePopup"),
                                this.j.s.insertCursorAtPoint(
                                    e.clientX,
                                    e.clientY
                                ),
                                e.preventDefault(),
                                e.stopPropagation());
                        }
                        onDragEnd() {
                            this.draggable &&
                                (le.i.safeRemove(this.draggable),
                                (this.draggable = null)),
                                (this.isCopyMode = !1),
                                this.removeDragListeners();
                        }
                        onDrop(e) {
                            if (
                                !e.dataTransfer ||
                                !e.dataTransfer.files ||
                                !e.dataTransfer.files.length
                            ) {
                                if (
                                    !this.isFragmentFromEditor &&
                                    !this.draggable
                                )
                                    return (
                                        this.j.e.fire("paste", e),
                                        e.preventDefault(),
                                        e.stopPropagation(),
                                        !1
                                    );
                                const t = this.j.s.sel,
                                    i =
                                        this.bufferRange ||
                                        (t && t.rangeCount
                                            ? t.getRangeAt(0)
                                            : null);
                                let s = null;
                                if (!this.draggable && i)
                                    s = this.isCopyMode
                                        ? i.cloneContents()
                                        : i.extractContents();
                                else if (this.draggable)
                                    if (this.isCopyMode) {
                                        const [e, t] =
                                            "1" ===
                                            (0, p.attr)(
                                                this.draggable,
                                                "-is-file"
                                            )
                                                ? ["a", "href"]
                                                : ["img", "src"];
                                        (s = this.j.createInside.element(e)),
                                            s.setAttribute(
                                                t,
                                                (0, p.attr)(
                                                    this.draggable,
                                                    "data-src"
                                                ) ||
                                                    (0, p.attr)(
                                                        this.draggable,
                                                        "src"
                                                    ) ||
                                                    ""
                                            ),
                                            "a" === e &&
                                                (s.textContent =
                                                    (0, p.attr)(s, t) || "");
                                    } else
                                        s = (0, p.dataBind)(
                                            this.draggable,
                                            "target"
                                        );
                                else
                                    this.getText(e) &&
                                        (s = this.j.createInside.fromHTML(
                                            this.getText(e)
                                        ));
                                t && t.removeAllRanges(),
                                    this.j.s.insertCursorAtPoint(
                                        e.clientX,
                                        e.clientY
                                    ),
                                    s &&
                                        (this.j.s.insertNode(s, !1, !1),
                                        i &&
                                            s.firstChild &&
                                            s.lastChild &&
                                            (i.setStartBefore(s.firstChild),
                                            i.setEndAfter(s.lastChild),
                                            this.j.s.selectRange(i),
                                            this.j.e.fire("synchro")),
                                        le.i.isTag(s, "img") &&
                                            this.j.events &&
                                            this.j.e.fire(
                                                "afterInsertImage",
                                                s
                                            )),
                                    e.preventDefault(),
                                    e.stopPropagation();
                            }
                            (this.isFragmentFromEditor = !1),
                                this.removeDragListeners();
                        }
                        beforeDestruct() {
                            this.onDragEnd(),
                                this.j.e
                                    .off(window, ".DragAndDrop")
                                    .off(".DragAndDrop")
                                    .off(
                                        [window, this.j.ed, this.j.editor],
                                        "dragstart.DragAndDrop",
                                        this.onDragStart
                                    );
                        }
                    }
                    (0, c.gn)([g.autobind], Ve.prototype, "onDragStart", null),
                        (0, c.gn)(
                            [(0, g.throttle)((e) => e.defaultTimeout / 10)],
                            Ve.prototype,
                            "onDrag",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Ve.prototype,
                            "onDragEnd",
                            null
                        ),
                        (0, c.gn)([g.autobind], Ve.prototype, "onDrop", null),
                        f.pw.add("dragAndDrop", Ve),
                        (d.D.prototype.draggableTags = [
                            "img",
                            "jodit-media",
                            "jodit",
                        ]),
                        ((e) => {
                            (e[(e.IDLE = 0)] = "IDLE"),
                                (e[(e.WAIT_DRAGGING = 1)] = "WAIT_DRAGGING"),
                                (e[(e.DRAGGING = 2)] = "DRAGGING");
                        })(He || (He = {}));
                    class We extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.dragList = []),
                                (this.draggable = null),
                                (this.isCopyMode = !1),
                                (this.diffStep = 10),
                                (this.startX = 0),
                                (this.startY = 0),
                                (this.state = He.IDLE);
                        }
                        afterInit() {
                            (this.dragList = this.j.o.draggableTags
                                ? (0, p.splitArray)(this.j.o.draggableTags)
                                      .filter(Boolean)
                                      .map((e) => e.toLowerCase())
                                : []),
                                this.dragList.length &&
                                    this.j.e.on(
                                        "mousedown dragstart",
                                        this.onDragStart
                                    );
                        }
                        onDragStart(e) {
                            if ("dragstart" === e.type && this.draggable)
                                return !1;
                            if (this.state > He.IDLE) return;
                            const t = e.target;
                            if (!this.dragList.length || !t) return;
                            const i = (e) =>
                                !(
                                    !e ||
                                    !this.dragList.includes(
                                        e.nodeName.toLowerCase()
                                    )
                                );
                            let s =
                                ne.i.furthest(t, i, this.j.editor) ||
                                (i(t) ? t : null);
                            s &&
                                (ne.i.isTag(s.parentElement, "a") &&
                                    s.parentElement.firstChild === s &&
                                    s.parentElement.lastChild === s &&
                                    (s = s.parentElement),
                                (this.startX = e.clientX),
                                (this.startY = e.clientY),
                                (this.isCopyMode = (0, p.ctrlKey)(e)),
                                (this.draggable = s.cloneNode(!0)),
                                (0, p.dataBind)(this.draggable, "target", s),
                                (this.state = He.WAIT_DRAGGING),
                                this.addDragListeners());
                        }
                        onDrag(e) {
                            var t, i;
                            if (!this.draggable || this.state === He.IDLE)
                                return;
                            const s = e.clientY;
                            if (
                                this.state !== He.WAIT_DRAGGING ||
                                Math.sqrt(
                                    Math.pow(e.clientX - this.startX, 2) +
                                        Math.pow(s - this.startY, 2)
                                ) >= this.diffStep
                            ) {
                                if (
                                    (this.state === He.WAIT_DRAGGING &&
                                        (this.j.lock("drag-and-drop-element"),
                                        (this.state = He.DRAGGING)),
                                    this.j.e.fire("hidePopup hideResizer"),
                                    !this.draggable.parentNode)
                                ) {
                                    const s = (0, p.dataBind)(
                                        this.draggable,
                                        "target"
                                    );
                                    (0, p.css)(this.draggable, {
                                        zIndex: 1e13,
                                        pointerEvents: "none",
                                        pointer: "drag",
                                        position: "fixed",
                                        opacity: 0.7,
                                        display: "inline-block",
                                        left: e.clientX,
                                        top: e.clientY,
                                        width:
                                            null !==
                                                (t =
                                                    null == s
                                                        ? void 0
                                                        : s.offsetWidth) &&
                                            void 0 !== t
                                                ? t
                                                : 100,
                                        height:
                                            null !==
                                                (i =
                                                    null == s
                                                        ? void 0
                                                        : s.offsetHeight) &&
                                            void 0 !== i
                                                ? i
                                                : 100,
                                    }),
                                        (0, f.ZO)(this.j, We).appendChild(
                                            this.draggable
                                        );
                                }
                                (0, p.css)(this.draggable, {
                                    left: e.clientX,
                                    top: e.clientY,
                                }),
                                    this.j.s.insertCursorAtPoint(
                                        e.clientX,
                                        e.clientY
                                    );
                            }
                        }
                        onDragEnd() {
                            this.isInDestruct ||
                                (this.removeDragListeners(),
                                this.j.unlock(),
                                (this.state = He.IDLE),
                                this.draggable &&
                                    (ne.i.safeRemove(this.draggable),
                                    (this.draggable = null)));
                        }
                        onDrop() {
                            if (!this.draggable || He.DRAGGING > this.state)
                                return void this.onDragEnd();
                            let e = (0, p.dataBind)(this.draggable, "target");
                            this.onDragEnd(),
                                this.isCopyMode && (e = e.cloneNode(!0));
                            const { parentElement: t } = e;
                            this.j.s.insertNode(e, !0, !1),
                                t &&
                                    ne.i.isEmpty(t) &&
                                    !ne.i.isTag(t, ["td", "th"]) &&
                                    ne.i.safeRemove(t),
                                ne.i.isTag(e, "img") &&
                                    this.j.e &&
                                    this.j.e.fire("afterInsertImage", e),
                                this.j.e.fire("synchro");
                        }
                        addDragListeners() {
                            this.j.e
                                .on(this.j.editor, "mousemove", this.onDrag)
                                .on("mouseup", this.onDrop)
                                .on(
                                    [this.j.ew, this.ow],
                                    "mouseup",
                                    this.onDragEnd
                                );
                        }
                        removeDragListeners() {
                            this.j.e
                                .off(this.j.editor, "mousemove", this.onDrag)
                                .off("mouseup", this.onDrop)
                                .off(
                                    [this.j.ew, this.ow],
                                    "mouseup",
                                    this.onDragEnd
                                );
                        }
                        beforeDestruct() {
                            this.onDragEnd(),
                                this.j.e.off(
                                    "mousedown dragstart",
                                    this.onDragStart
                                ),
                                this.removeDragListeners();
                        }
                    }
                    (0, c.gn)([g.autobind], We.prototype, "onDragStart", null),
                        (0, c.gn)(
                            [(0, g.throttle)((e) => e.defaultTimeout / 10)],
                            We.prototype,
                            "onDrag",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            We.prototype,
                            "onDragEnd",
                            null
                        ),
                        (0, c.gn)([g.autobind], We.prototype, "onDrop", null),
                        f.pw.add("dragAndDropElement", We);
                    var $e = i(92886),
                        Ue = i(57999),
                        Ye = i(85641);
                    function Ge(e, t, i, s) {
                        var o, r;
                        const { s: n, createInside: a } = e,
                            l = a.element(i),
                            c = a.element("br");
                        l.appendChild(c),
                            s &&
                                s.cssText &&
                                l.setAttribute("style", s.cssText),
                            t && t.isConnected
                                ? (le.i.before(t, l), le.i.safeRemove(t))
                                : n.insertNode(l, !1, !1);
                        const d = n.createRange();
                        return (
                            d.setStartBefore("br" !== i.toLowerCase() ? c : l),
                            d.collapse(!0),
                            null === (o = n.sel) ||
                                void 0 === o ||
                                o.removeAllRanges(),
                            null === (r = n.sel) ||
                                void 0 === r ||
                                r.addRange(d),
                            (0, Ue.n)(l, e.editor, e.ed),
                            l
                        );
                    }
                    function Ke(e, t, i = h.IS_BLOCK) {
                        let s = t;
                        const o = e.editor;
                        do {
                            if (!s || s === o) break;
                            if (i.test(s.nodeName))
                                return le.i.isTag(s, "li")
                                    ? s
                                    : Ke(e, s.parentNode, /^li$/i) || s;
                            s = s.parentNode;
                        } while (s && s !== o);
                        return null;
                    }
                    class Je extends ye.S {
                        afterInit(e) {
                            const t = e.o.enter.toLowerCase(),
                                i = t === h.BR.toLowerCase();
                            e.o.enterBlock ||
                                (e.o.enterBlock = i ? h.PARAGRAPH : t),
                                e.registerCommand("enter", (e, t, i = {}) =>
                                    this.onEnter(i)
                                );
                        }
                        onEnterKeyDown(e) {
                            if (e.key === h.KEY_ENTER) {
                                const t = this.j,
                                    i = t.e.fire("beforeEnter", e);
                                return void 0 !== i
                                    ? i
                                    : (t.s.isCollapsed() ||
                                          t.execCommand("Delete"),
                                      t.s.focus(),
                                      this.onEnter(e),
                                      t.e.fire("afterEnter", e),
                                      t.synchronizeValues(),
                                      !1);
                            }
                        }
                        onEnter(e) {
                            const t = this.j,
                                i = this.getCurrentOrFillEmpty(t);
                            ((e, t, i) => {
                                const { s } = e,
                                    o = le.i.closest(t, ["a"], e.editor);
                                o &&
                                    (s.cursorOnTheRight(o)
                                        ? s.setCursorAfter(o)
                                        : s.cursorOnTheLeft(o) &&
                                          s.setCursorBefore(o));
                            })(t, i);
                            let s = Ke(t, i);
                            const o = le.i.isTag(s, "li");
                            return (
                                !!(
                                    (o && !(null == e ? void 0 : e.shiftKey)) ||
                                    ((e, t, i) => {
                                        const s = le.i.closest(
                                            t,
                                            ["pre", "blockquote"],
                                            e.editor
                                        );
                                        if (
                                            e.o.enter.toLowerCase() ===
                                                h.BR.toLowerCase() ||
                                            (i && !s) ||
                                            (!i && s)
                                        ) {
                                            const t =
                                                e.createInside.element("br");
                                            e.s.insertNode(t, !1, !1),
                                                le.i.findNotEmptySibling(
                                                    t,
                                                    !1
                                                ) ||
                                                    le.i.after(
                                                        t,
                                                        t.cloneNode()
                                                    );
                                            const i = e.s.range;
                                            return (
                                                i.setStartAfter(t),
                                                i.collapse(!0),
                                                e.s.selectRange(i),
                                                (0, Ue.n)(t, e.editor, e.ed),
                                                !1
                                            );
                                        }
                                        return !0;
                                    })(t, i, null == e ? void 0 : e.shiftKey)
                                ) &&
                                (s ||
                                    ((e, t) =>
                                        !!le.i.prev(
                                            t,
                                            (e) =>
                                                le.i.isBlock(e) ||
                                                le.i.isImage(e),
                                            e.editor
                                        ))(t, i) ||
                                    (s = ((e, t) => {
                                        let i = t;
                                        le.i.up(
                                            i,
                                            (t) => {
                                                t &&
                                                    t.hasChildNodes() &&
                                                    t !== e.editor &&
                                                    (i = t);
                                            },
                                            e.editor
                                        );
                                        const s = le.i.wrapInline(
                                            i,
                                            e.o.enter,
                                            e
                                        );
                                        if (le.i.isEmpty(s)) {
                                            const t =
                                                e.createInside.element("br");
                                            s.appendChild(t),
                                                e.s.setCursorBefore(t);
                                        }
                                        return s;
                                    })(t, i)),
                                s && s !== i
                                    ? !!((e, t) => {
                                          const i = e.s;
                                          if (!le.i.canSplitBlock(t)) {
                                              const t =
                                                  e.createInside.element("br");
                                              return (
                                                  i.insertNode(t, !1, !1),
                                                  i.setCursorAfter(t),
                                                  !1
                                              );
                                          }
                                          return !0;
                                      })(t, s) &&
                                      (o && this.__isEmptyListLeaf(s)
                                          ? (((e, t) => {
                                                const i = le.i.closest(
                                                    t,
                                                    ["ol", "ul"],
                                                    e.editor
                                                );
                                                if (!i) return;
                                                const s = i.parentElement,
                                                    o = le.i.isTag(s, "li"),
                                                    r = o ? s : i,
                                                    n = e.s.createRange();
                                                n.setStartAfter(t),
                                                    n.setEndAfter(i);
                                                const a = n.extractContents(),
                                                    l = e.createInside.fake();
                                                le.i.after(r, l),
                                                    le.i.safeRemove(t),
                                                    (0, Ye.$$)("li", i)
                                                        .length ||
                                                        le.i.safeRemove(i);
                                                const c = Ge(
                                                    e,
                                                    l,
                                                    o ? "li" : e.o.enter
                                                );
                                                a.querySelector("li") &&
                                                    (o
                                                        ? c.appendChild(a)
                                                        : le.i.after(c, a));
                                            })(t, s),
                                            !1)
                                          : void ((e, t) => {
                                                const i = e.s,
                                                    { enter: s } = e.o,
                                                    o = s.toLowerCase(),
                                                    r = le.i.isTag(t, "li"),
                                                    n =
                                                        t.tagName.toLowerCase() ===
                                                            o || r,
                                                    a = i.cursorOnTheRight(t),
                                                    l = i.cursorOnTheLeft(t);
                                                if (!n && (a || l)) {
                                                    let s = null;
                                                    return (
                                                        (s = a
                                                            ? i.setCursorAfter(
                                                                  t
                                                              )
                                                            : i.setCursorBefore(
                                                                  t
                                                              )),
                                                        Ge(e, s, o),
                                                        void (
                                                            l &&
                                                            !a &&
                                                            i.setCursorIn(t, !0)
                                                        )
                                                    );
                                                }
                                                const c = i.splitSelection(t);
                                                (0, Ue.n)(c, e.editor, e.ed);
                                            })(t, s))
                                    : (Ge(t, null, o ? "li" : t.o.enter), !1))
                            );
                        }
                        __isEmptyListLeaf(e) {
                            const t = this.j.e.fire("enterIsEmptyListLeaf", e);
                            return (0, $e.j)(t) ? t : le.i.isEmpty(e);
                        }
                        getCurrentOrFillEmpty(e) {
                            const { s: t } = e;
                            let i = t.current(!1);
                            return (
                                (i && i !== e.editor) ||
                                    ((i = e.createInside.text(
                                        h.INVISIBLE_SPACE
                                    )),
                                    t.insertNode(i, !1, !1),
                                    t.select(i)),
                                i
                            );
                        }
                        beforeDestruct(e) {
                            e.e.off("keydown.enter");
                        }
                    }
                    (0, c.gn)(
                        [(0, g.watch)(":keydown.enter")],
                        Je.prototype,
                        "onEnterKeyDown",
                        null
                    ),
                        f.pw.add("enter", Je),
                        (d.D.prototype.controls.file = {
                            popup(e, t, i, s) {
                                const o = (t, i = "") => {
                                    e.s.insertNode(
                                        e.createInside.fromHTML(
                                            `<a href="${t}" title="${i}">${
                                                i || t
                                            }</a>`
                                        )
                                    );
                                };
                                let r = null;
                                return (
                                    t &&
                                        (le.i.isTag(t, "a") ||
                                            le.i.closest(t, "a", e.editor)) &&
                                        (r = le.i.isTag(t, "a")
                                            ? t
                                            : le.i.closest(t, "a", e.editor)),
                                    (0, Ne.ov)(
                                        e,
                                        {
                                            filebrowser(e) {
                                                e.files &&
                                                    e.files.forEach((t) =>
                                                        o(e.baseurl + t)
                                                    ),
                                                    s();
                                            },
                                            upload: !0,
                                            url(e, t) {
                                                r
                                                    ? (r.setAttribute(
                                                          "href",
                                                          e
                                                      ),
                                                      r.setAttribute(
                                                          "title",
                                                          t
                                                      ))
                                                    : o(e, t),
                                                    s();
                                            },
                                        },
                                        r,
                                        s,
                                        !1
                                    )
                                );
                            },
                            tags: ["a"],
                            tooltip: "Insert file",
                        }),
                        f.pw.add("file", (e) => {
                            e.registerButton({ name: "file", group: "media" });
                        }),
                        (d.D.prototype.autofocus = !1),
                        (d.D.prototype.cursorAfterAutofocus = "end"),
                        (d.D.prototype.saveSelectionOnBlur = !0),
                        f.pw.add("focus", (e) => {
                            e.o.saveSelectionOnBlur &&
                                e.e
                                    .on("blur", () => {
                                        e.isEditorMode() && e.s.save(!0);
                                    })
                                    .on("focus", () => {
                                        e.s.restore();
                                    });
                            const t = () => {
                                if (
                                    (e.s.focus(),
                                    "end" === e.o.cursorAfterAutofocus)
                                ) {
                                    const t = ne.i.last(e.editor, (e) =>
                                        ne.i.isText(e)
                                    );
                                    t && e.s.setCursorIn(t, !1);
                                }
                            };
                            e.e.on("afterInit", () => {
                                e.o.autofocus &&
                                    (e.defaultTimeout
                                        ? e.async.setTimeout(t, 300)
                                        : t());
                            }),
                                e.e.on("afterInit afterAddPlace", () => {
                                    e.e
                                        .off(e.editor, "mousedown.autofocus")
                                        .on(
                                            e.editor,
                                            "mousedown.autofocus",
                                            (t) => {
                                                e.isEditorMode() &&
                                                    t.target &&
                                                    ne.i.isBlock(t.target) &&
                                                    !t.target.childNodes
                                                        .length &&
                                                    (e.editor === t.target
                                                        ? e.s.focus()
                                                        : e.s.setCursorIn(
                                                              t.target
                                                          ));
                                            }
                                        );
                                });
                        }),
                        (d.D.prototype.defaultFontSizePoints = "px"),
                        te.J.set("font", i(54050)).set("fontsize", i(76901)),
                        (d.D.prototype.controls.fontsize = {
                            command: "fontsize",
                            data: { cssRule: "font-size" },
                            list: [
                                "8",
                                "9",
                                "10",
                                "11",
                                "12",
                                "14",
                                "16",
                                "18",
                                "24",
                                "30",
                                "36",
                                "48",
                                "60",
                                "72",
                                "96",
                            ],
                            exec(e, t, { control: i }) {
                                return (0, me.memorizeExec)(
                                    e,
                                    t,
                                    { control: i },
                                    (t) => {
                                        var s;
                                        return "fontsize" ===
                                            (null === (s = i.command) ||
                                            void 0 === s
                                                ? void 0
                                                : s.toLowerCase())
                                            ? `${t}${e.o.defaultFontSizePoints}`
                                            : t;
                                    }
                                );
                            },
                            childTemplate(e, t, i) {
                                return `${i}${e.o.defaultFontSizePoints}`;
                            },
                            tooltip: "Font size",
                            isChildActive(e, t) {
                                var i, s;
                                const o = e.s.current(),
                                    r =
                                        (null === (i = t.data) || void 0 === i
                                            ? void 0
                                            : i.cssRule) || "font-size",
                                    n =
                                        (null === (s = t.data) || void 0 === s
                                            ? void 0
                                            : s.normalize) ||
                                        ((t) =>
                                            /pt$/i.test(t) &&
                                            "pt" === e.o.defaultFontSizePoints
                                                ? t.replace(/pt$/i, "")
                                                : t);
                                if (o) {
                                    const i =
                                            le.i.closest(
                                                o,
                                                le.i.isElement,
                                                e.editor
                                            ) || e.editor,
                                        s = (0, me.css)(i, r);
                                    return !(
                                        !s ||
                                        !t.args ||
                                        n("" + t.args[0]) !== n("" + s)
                                    );
                                }
                                return !1;
                            },
                        }),
                        (d.D.prototype.controls.font = {
                            ...d.D.prototype.controls.fontsize,
                            command: "fontname",
                            list: {
                                "": "Default",
                                "helvetica,sans-serif": "Helvetica",
                                "arial,helvetica,sans-serif": "Arial",
                                "georgia,palatino,serif": "Georgia",
                                "impact,charcoal,sans-serif": "Impact",
                                "tahoma,geneva,sans-serif": "Tahoma",
                                "times new roman,times,serif":
                                    "Times New Roman",
                                "verdana,geneva,sans-serif": "Verdana",
                            },
                            childTemplate(e, t, i) {
                                let s = !1;
                                try {
                                    s =
                                        -1 === t.indexOf("dings") &&
                                        document.fonts.check("16px " + t, i);
                                } catch (e) {}
                                return `<span data-style="${t}" style="${
                                    s ? `font-family: ${t}!important;` : ""
                                }">${i}</span>`;
                            },
                            data: {
                                cssRule: "font-family",
                                normalize(e) {
                                    return e
                                        .toLowerCase()
                                        .replace(/['"]+/g, "")
                                        .replace(/[^a-z0-9]+/g, ",");
                                },
                            },
                            tooltip: "Font family",
                        }),
                        f.pw.add("font", (e) => {
                            e.registerButton({
                                name: "font",
                                group: "font",
                            }).registerButton({
                                name: "fontsize",
                                group: "font",
                            });
                            const t = (t, i, s) => {
                                switch (t) {
                                    case "fontsize":
                                        e.s.applyStyle({
                                            fontSize: (0, p.normalizeSize)(s),
                                        });
                                        break;
                                    case "fontname":
                                        e.s.applyStyle({ fontFamily: s });
                                }
                                return e.synchronizeValues(), !1;
                            };
                            e.registerCommand("fontsize", t).registerCommand(
                                "fontname",
                                t
                            );
                        }),
                        te.J.set("paragraph", i(25223)),
                        (d.D.prototype.controls.paragraph = {
                            command: "formatBlock",
                            update(e, t) {
                                const i = e.control,
                                    s = t.s.current();
                                if (s && t.o.textIcons) {
                                    const o = (
                                            u.Dom.closest(
                                                s,
                                                u.Dom.isBlock,
                                                t.editor
                                            ) || t.editor
                                        ).nodeName.toLowerCase(),
                                        r = i.list;
                                    e &&
                                        i.data &&
                                        i.data.currentValue !== o &&
                                        r &&
                                        r[o] &&
                                        (t.o.textIcons
                                            ? (e.state.text = o)
                                            : (e.state.icon.name = o),
                                        (i.data.currentValue = o));
                                }
                                return !1;
                            },
                            exec: p.memorizeExec,
                            data: { currentValue: "left" },
                            list: {
                                p: "Normal",
                                h1: "Heading 1",
                                h2: "Heading 2",
                                h3: "Heading 3",
                                h4: "Heading 4",
                                blockquote: "Quote",
                                pre: "Code",
                            },
                            isChildActive(e, t) {
                                const i = e.s.current();
                                if (i) {
                                    const s = u.Dom.closest(
                                        i,
                                        u.Dom.isBlock,
                                        e.editor
                                    );
                                    return !(
                                        !s ||
                                        s === e.editor ||
                                        void 0 === t.args ||
                                        s.nodeName.toLowerCase() !== t.args[0]
                                    );
                                }
                                return !1;
                            },
                            isActive(e, t) {
                                const i = e.s.current();
                                if (i) {
                                    const s = u.Dom.closest(
                                        i,
                                        u.Dom.isBlock,
                                        e.editor
                                    );
                                    return !(
                                        !s ||
                                        s === e.editor ||
                                        void 0 === t.list ||
                                        u.Dom.isTag(s, "p") ||
                                        void 0 ===
                                            t.list[s.nodeName.toLowerCase()]
                                    );
                                }
                                return !1;
                            },
                            childTemplate(e, t, i) {
                                return `<${t} style="margin:0;padding:0"><span>${e.i18n(
                                    i
                                )}</span></${t}>`;
                            },
                            tooltip: "Insert format block",
                        }),
                        f.pw.add("formatBlock", (e) => {
                            e.registerButton({
                                name: "paragraph",
                                group: "font",
                            }),
                                e.registerCommand(
                                    "formatblock",
                                    (t, i, s) => (
                                        e.s.applyStyle(void 0, { element: s }),
                                        e.synchronizeValues(),
                                        !1
                                    )
                                );
                        });
                    var Xe = i(99820);
                    (d.D.prototype.fullsize = !1),
                        (d.D.prototype.globalFullSize = !0),
                        te.J.set("fullsize", i(95331)).set("shrink", i(34345)),
                        (d.D.prototype.controls.fullsize = {
                            exec(e) {
                                e.toggleFullSize();
                            },
                            update(e, t) {
                                const i = t.isFullSize ? "shrink" : "fullsize";
                                (e.state.activated = t.isFullSize),
                                    t.o.textIcons
                                        ? (e.state.text = i)
                                        : (e.state.icon.name = i);
                            },
                            tooltip: "Open in fullsize",
                            mode: h.MODE_SOURCE + h.MODE_WYSIWYG,
                        });
                    const Ze = new Set();
                    f.pw.add("fullsize", (e) => {
                        e.registerButton({ name: "fullsize" });
                        let t = !1,
                            i = 0,
                            s = 0,
                            o = !1;
                        const r = () => {
                                const { container: r, events: n } = e;
                                n &&
                                    (t
                                        ? ((i = (0, Re.i)(r, "height", !0)),
                                          (s = (0, Re.i)(r, "width", !0)),
                                          (0, Re.i)(r, {
                                              height: e.ow.innerHeight,
                                              width: e.ow.innerWidth,
                                          }),
                                          (o = !0))
                                        : o &&
                                          (0, Re.i)(r, {
                                              height: i || "auto",
                                              width: s || "auto",
                                          }));
                            },
                            n = (i) => {
                                const { container: s, events: o } = e;
                                if (s) {
                                    if (
                                        (void 0 === i &&
                                            (i =
                                                !s.classList.contains(
                                                    "jodit_fullsize"
                                                )),
                                        e.setMod("fullsize", i),
                                        (e.o.fullsize = i),
                                        (t = i),
                                        s.classList.toggle("jodit_fullsize", i),
                                        e.toolbar &&
                                            ((0, Xe.Z)(e) &&
                                                e.toolbarContainer.appendChild(
                                                    e.toolbar.container
                                                ),
                                            (0, Re.i)(
                                                e.toolbar.container,
                                                "width",
                                                "auto"
                                            )),
                                        i ? Ze.add(s) : Ze.delete(s),
                                        e.o.globalFullSize &&
                                            ((1 === Ze.size && i) ||
                                                (0 === Ze.size && !i)))
                                    ) {
                                        let e = s.parentNode;
                                        for (
                                            ;
                                            e &&
                                            e.nodeType !== Node.DOCUMENT_NODE &&
                                            e.nodeType !==
                                                Node.DOCUMENT_FRAGMENT_NODE;

                                        )
                                            e.classList.toggle(
                                                "jodit_fullsize-box_true",
                                                i
                                            ),
                                                (e = e.parentNode);
                                        r();
                                    }
                                    o.fire("afterResize");
                                }
                            };
                        e.o.globalFullSize && e.e.on(e.ow, "resize", r),
                            e.e
                                .on("afterInit afterOpen", () => {
                                    var t;
                                    e.toggleFullSize(
                                        null ===
                                            (t =
                                                null == e
                                                    ? void 0
                                                    : e.options) || void 0 === t
                                            ? void 0
                                            : t.fullsize
                                    );
                                })
                                .on("toggleFullSize", n)
                                .on("beforeDestruct", () => {
                                    t && n(!1);
                                })
                                .on("beforeDestruct", () => {
                                    e.events && e.e.off(e.ow, "resize", r);
                                });
                    }),
                        (d.D.prototype.commandToHotkeys = {
                            removeFormat: ["ctrl+shift+m", "cmd+shift+m"],
                            insertOrderedList: ["ctrl+shift+7", "cmd+shift+7"],
                            insertUnorderedList: ["ctrl+shift+8, cmd+shift+8"],
                            selectall: ["ctrl+a", "cmd+a"],
                        }),
                        f.pw.add(
                            "hotkeys",
                            class Qe extends re.S {
                                constructor() {
                                    super(...arguments),
                                        (this.onKeyPress = (e) => {
                                            const t = this.specialKeys[e.which],
                                                i = (
                                                    e.key ||
                                                    String.fromCharCode(e.which)
                                                ).toLowerCase(),
                                                s = [t || i];
                                            return (
                                                [
                                                    "alt",
                                                    "ctrl",
                                                    "shift",
                                                    "meta",
                                                ].forEach((i) => {
                                                    e[i + "Key"] &&
                                                        t !== i &&
                                                        s.push(i);
                                                }),
                                                (0, p.normalizeKeyAliases)(
                                                    s.join("+")
                                                )
                                            );
                                        }),
                                        (this.specialKeys = {
                                            8: "backspace",
                                            9: "tab",
                                            10: "return",
                                            13: "return",
                                            16: "shift",
                                            17: "ctrl",
                                            18: "alt",
                                            19: "pause",
                                            20: "capslock",
                                            27: "esc",
                                            32: "space",
                                            33: "pageup",
                                            34: "pagedown",
                                            35: "end",
                                            36: "home",
                                            37: "left",
                                            38: "up",
                                            39: "right",
                                            40: "down",
                                            45: "insert",
                                            46: "del",
                                            59: ";",
                                            61: "=",
                                            91: "meta",
                                            96: "0",
                                            97: "1",
                                            98: "2",
                                            99: "3",
                                            100: "4",
                                            101: "5",
                                            102: "6",
                                            103: "7",
                                            104: "8",
                                            105: "9",
                                            106: "*",
                                            107: "+",
                                            109: "-",
                                            110: ".",
                                            111: "/",
                                            112: "f1",
                                            113: "f2",
                                            114: "f3",
                                            115: "f4",
                                            116: "f5",
                                            117: "f6",
                                            118: "f7",
                                            119: "f8",
                                            120: "f9",
                                            121: "f10",
                                            122: "f11",
                                            123: "f12",
                                            144: "numlock",
                                            145: "scroll",
                                            173: "-",
                                            186: ";",
                                            187: "=",
                                            188: ",",
                                            189: "-",
                                            190: ".",
                                            191: "/",
                                            192: "`",
                                            219: "[",
                                            220: "\\",
                                            221: "]",
                                            222: "'",
                                        });
                                }
                                afterInit(e) {
                                    (0, p.keys)(
                                        e.o.commandToHotkeys,
                                        !1
                                    ).forEach((t) => {
                                        const i = e.o.commandToHotkeys[t];
                                        i &&
                                            ((0, p.isArray)(i) ||
                                                (0, p.isString)(i)) &&
                                            e.registerHotkeyToCommand(i, t);
                                    });
                                    let t = !1;
                                    e.e
                                        .off(".hotkeys")
                                        .on(
                                            [e.ow, e.ew],
                                            "keydown.hotkeys",
                                            (e) => {
                                                if (e.key === h.KEY_ESC)
                                                    return this.j.e.fire(
                                                        "escape",
                                                        e
                                                    );
                                            }
                                        )
                                        .on(
                                            "keydown.hotkeys",
                                            (i) => {
                                                const s = this.onKeyPress(i),
                                                    o = { shouldStop: !0 };
                                                if (
                                                    !1 ===
                                                    this.j.e.fire(
                                                        s + ".hotkey",
                                                        i.type,
                                                        o
                                                    )
                                                ) {
                                                    if (o.shouldStop)
                                                        return (
                                                            (t = !0),
                                                            e.e.stopPropagation(
                                                                "keydown"
                                                            ),
                                                            !1
                                                        );
                                                    i.preventDefault();
                                                }
                                            },
                                            { top: !0 }
                                        )
                                        .on(
                                            "keyup.hotkeys",
                                            () => {
                                                if (t)
                                                    return (
                                                        (t = !1),
                                                        e.e.stopPropagation(
                                                            "keyup"
                                                        ),
                                                        !1
                                                    );
                                            },
                                            { top: !0 }
                                        );
                                }
                                beforeDestruct(e) {
                                    e.events && e.e.off(".hotkeys");
                                }
                            }
                        ),
                        te.J.set("hr", i(85487)),
                        (d.D.prototype.controls.hr = {
                            command: "insertHorizontalRule",
                            tags: ["hr"],
                            tooltip: "Insert Horizontal Line",
                        }),
                        f.pw.add("hr", (e) => {
                            e.registerButton({ name: "hr", group: "insert" }),
                                e.registerCommand(
                                    "insertHorizontalRule",
                                    () => {
                                        const t = e.createInside.element("hr");
                                        e.s.insertNode(t, !1, !1);
                                        const i = ne.i.closest(
                                            t.parentElement,
                                            ne.i.isBlock,
                                            e.editor
                                        );
                                        i &&
                                            ne.i.isEmpty(i) &&
                                            i !== e.editor &&
                                            (ne.i.after(i, t),
                                            ne.i.safeRemove(i));
                                        let s = ne.i.next(
                                            t,
                                            ne.i.isBlock,
                                            e.editor,
                                            !1
                                        );
                                        return (
                                            s ||
                                                ((s = e.createInside.element(
                                                    e.o.enter
                                                )),
                                                ne.i.after(t, s)),
                                            e.s.setCursorIn(s),
                                            !1
                                        );
                                    }
                                );
                        }),
                        (d.D.prototype.iframeBaseUrl = ""),
                        (d.D.prototype.iframeTitle = "Jodit Editor"),
                        (d.D.prototype.iframeDoctype = "<!DOCTYPE html>"),
                        (d.D.prototype.iframeDefaultSrc = "about:blank"),
                        (d.D.prototype.iframeStyle =
                            'html{margin:0;padding:0;min-height: 100%;}body{box-sizing:border-box;font-size:13px;line-height:1.6;padding:10px;margin:0;background:transparent;color:#000;position:relative;z-index:2;user-select:auto;margin:0px;overflow:auto;outline:none;}table{width:100%;border:none;border-collapse:collapse;empty-cells: show;max-width: 100%;}th,td{padding: 2px 5px;border:1px solid #ccc;-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text}p{margin-top:0;}.jodit_editor .jodit_iframe_wrapper{display: block;clear: both;user-select: none;position: relative;}.jodit_editor .jodit_iframe_wrapper:after {position:absolute;content:"";z-index:1;top:0;left:0;right: 0;bottom: 0;cursor: pointer;display: block;background: rgba(0, 0, 0, 0);} .jodit_disabled{user-select: none;-o-user-select: none;-moz-user-select: none;-khtml-user-select: none;-webkit-user-select: none;-ms-user-select: none}'),
                        (d.D.prototype.iframeCSSLinks = []),
                        f.pw.add("iframe", (e) => {
                            const t = e.options;
                            e.e
                                .on("afterSetMode", () => {
                                    e.isEditorMode() && e.s.focus();
                                })
                                .on(
                                    "generateDocumentStructure.iframe",
                                    (e, i) => {
                                        const s =
                                            e ||
                                            i.iframe.contentWindow.document;
                                        if (
                                            (s.open(),
                                            s.write(
                                                t.iframeDoctype +
                                                    `<html dir="${
                                                        t.direction
                                                    }" class="jodit" lang="${(0,
                                                    p.defaultLanguage)(
                                                        t.language
                                                    )}"><head>` +
                                                    `<title>${t.iframeTitle}</title>` +
                                                    (t.iframeBaseUrl
                                                        ? `<base href="${t.iframeBaseUrl}"/>`
                                                        : "") +
                                                    '</head><body class="jodit-wysiwyg"></body></html>'
                                            ),
                                            s.close(),
                                            t.iframeCSSLinks &&
                                                t.iframeCSSLinks.forEach(
                                                    (e) => {
                                                        const t =
                                                            s.createElement(
                                                                "link"
                                                            );
                                                        t.setAttribute(
                                                            "rel",
                                                            "stylesheet"
                                                        ),
                                                            t.setAttribute(
                                                                "href",
                                                                e
                                                            ),
                                                            s.head &&
                                                                s.head.appendChild(
                                                                    t
                                                                );
                                                    }
                                                ),
                                            t.iframeStyle)
                                        ) {
                                            const e = s.createElement("style");
                                            (e.innerHTML = t.iframeStyle),
                                                s.head && s.head.appendChild(e);
                                        }
                                    }
                                )
                                .on("createEditor", () => {
                                    if (!t.iframe) return;
                                    const i = e.c.element("iframe");
                                    (i.style.display = "block"),
                                        (i.src = "about:blank"),
                                        (i.className = "jodit-wysiwyg_iframe"),
                                        i.setAttribute(
                                            "allowtransparency",
                                            "true"
                                        ),
                                        i.setAttribute(
                                            "tabindex",
                                            "" + t.tabIndex
                                        ),
                                        i.setAttribute("frameborder", "0"),
                                        e.workplace.appendChild(i),
                                        (e.iframe = i);
                                    const s = e.e.fire(
                                        "generateDocumentStructure.iframe",
                                        null,
                                        e
                                    );
                                    return (0, p.callPromise)(s, () => {
                                        if (!e.iframe) return !1;
                                        const i =
                                            e.iframe.contentWindow.document;
                                        e.editorWindow = e.iframe.contentWindow;
                                        const s = () => {
                                                (0, p.attr)(
                                                    i.body,
                                                    "contenteditable",
                                                    (e.getMode() !==
                                                        h.MODE_SOURCE &&
                                                        !e.getReadOnly()) ||
                                                        null
                                                );
                                            },
                                            o = (e) => {
                                                const t = /<body.*<\/body>/im,
                                                    i = "{%%BODY%%}",
                                                    s = t.exec(e);
                                                return (
                                                    s &&
                                                        (e = e
                                                            .replace(t, i)
                                                            .replace(
                                                                /<span([^>]*?)>(.*?)<\/span>/gim,
                                                                ""
                                                            )
                                                            .replace(
                                                                /&lt;span([^&]*?)&gt;(.*?)&lt;\/span&gt;/gim,
                                                                ""
                                                            )
                                                            .replace(
                                                                i,
                                                                s[0]
                                                                    .replace(
                                                                        /(<body[^>]+?)min-height["'\s]*:[\s"']*[0-9]+(px|%)/im,
                                                                        "$1"
                                                                    )
                                                                    .replace(
                                                                        /(<body[^>]+?)([\s]*["'])?contenteditable["'\s]*=[\s"']*true["']?/im,
                                                                        "$1"
                                                                    )
                                                                    .replace(
                                                                        /<(style|script|span)[^>]+jodit[^>]+>.*?<\/\1>/g,
                                                                        ""
                                                                    )
                                                            )
                                                            .replace(
                                                                /(class\s*=\s*)(['"])([^"']*)(jodit-wysiwyg|jodit)([^"']*\2)/g,
                                                                "$1$2$3$5"
                                                            )
                                                            .replace(
                                                                /(<[^<]+?)\sclass="[\s]*"/gim,
                                                                "$1"
                                                            )
                                                            .replace(
                                                                /(<[^<]+?)\sstyle="[\s;]*"/gim,
                                                                "$1"
                                                            )
                                                            .replace(
                                                                /(<[^<]+?)\sdir="[\s]*"/gim,
                                                                "$1"
                                                            )),
                                                    e
                                                );
                                            };
                                        if (t.editHTMLDocumentMode) {
                                            const t = e.element.tagName;
                                            if (
                                                "TEXTAREA" !== t &&
                                                "INPUT" !== t
                                            )
                                                throw (0, p.error)(
                                                    "If enable `editHTMLDocumentMode` - source element should be INPUT or TEXTAREA"
                                                );
                                            e.e
                                                .on(
                                                    "beforeGetNativeEditorValue",
                                                    () =>
                                                        o(
                                                            e.o.iframeDoctype +
                                                                i
                                                                    .documentElement
                                                                    .outerHTML
                                                        )
                                                )
                                                .on(
                                                    "beforeSetNativeEditorValue",
                                                    ({ value: t }) =>
                                                        !e.isLocked &&
                                                        (/<(html|body)/i.test(t)
                                                            ? o(
                                                                  i
                                                                      .documentElement
                                                                      .outerHTML
                                                              ) !== o(t) &&
                                                              (i.open(),
                                                              i.write(
                                                                  e.o
                                                                      .iframeDoctype +
                                                                      o(t)
                                                              ),
                                                              i.close(),
                                                              (e.editor =
                                                                  i.body),
                                                              e.e.fire(
                                                                  "safeHTML",
                                                                  e.editor
                                                              ),
                                                              s(),
                                                              e.e.fire(
                                                                  "prepareWYSIWYGEditor"
                                                              ),
                                                              e.e.stopPropagation(
                                                                  "beforeSetNativeEditorValue"
                                                              ))
                                                            : (i.body.innerHTML =
                                                                  t),
                                                        !0),
                                                    { top: !0 }
                                                );
                                        }
                                        if (
                                            ((e.editor = i.body),
                                            e.e.on(
                                                "afterSetMode afterInit afterAddPlace",
                                                s
                                            ),
                                            "auto" === t.height)
                                        ) {
                                            i.documentElement &&
                                                (i.documentElement.style.overflowY =
                                                    "hidden");
                                            const s = e.async.throttle(() => {
                                                if (
                                                    e.editor &&
                                                    e.iframe &&
                                                    "auto" === t.height
                                                ) {
                                                    const t =
                                                        e.ew.getComputedStyle(
                                                            e.editor
                                                        );
                                                    (0, p.css)(
                                                        e.iframe,
                                                        "height",
                                                        e.editor.offsetHeight +
                                                            (parseInt(
                                                                t.marginTop ||
                                                                    "0",
                                                                10
                                                            ) +
                                                                parseInt(
                                                                    t.marginBottom ||
                                                                        "0",
                                                                    10
                                                                ))
                                                    );
                                                }
                                            }, e.defaultTimeout / 2);
                                            if (
                                                (e.e
                                                    .on(
                                                        "change afterInit afterSetMode resize",
                                                        s
                                                    )
                                                    .on(
                                                        [
                                                            e.iframe,
                                                            e.ew,
                                                            i.documentElement,
                                                        ],
                                                        "load",
                                                        s
                                                    )
                                                    .on(
                                                        i,
                                                        "readystatechange DOMContentLoaded",
                                                        s
                                                    ),
                                                "function" ==
                                                    typeof ResizeObserver)
                                            ) {
                                                const t = new ResizeObserver(s);
                                                t.observe(i.body),
                                                    e.e.on(
                                                        "beforeDestruct",
                                                        () => {
                                                            t.unobserve(i.body);
                                                        }
                                                    );
                                            }
                                        }
                                        return (
                                            i.documentElement &&
                                                e.e
                                                    .on(
                                                        i.documentElement,
                                                        "mousedown touchend",
                                                        () => {
                                                            e.s.isFocused() ||
                                                                (e.s.focus(),
                                                                e.editor ===
                                                                    i.body &&
                                                                    e.s.setCursorIn(
                                                                        i.body
                                                                    ));
                                                        }
                                                    )
                                                    .on(
                                                        e.ew,
                                                        "mousedown touchstart keydown keyup touchend click mouseup mousemove scroll",
                                                        (t) => {
                                                            var i;
                                                            null ===
                                                                (i =
                                                                    e.events) ||
                                                                void 0 === i ||
                                                                i.fire(e.ow, t);
                                                        }
                                                    ),
                                            !1
                                        );
                                    });
                                });
                        }),
                        te.J.set("image", i(25249)),
                        (d.D.prototype.controls.image = {
                            popup(e, t, i, s) {
                                let o = null;
                                return (
                                    t &&
                                        !ne.i.isText(t) &&
                                        ne.i.isHTMLElement(t) &&
                                        (ne.i.isTag(t, "img") ||
                                            (0, p.$$)("img", t).length) &&
                                        (o = ne.i.isTag(t, "img")
                                            ? t
                                            : (0, p.$$)("img", t)[0]),
                                    e.s.save(),
                                    (0, Ne.ov)(
                                        e,
                                        {
                                            filebrowser(t) {
                                                e.s.restore(),
                                                    t.files &&
                                                        t.files.forEach((i) =>
                                                            e.s.insertImage(
                                                                t.baseurl + i,
                                                                null,
                                                                e.o
                                                                    .imageDefaultWidth
                                                            )
                                                        ),
                                                    s();
                                            },
                                            upload: !0,
                                            async url(t, i) {
                                                e.s.restore(),
                                                    /^[a-z\d_-]+(\.[a-z\d_-]+)+/i.test(
                                                        t
                                                    ) && (t = "//" + t);
                                                const r =
                                                    o ||
                                                    e.createInside.element(
                                                        "img"
                                                    );
                                                r.setAttribute("src", t),
                                                    r.setAttribute("alt", i),
                                                    o ||
                                                        (await e.s.insertImage(
                                                            r,
                                                            null,
                                                            e.o
                                                                .imageDefaultWidth
                                                        )),
                                                    s();
                                            },
                                        },
                                        o,
                                        s
                                    )
                                );
                            },
                            tags: ["img"],
                            tooltip: "Insert Image",
                        }),
                        f.pw.add("image", (e) => {
                            e.registerButton({ name: "image", group: "media" });
                        }),
                        (d.D.prototype.imageProcessor = {
                            replaceDataURIToBlobIdInView: !0,
                        });
                    const et = "__jodit_imageprocessor_binded",
                        tt = "__jodit_imageprocessor_bindedblob-id";
                    class it extends re.S {
                        afterInit(e) {}
                        beforeDestruct(e) {
                            const t = e.buffer.get(tt);
                            if (t) {
                                const i = Object.keys(t);
                                for (const e of i) URL.revokeObjectURL(e);
                                e.buffer.delete(tt);
                            }
                        }
                        onAfterGetValueFromEditor(e, t) {
                            if (t !== h.SOURCE_CONSUMER)
                                return this.onBeforeSetElementValue(e);
                        }
                        onBeforeSetElementValue(e) {
                            const { jodit: t } = this;
                            if (
                                !t.o.imageProcessor.replaceDataURIToBlobIdInView
                            )
                                return;
                            const i = t.buffer.get(tt);
                            if (i) {
                                const t = Object.keys(i);
                                for (const s of t)
                                    for (; e.value.includes(s); )
                                        e.value = e.value.replace(s, i[s]);
                            }
                        }
                        async afterChange(e) {
                            const { jodit: t } = this;
                            t.editor &&
                                (0, p.$$)("img", t.editor).forEach((e) => {
                                    (0, p.dataBind)(e, et) ||
                                        ((0, p.dataBind)(e, et, !0),
                                        e.complete ||
                                            t.e.on(e, "load", function i() {
                                                var s;
                                                !t.isInDestruct &&
                                                    (null === (s = t.e) ||
                                                        void 0 === s ||
                                                        s.fire("resize")),
                                                    t.e.off(e, "load", i);
                                            }),
                                        e.src &&
                                            /^data:/.test(e.src) &&
                                            ((e, t) => {
                                                if (
                                                    !e.o.imageProcessor
                                                        .replaceDataURIToBlobIdInView
                                                )
                                                    return;
                                                if (
                                                    "undefined" ==
                                                        typeof ArrayBuffer ||
                                                    "undefined" == typeof URL
                                                )
                                                    return;
                                                const i = t.src,
                                                    s = ((e) => {
                                                        const t = atob(
                                                                e.split(",")[1]
                                                            ),
                                                            i = e
                                                                .split(",")[0]
                                                                .split(":")[1]
                                                                .split(";")[0],
                                                            s = new ArrayBuffer(
                                                                t.length
                                                            ),
                                                            o = new Uint8Array(
                                                                s
                                                            );
                                                        for (
                                                            let e = 0;
                                                            t.length > e;
                                                            e++
                                                        )
                                                            o[e] =
                                                                t.charCodeAt(e);
                                                        return new Blob([s], {
                                                            type: i,
                                                        });
                                                    })(i);
                                                (t.src =
                                                    URL.createObjectURL(s)),
                                                    e.e.fire("internalUpdate");
                                                const { buffer: o } = e,
                                                    r = o.get(tt) || {};
                                                (r[t.src] = i),
                                                    e.buffer.set(tt, r);
                                            })(t, e),
                                        t.e.on(
                                            e,
                                            "mousedown touchstart",
                                            () => {
                                                t.s.select(e);
                                            }
                                        ));
                                });
                        }
                    }
                    (0, c.gn)(
                        [(0, g.watch)(":afterGetValueFromEditor")],
                        it.prototype,
                        "onAfterGetValueFromEditor",
                        null
                    ),
                        (0, c.gn)(
                            [(0, g.watch)(":beforeSetElementValue")],
                            it.prototype,
                            "onBeforeSetElementValue",
                            null
                        ),
                        (0, c.gn)(
                            [
                                (0, g.watch)([
                                    ":change",
                                    ":afterInit",
                                    ":changePlace",
                                ]),
                                (0, g.debounce)(),
                            ],
                            it.prototype,
                            "afterChange",
                            null
                        ),
                        f.pw.add("imageProcessor", it);
                    var st = i(18095),
                        ot = i(80266);
                    function rt(e) {
                        const t = e.o,
                            i = e.i18n.bind(e),
                            s = te.J.get.bind(te.J),
                            o = t.filebrowser.ajax.url || t.uploader.url,
                            r = t.image.useImageEditor;
                        return e.c.fromHTML(
                            `<div style="${
                                t.image.editSrc ? "" : "display:none"
                            }" class="jodit-form__group">\n\t\t\t<label>${i(
                                "Src"
                            )}</label>\n\t\t\t<div class="jodit-input_group">\n\t\t\t\t<input data-ref="imageSrc" class="jodit-input" type="text"/>\n\t\t\t\t<div\n\t\t\t\t\tclass="jodit-input_group-buttons"\n\t\t\t\t\tstyle="${
                                o ? "" : "display: none"
                            }"\n\t\t\t\t>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tdata-ref="changeImage"\n\t\t\t\t\t\t\tclass="jodit-button"\n\t\t\t\t\t\t>${s(
                                "image"
                            )}</a>\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tdata-ref="editImage"\n\t\t\t\t\t\t\tclass="jodit-button"\n\t\t\t\t\t\t\tstyle="${
                                r ? "" : "display: none"
                            }"\n\t\t\t\t\t\t>${s(
                                "crop"
                            )}</a>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t\t<div style="${
                                t.image.editTitle ? "" : "display:none"
                            }" class="jodit-form__group">\n\t\t\t<label>${i(
                                "Title"
                            )}</label>\n\t\t\t<input data-ref="imageTitle" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div style="${
                                t.image.editAlt ? "" : "display:none"
                            }" class="jodit-form__group">\n\t\t\t<label>${i(
                                "Alternative"
                            )}</label>\n\t\t\t<input data-ref="imageAlt" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div style="${
                                t.image.editLink ? "" : "display:none"
                            }" class="jodit-form__group">\n\t\t\t<label>${i(
                                "Link"
                            )}</label>\n\t\t\t<input data-ref="imageLink" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div style="${
                                t.image.editLink ? "" : "display:none"
                            }" class="jodit-form__group">\n\t\t\t<label class="jodit_vertical_middle">\n\t\t\t\t<input data-ref="imageLinkOpenInNewTab" type="checkbox" class="jodit-checkbox"/>\n\t\t\t\t<span>${i(
                                "Open link in new tab"
                            )}</span>\n\t\t\t</label>\n\t\t</div>`
                        );
                    }
                    function nt(e) {
                        const t = e.o,
                            i = e.i18n.bind(e),
                            s = te.J.get.bind(te.J),
                            o = [];
                        return (
                            t.image.availableClasses.length > 0
                                ? (o.push(
                                      '<select data-ref="classes" class="jodit-input jodit-select">'
                                  ),
                                  t.image.availableClasses.forEach((e) => {
                                      o.push(
                                          "string" == typeof e
                                              ? `<option value="${e}">${e}</option>`
                                              : `<option value="${e[0]}">${e[1]}</option>`
                                      );
                                  }),
                                  o.push("</select>"))
                                : o.push(
                                      '<input data-ref="classes" type="text" class="jodit-input"/>'
                                  ),
                            e.c.fromHTML(
                                `<div style="${
                                    t.image.editMargins ? "" : "display:none"
                                }" class="jodit-form__group">\n\t\t\t<label>${i(
                                    "Margins"
                                )}</label>\n\t\t\t<div class="jodit-grid jodit_vertical_middle">\n\t\t\t\t<input class="jodit_col-lg-1-5 jodit-input" data-ref="marginTop" type="text" placeholder="${i(
                                    "top"
                                )}"/>\n\t\t\t\t<a style="text-align: center;" data-ref="lockMargin" class="jodit-properties__lock jodit_col-lg-1-5">${s(
                                    "lock"
                                )}</a>\n\t\t\t\t<input disabled="true" class="jodit_col-lg-1-5 jodit-input" data-ref="marginRight" type="text" placeholder="${i(
                                    "right"
                                )}"/>\n\t\t\t\t<input disabled="true" class="jodit_col-lg-1-5 jodit-input" data-ref="marginBottom" type="text" placeholder="${i(
                                    "bottom"
                                )}"/>\n\t\t\t\t<input disabled="true" class="jodit_col-lg-1-5 jodit-input" data-ref="marginLeft" type="text" placeholder="${i(
                                    "left"
                                )}"/>\n\t\t\t</div>\n\t\t</div>\n\t\t<div\n\t\t\tstyle="${
                                    t.image.editAlign ? "" : "display:none"
                                }"\n\t\t\tclass="jodit-form__group"\n\t\t>\n\t\t\t<label>${i(
                                    "Align"
                                )}</label>\n\t\t\t<select data-ref="align" class="jodit-select">\n\t\t\t\t<option value="">${i(
                                    "--Not Set--"
                                )}</option>\n\t\t\t\t<option value="left">${i(
                                    "Left"
                                )}</option>\n\t\t\t\t<option value="center">${i(
                                    "Center"
                                )}</option>\n\t\t\t\t<option value="right">${i(
                                    "Right"
                                )}</option>\n\t\t\t</select>\n\t\t</div>\n\t\t<div style="${
                                    t.image.editStyle ? "" : "display:none"
                                }" class="jodit-form__group">\n\t\t\t<label>${i(
                                    "Styles"
                                )}</label>\n\t\t\t<input data-ref="style" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div style="${
                                    t.image.editClass ? "" : "display:none"
                                }" class="jodit-form__group">\n\t\t\t<label>${i(
                                    "Classes"
                                )}</label>\n\t\t\t${o.join(
                                    ""
                                )}\n\t\t</div>\n\t\t<div style="${
                                    t.image.editId ? "" : "display:none"
                                }" class="jodit-form__group">\n\t\t\t<label>Id</label>\n\t\t\t<input data-ref="id" type="text" class="jodit-input"/>\n\t\t</div>\n\t\t<div\n\t\t\tstyle="${
                                    t.image.editBorderRadius
                                        ? ""
                                        : "display:none"
                                }"\n\t\t\tclass="jodit-form__group"\n\t\t>\n\t\t\t<label>${i(
                                    "Border radius"
                                )}</label>\n\t\t\t\t<input data-ref="borderRadius" type="number" class="jodit-input"/>\n\t\t</div>`
                            )
                        );
                    }
                    d.D.prototype.image = {
                        dialogWidth: 600,
                        openOnDblClick: !0,
                        editSrc: !0,
                        useImageEditor: !0,
                        editTitle: !0,
                        editAlt: !0,
                        editLink: !0,
                        editSize: !0,
                        editBorderRadius: !0,
                        editMargins: !0,
                        editClass: !0,
                        availableClasses: [],
                        editStyle: !0,
                        editId: !0,
                        editAlign: !0,
                        showPreview: !0,
                        selectImageAfterClose: !0,
                    };
                    const at = (e) => (
                            (e = (0, p.trim)(e)),
                            /^[0-9]+$/.test(e) ? e + "px" : e
                        ),
                        lt = (e) =>
                            /^[-+]?[0-9.]+px$/.test("" + e)
                                ? parseFloat("" + e)
                                : e;
                    class ct extends u.Plugin {
                        constructor() {
                            super(...arguments),
                                (this.state = {
                                    image: new Image(),
                                    get ratio() {
                                        return (
                                            this.image.naturalWidth /
                                                this.image.naturalHeight || 1
                                        );
                                    },
                                    sizeIsLocked: !0,
                                    marginIsLocked: !0,
                                }),
                                (this.activeTabState = {
                                    __activeTab: "Image",
                                });
                        }
                        onChangeMarginIsLocked() {
                            if (!this.form) return;
                            const {
                                marginRight: e,
                                marginBottom: t,
                                marginLeft: i,
                                lockMargin: s,
                            } = (0, p.refs)(this.form);
                            [e, t, i].forEach((e) => {
                                (0, p.attr)(
                                    e,
                                    "disabled",
                                    this.state.marginIsLocked || null
                                );
                            }),
                                (s.innerHTML = u.Icon.get(
                                    this.state.marginIsLocked
                                        ? "lock"
                                        : "unlock"
                                ));
                        }
                        onChangeSizeIsLocked() {
                            if (!this.form) return;
                            const { lockSize: e, imageWidth: t } = (0, p.refs)(
                                this.form
                            );
                            (e.innerHTML = u.Icon.get(
                                this.state.sizeIsLocked ? "lock" : "unlock"
                            )),
                                e.classList.remove("jodit-properties__lock"),
                                e.classList.remove("jodit-properties__unlock"),
                                e.classList.add(
                                    this.state.sizeIsLocked
                                        ? "jodit-properties__lock"
                                        : "jodit-properties__unlock"
                                ),
                                this.j.e.fire(t, "change");
                        }
                        open() {
                            return (
                                this.makeForm(),
                                (this.activeTabState.__activeTab = "Image"),
                                this.j.e.fire("hidePopup"),
                                (0, p.markOwner)(this.j, this.dialog.container),
                                (this.state.marginIsLocked = !0),
                                (this.state.sizeIsLocked = !0),
                                this.onChangeMarginIsLocked(),
                                this.onChangeSizeIsLocked(),
                                this.updateValues(),
                                this.dialog.open().setModal(!0).setPosition(),
                                !1
                            );
                        }
                        makeForm() {
                            if (this.dialog) return;
                            this.dialog = this.j.dlg({
                                minWidth: Math.min(400, screen.width),
                                minHeight: 590,
                                buttons: ["fullsize", "dialog.close"],
                            });
                            const e = this.j,
                                t = e.o,
                                i = e.i18n.bind(e),
                                s = {
                                    check: (0, st.zx)(
                                        e,
                                        "ok",
                                        "Apply",
                                        "primary"
                                    ),
                                    remove: (0, st.zx)(e, "bin", "Delete"),
                                };
                            e.e.on(this.dialog, "afterClose", () => {
                                this.state.image.parentNode &&
                                    t.image.selectImageAfterClose &&
                                    e.s.select(this.state.image);
                            }),
                                s.remove.onAction(() => {
                                    e.s.removeNode(this.state.image),
                                        this.dialog.close();
                                });
                            const { dialog: o } = this;
                            o.setHeader(i("Image properties"));
                            const r = ((e) => {
                                const { showPreview: t, editSize: i } =
                                        e.o.image,
                                    s = te.J.get.bind(te.J);
                                return e.c.fromHTML(
                                    `<form class="jodit-properties">\n\t\t<div class="jodit-grid jodit-grid_xs-column">\n\t\t\t<div class="jodit_col-lg-2-5 jodit_col-xs-5-5">\n\t\t\t\t<div class="jodit-properties_view_box">\n\t\t\t\t\t<div style="${
                                        t ? "" : "display:none"
                                    }" class="jodit-properties_image_view">\n\t\t\t\t\t\t<img data-ref="imageViewSrc" src="" alt=""/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div style="${
                                        i ? "" : "display:none"
                                    }" class="jodit-form__group jodit-properties_image_sizes">\n\t\t\t\t\t\t<input data-ref="imageWidth" type="text" class="jodit-input"/>\n\t\t\t\t\t\t<a data-ref="lockSize" class="jodit-properties__lock">${s(
                                        "lock"
                                    )}</a>\n\t\t\t\t\t\t<input data-ref="imageHeight" type="text" class="imageHeight jodit-input"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div data-ref="tabsBox" class="jodit_col-lg-3-5 jodit_col-xs-5-5"></div>\n\t\t</div>\n\t</form>`
                                );
                            })(e);
                            (this.form = r), o.setContent(r);
                            const { tabsBox: n } = (0, p.refs)(this.form);
                            n &&
                                n.appendChild(
                                    (0, Ne.IL)(
                                        e,
                                        [
                                            { name: "Image", content: rt(e) },
                                            {
                                                name: "Advanced",
                                                content: nt(e),
                                            },
                                        ],
                                        this.activeTabState
                                    )
                                ),
                                s.check.onAction(this.onApply);
                            const { changeImage: a, editImage: l } = (0,
                            p.refs)(this.form);
                            e.e.on(a, "click", this.openImagePopup),
                                t.image.useImageEditor &&
                                    e.e.on(l, "click", this.openImageEditor);
                            const {
                                lockSize: c,
                                lockMargin: d,
                                imageWidth: h,
                                imageHeight: u,
                            } = (0, p.refs)(r);
                            c &&
                                e.e.on(c, "click", () => {
                                    this.state.sizeIsLocked =
                                        !this.state.sizeIsLocked;
                                }),
                                e.e.on(d, "click", (e) => {
                                    (this.state.marginIsLocked =
                                        !this.state.marginIsLocked),
                                        e.preventDefault();
                                });
                            const m = (e) => {
                                if (
                                    !(0, p.isNumeric)(h.value) ||
                                    !(0, p.isNumeric)(u.value)
                                )
                                    return;
                                const t = parseFloat(h.value),
                                    i = parseFloat(u.value);
                                e.target === h
                                    ? (u.value =
                                          "" + Math.round(t / this.state.ratio))
                                    : (h.value =
                                          "" +
                                          Math.round(i * this.state.ratio));
                            };
                            e.e.on(
                                [h, u],
                                "change keydown mousedown paste",
                                (t) => {
                                    this.state.sizeIsLocked &&
                                        e.async.setTimeout(m.bind(this, t), {
                                            timeout: e.defaultTimeout,
                                            label: "image-properties-changeSize",
                                        });
                                }
                            ),
                                o.setFooter([s.remove, s.check]),
                                o.setSize(this.j.o.image.dialogWidth);
                        }
                        updateValues() {
                            const e = this.j.o,
                                { image: t } = this.state,
                                {
                                    marginTop: i,
                                    marginRight: s,
                                    marginBottom: o,
                                    marginLeft: r,
                                    lockMargin: n,
                                    imageSrc: a,
                                    id: l,
                                    classes: c,
                                    align: d,
                                    style: h,
                                    imageTitle: m,
                                    imageAlt: f,
                                    borderRadius: g,
                                    imageLink: v,
                                    imageWidth: b,
                                    imageHeight: y,
                                    imageLinkOpenInNewTab: w,
                                    imageViewSrc: k,
                                    lockSize: C,
                                } = (0, p.refs)(this.form);
                            (() => {
                                (n.checked = this.state.marginIsLocked),
                                    (C.checked = this.state.sizeIsLocked);
                            })(),
                                (a.value = (0, p.attr)(t, "src") || ""),
                                k &&
                                    (0, p.attr)(
                                        k,
                                        "src",
                                        (0, p.attr)(t, "src") || ""
                                    ),
                                (() => {
                                    (m.value = (0, p.attr)(t, "title") || ""),
                                        (f.value = (0, p.attr)(t, "alt") || "");
                                    const e = u.Dom.closest(
                                        t,
                                        "a",
                                        this.j.editor
                                    );
                                    e
                                        ? ((v.value =
                                              (0, p.attr)(e, "href") || ""),
                                          (w.checked =
                                              "_blank" ===
                                              (0, p.attr)(e, "target")))
                                        : ((v.value = ""), (w.checked = !1));
                                })(),
                                (() => {
                                    const e =
                                            (0, p.attr)(t, "width") ||
                                            (0, p.css)(t, "width", !0) ||
                                            !1,
                                        i =
                                            (0, p.attr)(t, "height") ||
                                            (0, p.css)(t, "height", !0) ||
                                            !1;
                                    (b.value =
                                        !1 !== e
                                            ? "" + lt(e)
                                            : "" + t.offsetWidth),
                                        (y.value =
                                            !1 !== i
                                                ? "" + lt(i)
                                                : "" + t.offsetHeight),
                                        (this.state.sizeIsLocked = (() =>
                                            !(
                                                !(0, p.isNumeric)(b.value) ||
                                                !(0, p.isNumeric)(y.value)
                                            ) &&
                                            1 >
                                                Math.abs(
                                                    parseFloat(b.value) -
                                                        parseFloat(y.value) *
                                                            this.state.ratio
                                                ))());
                                })(),
                                (() => {
                                    if (!e.image.editMargins) return;
                                    let n = !0,
                                        a = !1;
                                    [i, s, o, r].forEach((e) => {
                                        const s =
                                            (0, p.attr)(e, "data-ref") || "";
                                        let o = t.style.getPropertyValue(
                                            (0, p.kebabCase)(s)
                                        );
                                        if (!o)
                                            return (
                                                (a = !0), void (e.value = "")
                                            );
                                        /^[0-9]+(px)?$/.test(o) &&
                                            (o = parseInt(o, 10)),
                                            (e.value = "" + o || ""),
                                            ((a && e.value) ||
                                                (n &&
                                                    "marginTop" !== s &&
                                                    e.value !== i.value)) &&
                                                (n = !1);
                                    }),
                                        (this.state.marginIsLocked = n);
                                })(),
                                (c.value = (
                                    (0, p.attr)(t, "class") || ""
                                ).replace(/jodit_focused_image[\s]*/, "")),
                                (l.value = (0, p.attr)(t, "id") || ""),
                                (g.value =
                                    "" +
                                    (parseInt(
                                        t.style.borderRadius || "0",
                                        10
                                    ) || "0")),
                                t.style.cssFloat &&
                                -1 !==
                                    ["left", "right"].indexOf(
                                        t.style.cssFloat.toLowerCase()
                                    )
                                    ? (d.value = (0, p.css)(t, "float"))
                                    : "block" === (0, p.css)(t, "display") &&
                                      "auto" === t.style.marginLeft &&
                                      "auto" === t.style.marginRight &&
                                      (d.value = "center"),
                                (h.value = (0, p.attr)(t, "style") || "");
                        }
                        onApply() {
                            const {
                                    style: e,
                                    imageSrc: t,
                                    borderRadius: i,
                                    imageTitle: s,
                                    imageAlt: o,
                                    imageLink: r,
                                    imageWidth: n,
                                    imageHeight: a,
                                    marginTop: l,
                                    marginRight: c,
                                    marginBottom: d,
                                    marginLeft: h,
                                    imageLinkOpenInNewTab: m,
                                    align: f,
                                    classes: g,
                                    id: v,
                                } = (0, p.refs)(this.form),
                                b = this.j.o,
                                { image: y } = this.state;
                            if (
                                (b.image.editStyle &&
                                    (0, p.attr)(y, "style", e.value || null),
                                !t.value)
                            )
                                return (
                                    u.Dom.safeRemove(y),
                                    void this.dialog.close()
                                );
                            (0, p.attr)(y, "src", t.value),
                                (y.style.borderRadius =
                                    "0" !== i.value && /^[0-9]+$/.test(i.value)
                                        ? i.value + "px"
                                        : ""),
                                (0, p.attr)(y, "title", s.value || null),
                                (0, p.attr)(y, "alt", o.value || null);
                            let w = u.Dom.closest(y, "a", this.j.editor);
                            if (
                                (r.value
                                    ? (w ||
                                          (w = u.Dom.wrap(
                                              y,
                                              "a",
                                              this.j.createInside
                                          )),
                                      (0, p.attr)(w, "href", r.value),
                                      (0, p.attr)(
                                          w,
                                          "target",
                                          m.checked ? "_blank" : null
                                      ))
                                    : w &&
                                      w.parentNode &&
                                      w.parentNode.replaceChild(y, w),
                                n.value !== "" + y.offsetWidth ||
                                    a.value !== "" + y.offsetHeight)
                            ) {
                                const e = (0, p.trim)(n.value)
                                        ? at(n.value)
                                        : null,
                                    t = (0, p.trim)(a.value)
                                        ? at(a.value)
                                        : null;
                                (0, p.css)(y, { width: e, height: t }),
                                    (0, p.attr)(
                                        y,
                                        "width",
                                        (0, p.attr)(y, "width") ? e : null
                                    ),
                                    (0, p.attr)(
                                        y,
                                        "height",
                                        (0, p.attr)(y, "height") ? t : null
                                    );
                            }
                            const k = [l, c, d, h];
                            b.image.editMargins &&
                                (this.state.marginIsLocked
                                    ? (0, p.css)(y, "margin", at(l.value))
                                    : k.forEach((e) => {
                                          const t =
                                              (0, p.attr)(e, "data-ref") || "";
                                          (0, p.css)(y, t, at(e.value));
                                      })),
                                b.image.editClass &&
                                    (0, p.attr)(y, "class", g.value || null),
                                b.image.editId &&
                                    (0, p.attr)(y, "id", v.value || null),
                                b.image.editAlign &&
                                    (0, p.hAlignElement)(y, f.value),
                                this.j.synchronizeValues(),
                                this.dialog.close();
                        }
                        openImageEditor() {
                            const e =
                                    (0, p.attr)(this.state.image, "src") || "",
                                t = this.j.c.element("a"),
                                i = () => {
                                    t.host === location.host ||
                                        this.j.confirm(
                                            "You can only edit your own images. Download this image on the host?",
                                            (e) => {
                                                e &&
                                                    this.j.uploader &&
                                                    this.j.uploader.uploadRemoteImage(
                                                        "" + t.href,
                                                        (e) => {
                                                            this.j.alert(
                                                                "The image has been successfully uploaded to the host!",
                                                                () => {
                                                                    (0,
                                                                    p.isString)(
                                                                        e.newfilename
                                                                    ) &&
                                                                        ((0,
                                                                        p.attr)(
                                                                            this
                                                                                .state
                                                                                .image,
                                                                            "src",
                                                                            e.baseurl +
                                                                                e.newfilename
                                                                        ),
                                                                        this.updateValues());
                                                                }
                                                            );
                                                        },
                                                        (e) => {
                                                            this.j.alert(
                                                                "There was an error loading %s",
                                                                e.message
                                                            );
                                                        }
                                                    );
                                            }
                                        );
                                };
                            (t.href = e),
                                this.j.filebrowser.dataProvider
                                    .getPathByUrl("" + t.href)
                                    .then((i) => {
                                        ot.r.call(
                                            this.j.filebrowser,
                                            t.href,
                                            i.name,
                                            i.path,
                                            i.source,
                                            () => {
                                                const t = new Date().getTime();
                                                (0, p.attr)(
                                                    this.state.image,
                                                    "src",
                                                    e +
                                                        (-1 !== e.indexOf("?")
                                                            ? ""
                                                            : "?") +
                                                        "&_tmp=" +
                                                        t
                                                ),
                                                    this.updateValues();
                                            },
                                            (e) => {
                                                this.j.alert(e.message);
                                            }
                                        );
                                    })
                                    .catch((e) => {
                                        this.j.alert(e.message, i);
                                    });
                        }
                        openImagePopup(e) {
                            const t = new u.Popup(this.j),
                                { changeImage: i } = (0, p.refs)(this.form);
                            t.setZIndex(this.dialog.getZIndex() + 1),
                                t
                                    .setContent(
                                        (0, Ne.ov)(
                                            this.j,
                                            {
                                                upload: (e) => {
                                                    e.files &&
                                                        e.files.length &&
                                                        (0, p.attr)(
                                                            this.state.image,
                                                            "src",
                                                            e.baseurl +
                                                                e.files[0]
                                                        ),
                                                        this.updateValues(),
                                                        t.close();
                                                },
                                                filebrowser: (e) => {
                                                    e &&
                                                        (0, p.isArray)(
                                                            e.files
                                                        ) &&
                                                        e.files.length &&
                                                        ((0, p.attr)(
                                                            this.state.image,
                                                            "src",
                                                            e.files[0]
                                                        ),
                                                        t.close(),
                                                        this.updateValues());
                                                },
                                            },
                                            this.state.image,
                                            t.close
                                        )
                                    )
                                    .open(() => (0, p.position)(i)),
                                e.stopPropagation();
                        }
                        afterInit(e) {
                            const t = this;
                            e.e
                                .on("afterConstructor changePlace", () => {
                                    e.e
                                        .off(e.editor, ".imageproperties")
                                        .on(
                                            e.editor,
                                            "dblclick.imageproperties",
                                            (i) => {
                                                const s = i.target;
                                                if (u.Dom.isTag(s, "img"))
                                                    if (
                                                        e.o.image.openOnDblClick
                                                    ) {
                                                        if (
                                                            !1 ===
                                                            this.j.e.fire(
                                                                "openOnDblClick",
                                                                s
                                                            )
                                                        )
                                                            return;
                                                        (t.state.image = s),
                                                            e.o.readonly ||
                                                                (i.stopImmediatePropagation(),
                                                                i.preventDefault(),
                                                                t.open());
                                                    } else
                                                        i.stopImmediatePropagation(),
                                                            e.s.select(s);
                                            }
                                        );
                                })
                                .on(
                                    "openImageProperties.imageproperties",
                                    (e) => {
                                        (this.state.image = e), this.open();
                                    }
                                );
                        }
                        beforeDestruct(e) {
                            this.dialog && this.dialog.destruct(),
                                e.e
                                    .off(e.editor, ".imageproperties")
                                    .off(".imageproperties");
                        }
                    }
                    (0, c.gn)(
                        [(0, g.watch)("state.marginIsLocked")],
                        ct.prototype,
                        "onChangeMarginIsLocked",
                        null
                    ),
                        (0, c.gn)(
                            [(0, g.watch)("state.sizeIsLocked")],
                            ct.prototype,
                            "onChangeSizeIsLocked",
                            null
                        ),
                        (0, c.gn)([g.autobind], ct.prototype, "onApply", null),
                        (0, c.gn)(
                            [g.autobind],
                            ct.prototype,
                            "openImageEditor",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            ct.prototype,
                            "openImagePopup",
                            null
                        ),
                        f.pw.add("imageProperties", ct);
                    const dt = (e, t) =>
                        `${le.i.isCell(t) ? "padding" : "margin"}${
                            "rtl" === e ? "Right" : "Left"
                        }`;
                    te.J.set("indent", i(38471)).set("outdent", i(10580)),
                        (d.D.prototype.controls.indent = {
                            tooltip: "Increase Indent",
                        }),
                        (d.D.prototype.controls.outdent = {
                            isDisabled(e) {
                                const t = e.s.current();
                                if (t) {
                                    const i = ne.i.closest(
                                        t,
                                        ne.i.isBlock,
                                        e.editor
                                    );
                                    if (i) {
                                        const t = dt(e.o.direction, i);
                                        return (
                                            !i.style[t] ||
                                            0 >= parseInt(i.style[t], 10)
                                        );
                                    }
                                }
                                return !0;
                            },
                            tooltip: "Decrease Indent",
                        }),
                        (d.D.prototype.indentMargin = 10),
                        f.pw.add("indent", (e) => {
                            e.registerButton({
                                name: "indent",
                                group: "indent",
                            }).registerButton({
                                name: "outdent",
                                group: "indent",
                            });
                            const t = (t) => {
                                const i = [];
                                return (
                                    e.s.eachSelection((s) => {
                                        e.s.save();
                                        let o =
                                            !!s &&
                                            ne.i.up(s, ne.i.isBlock, e.editor);
                                        const { enter: r } = e.o;
                                        if (
                                            (!o &&
                                                s &&
                                                (o = ne.i.wrapInline(
                                                    s,
                                                    r !== h.BR
                                                        ? r
                                                        : h.PARAGRAPH,
                                                    e
                                                )),
                                            !o)
                                        )
                                            return e.s.restore(), !1;
                                        const n = i.includes(o);
                                        if (o && !n) {
                                            const s = dt(e.o.direction, o);
                                            i.push(o);
                                            let r = o.style[s]
                                                ? parseInt(o.style[s], 10)
                                                : 0;
                                            (r +=
                                                e.o.indentMargin *
                                                ("outdent" === t ? -1 : 1)),
                                                (o.style[s] =
                                                    r > 0 ? r + "px" : ""),
                                                (0, p.attr)(o, "style") ||
                                                    (0, p.attr)(
                                                        o,
                                                        "style",
                                                        null
                                                    );
                                        }
                                        e.s.restore();
                                    }),
                                    e.synchronizeValues(),
                                    !1
                                );
                            };
                            e.registerCommand("indent", {
                                exec: t,
                                hotkeys: ["ctrl+]", "cmd+]"],
                            }),
                                e.registerCommand("outdent", {
                                    exec: t,
                                    hotkeys: ["ctrl+[", "cmd+["],
                                });
                        });
                    var ht = i(30446),
                        ut = i(52569);
                    (d.D.prototype.toolbarInline = !0),
                        (d.D.prototype.toolbarInlineForSelection = !1),
                        (d.D.prototype.toolbarInlineDisableFor = []),
                        (d.D.prototype.toolbarInlineDisabledButtons = [
                            "source",
                        ]),
                        te.J.set("addcolumn", i(28972))
                            .set("addrow", i(40732))
                            .set("merge", i(39822))
                            .set("th", i(59203))
                            .set("splitg", i(62724))
                            .set("splitv", i(4087))
                            .set("th-list", i(16500)),
                        (d.D.prototype.popup = {
                            a: i(95584).Z,
                            img: i(25930).Z,
                            cells: i(84066).Z,
                            toolbar: i(88642).Z,
                            jodit: i(3298).Z,
                            iframe: i(3298).Z,
                            "jodit-media": i(3298).Z,
                            selection: [
                                "bold",
                                "underline",
                                "italic",
                                "ul",
                                "ol",
                                "\n",
                                "outdent",
                                "indent",
                                "fontsize",
                                "brush",
                                "cut",
                                "\n",
                                "paragraph",
                                "link",
                                "align",
                                "dots",
                            ],
                        });
                    class pt extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.requires = ["select"]),
                                (this.type = null),
                                (this.popup = new ut.G(this.jodit, !1)),
                                (this.toolbar = (0, ht.R)(
                                    this.jodit,
                                    this.popup
                                )),
                                (this.snapRange = null),
                                (this.elmsList = (0, p.keys)(
                                    this.j.o.popup,
                                    !1
                                ).filter((e) => !this.isExcludedTarget(e)));
                        }
                        onClick(e) {
                            const t = this.elmsList,
                                i = ne.i.isTag(e, "img")
                                    ? e
                                    : ne.i.closest(e, t, this.j.editor);
                            if (
                                i &&
                                this.canShowPopupForType(
                                    i.nodeName.toLowerCase()
                                )
                            )
                                return (
                                    this.showPopup(
                                        () => (0, p.position)(i, this.j),
                                        i.nodeName.toLowerCase(),
                                        i
                                    ),
                                    !1
                                );
                        }
                        showPopup(e, t, i) {
                            if (
                                ((t = t.toLowerCase()),
                                !this.canShowPopupForType(t))
                            )
                                return !1;
                            if (this.type !== t || i !== this.previousTarget) {
                                this.previousTarget = i;
                                const e = this.j.o.popup[t];
                                let s;
                                (s = (0, p.isFunction)(e)
                                    ? e(this.j, i, this.popup.close)
                                    : e),
                                    (0, p.isArray)(s) &&
                                        (this.toolbar.build(s, i),
                                        (this.toolbar.buttonSize =
                                            this.j.o.toolbarButtonSize),
                                        (s = this.toolbar.container)),
                                    this.popup.setContent(s),
                                    (this.type = t);
                            }
                            return this.popup.open(e), !0;
                        }
                        hidePopup(e) {
                            ((0, p.isString)(e) && e !== this.type) ||
                                this.popup.close();
                        }
                        onOutsideClick() {
                            this.popup.close();
                        }
                        canShowPopupForType(e) {
                            const t = this.j.o.popup[e.toLowerCase()];
                            return !(
                                this.j.o.readonly ||
                                !this.j.o.toolbarInline ||
                                !t ||
                                this.isExcludedTarget(e)
                            );
                        }
                        isExcludedTarget(e) {
                            return (0, p.splitArray)(
                                this.j.o.toolbarInlineDisableFor
                            )
                                .map((e) => e.toLowerCase())
                                .includes(e.toLowerCase());
                        }
                        afterInit(e) {
                            this.j.e
                                .on("getDiffButtons.mobile", (t) => {
                                    if (this.toolbar === t) {
                                        const t =
                                            this.toolbar.getButtonsNames();
                                        return (0, p.toArray)(
                                            e.registeredButtons
                                        )
                                            .filter(
                                                (e) =>
                                                    !this.j.o.toolbarInlineDisabledButtons.includes(
                                                        e.name
                                                    )
                                            )
                                            .filter((e) => {
                                                const i = (0, p.isString)(e)
                                                    ? e
                                                    : e.name;
                                                return (
                                                    i &&
                                                    "|" !== i &&
                                                    "\n" !== i &&
                                                    !t.includes(i)
                                                );
                                            });
                                    }
                                })
                                .on("hidePopup", this.hidePopup)
                                .on("showInlineToolbar", this.showInlineToolbar)
                                .on("showPopup", (e, t, i) => {
                                    this.showPopup(
                                        t,
                                        i ||
                                            ((0, p.isString)(e)
                                                ? e
                                                : e.nodeName),
                                        (0, p.isString)(e) ? void 0 : e
                                    );
                                })
                                .on("mousedown keydown", this.onSelectionStart)
                                .on("change", () => {
                                    this.popup.isOpened &&
                                        this.previousTarget &&
                                        !this.previousTarget.parentNode &&
                                        (this.hidePopup(),
                                        (this.previousTarget = void 0));
                                })
                                .on(
                                    [this.j.ew, this.j.ow],
                                    "mouseup keyup",
                                    this.onSelectionEnd
                                ),
                                this.addListenersForElements();
                        }
                        onSelectionStart() {
                            this.snapRange = this.j.s.range.cloneRange();
                        }
                        onSelectionEnd(e) {
                            if (
                                e &&
                                e.target &&
                                ie.u1.closestElement(e.target, ut.G)
                            )
                                return;
                            const { snapRange: t } = this,
                                { range: i } = this.j.s;
                            (t &&
                                !i.collapsed &&
                                i.startContainer === t.startContainer &&
                                i.startOffset === t.startOffset &&
                                i.endContainer === t.endContainer &&
                                i.endOffset === t.endOffset) ||
                                this.onSelectionChange();
                        }
                        onSelectionChange() {
                            if (!this.j.o.toolbarInlineForSelection) return;
                            const e = "selection",
                                t = this.j.s.sel,
                                i = this.j.s.range;
                            (null == t ? void 0 : t.isCollapsed) ||
                            this.isSelectedTarget(i) ||
                            this.tableModule.getAllSelectedCells().length
                                ? this.type === e &&
                                  this.popup.isOpened &&
                                  this.hidePopup()
                                : this.j.s.current() &&
                                  this.showPopup(
                                      () => i.getBoundingClientRect(),
                                      e
                                  );
                        }
                        isSelectedTarget(e) {
                            const t = e.startContainer;
                            return (
                                ne.i.isElement(t) &&
                                t === e.endContainer &&
                                ne.i.isTag(
                                    t.childNodes[e.startOffset],
                                    (0, p.keys)(this.j.o.popup, !1)
                                ) &&
                                e.startOffset === e.endOffset - 1
                            );
                        }
                        get tableModule() {
                            return this.j.getInstance("Table", this.j.o);
                        }
                        beforeDestruct(e) {
                            e.e
                                .off("showPopup")
                                .off(
                                    [this.j.ew, this.j.ow],
                                    "mouseup keyup",
                                    this.onSelectionEnd
                                ),
                                this.removeListenersForElements();
                        }
                        _eventsList() {
                            const e = this.elmsList;
                            return e
                                .map((e) => (0, p.camelCase)("click_" + e))
                                .concat(
                                    e.map((e) =>
                                        (0, p.camelCase)("touchstart_" + e)
                                    )
                                )
                                .join(" ");
                        }
                        addListenersForElements() {
                            this.j.e.on(this._eventsList(), this.onClick);
                        }
                        removeListenersForElements() {
                            this.j.e.off(this._eventsList(), this.onClick);
                        }
                        showInlineToolbar(e) {
                            this.showPopup(() => {
                                if (e) return e;
                                const { range: t } = this.j.s;
                                return t.getBoundingClientRect();
                            }, "toolbar");
                        }
                    }
                    (0, c.gn)([g.autobind], pt.prototype, "onClick", null),
                        (0, c.gn)(
                            [(0, g.wait)((e) => !e.j.isLocked)],
                            pt.prototype,
                            "showPopup",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":clickEditor"), g.autobind],
                            pt.prototype,
                            "hidePopup",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":outsideClick")],
                            pt.prototype,
                            "onOutsideClick",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            pt.prototype,
                            "onSelectionStart",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            pt.prototype,
                            "onSelectionEnd",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.debounce)((e) => e.defaultTimeout)],
                            pt.prototype,
                            "onSelectionChange",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            pt.prototype,
                            "showInlineToolbar",
                            null
                        ),
                        f.pw.add("inlinePopup", pt);
                    var mt = i(99705);
                    te.J.set("justify", i(88145)),
                        (d.D.prototype.controls.align = {
                            name: "left",
                            tooltip: "Align",
                            update(e, t) {
                                const i = e.control,
                                    s = t.s.current();
                                if (s) {
                                    const o =
                                        le.i.closest(
                                            s,
                                            le.i.isBlock,
                                            t.editor
                                        ) || t.editor;
                                    let r = "" + (0, Re.i)(o, "text-align");
                                    i.defaultValue &&
                                        -1 !== i.defaultValue.indexOf(r) &&
                                        (r = "left"),
                                        i.data &&
                                            i.data.currentValue !== r &&
                                            i.list &&
                                            -1 !== i.list.indexOf(r) &&
                                            (t.o.textIcons
                                                ? (e.state.text = r)
                                                : (e.state.icon.name = r),
                                            (i.data.currentValue = r));
                                }
                            },
                            isActive(e, t) {
                                const i = e.s.current();
                                if (i && t.defaultValue) {
                                    const s =
                                        le.i.closest(
                                            i,
                                            le.i.isBlock,
                                            e.editor
                                        ) || e.editor;
                                    return (
                                        -1 ===
                                        t.defaultValue.indexOf(
                                            "" + (0, Re.i)(s, "text-align")
                                        )
                                    );
                                }
                                return !1;
                            },
                            defaultValue: ["left", "start", "inherit"],
                            data: { currentValue: "left" },
                            list: ["center", "left", "right", "justify"],
                        }),
                        (d.D.prototype.controls.center = {
                            command: "justifyCenter",
                            css: { "text-align": "center" },
                            tooltip: "Align Center",
                        }),
                        (d.D.prototype.controls.justify = {
                            command: "justifyFull",
                            css: { "text-align": "justify" },
                            tooltip: "Align Justify",
                        }),
                        (d.D.prototype.controls.left = {
                            command: "justifyLeft",
                            css: { "text-align": "left" },
                            tooltip: "Align Left",
                        }),
                        (d.D.prototype.controls.right = {
                            command: "justifyRight",
                            css: { "text-align": "right" },
                            tooltip: "Align Right",
                        }),
                        f.pw.add("justify", (e) => {
                            e.registerButton({
                                name: "align",
                                group: "indent",
                            });
                            const t = (t) => (
                                e.s.focus(),
                                e.s.eachSelection((i) => {
                                    if (!i) return;
                                    let s = le.i.up(i, le.i.isBlock, e.editor);
                                    s ||
                                        (s = le.i.wrapInline(
                                            i,
                                            e.o.enterBlock,
                                            e
                                        )),
                                        (0, mt.E3)(t, s);
                                }),
                                !1
                            );
                            e.registerCommand("justifyfull", t),
                                e.registerCommand("justifyright", t),
                                e.registerCommand("justifyleft", t),
                                e.registerCommand("justifycenter", t);
                        });
                    class ft extends re.S {
                        afterInit(e) {}
                        beforeDestruct(e) {}
                        onKeyDownArrow(e) {
                            var t;
                            if (
                                e.key !== h.KEY_RIGHT ||
                                !this.j.selection.isCollapsed()
                            )
                                return;
                            const { endContainer: i, endOffset: s } =
                                this.j.selection.range;
                            if (
                                le.i.isText(i) &&
                                (null === (t = i.nodeValue) || void 0 === t
                                    ? void 0
                                    : t.length) === s
                            ) {
                                const { parentNode: e } = i;
                                le.i.isInlineBlock(e) &&
                                    !le.i.findNotEmptyNeighbor(
                                        e,
                                        !1,
                                        this.j.editor
                                    ) &&
                                    le.i.after(
                                        e,
                                        this.j.createInside.text(h.NBSP_SPACE)
                                    );
                            }
                        }
                    }
                    (0, c.gn)(
                        [(0, g.watch)(":keydown")],
                        ft.prototype,
                        "onKeyDownArrow",
                        null
                    ),
                        f.pw.add("keyArrowOutside", ft),
                        (d.D.prototype.limitWords = !1),
                        (d.D.prototype.limitChars = !1),
                        (d.D.prototype.limitHTML = !1);
                    class gt extends re.S {
                        afterInit(e) {
                            const { limitWords: t, limitChars: i } = e.o;
                            if (e && (t || i)) {
                                let t = null;
                                e.e
                                    .off(".limit")
                                    .on("beforePaste.limit", () => {
                                        t = e.history.snapshot.make();
                                    })
                                    .on(
                                        "keydown.limit keyup.limit beforeEnter.limit",
                                        this.checkPreventKeyPressOrPaste
                                    )
                                    .on(
                                        "change.limit",
                                        this.checkPreventChanging
                                    )
                                    .on("afterPaste.limit", () => {
                                        if (this.__shouldDenyInput(!0) && t)
                                            return (
                                                e.history.snapshot.restore(t),
                                                e.e.fire("denyPaste.limit"),
                                                !1
                                            );
                                    });
                            }
                        }
                        shouldPreventInsertHTML(e) {
                            return (
                                (!e ||
                                    !(
                                        h.COMMAND_KEYS.includes(e.key) ||
                                        e.ctrlKey ||
                                        e.metaKey
                                    )) &&
                                this.__shouldDenyInput(!1)
                            );
                        }
                        __shouldDenyInput(e) {
                            const { jodit: t } = this,
                                { limitWords: i, limitChars: s } = t.o,
                                o = this.__splitWords(
                                    t.o.limitHTML ? t.value : t.text
                                );
                            if (i && vt(o.length, i, e))
                                return (
                                    t.e.fire("denyWords.limit limit.limit"), !0
                                );
                            const r = !(!s || !vt(o.join("").length, s, e));
                            return (
                                r && t.e.fire("denyChars.limit limit.limit"), r
                            );
                        }
                        checkPreventKeyPressOrPaste(e) {
                            if (this.shouldPreventInsertHTML(e)) return !1;
                        }
                        checkPreventChanging(e, t) {
                            const { jodit: i } = this;
                            this.__shouldDenyInput(!0) && (i.value = t);
                        }
                        __splitWords(e) {
                            return e
                                .replace((0, h.INVISIBLE_SPACE_REG_EXP)(), "")
                                .split((0, h.SPACE_REG_EXP)())
                                .filter((e) => e.length);
                        }
                        beforeDestruct(e) {
                            e.e.off(".limit");
                        }
                    }
                    function vt(e, t, i) {
                        return i ? e > t : e >= t;
                    }
                    (0, c.gn)(
                        [g.autobind],
                        gt.prototype,
                        "checkPreventKeyPressOrPaste",
                        null
                    ),
                        (0, c.gn)(
                            [g.autobind],
                            gt.prototype,
                            "checkPreventChanging",
                            null
                        ),
                        f.pw.add("limit", gt),
                        (d.D.prototype.defaultLineHeight = null),
                        te.J.set("line-height", i(21702)),
                        (d.D.prototype.controls.lineHeight = {
                            command: "applyLineHeight",
                            tags: ["ol"],
                            tooltip: "Line height",
                            list: [1, 1.1, 1.2, 1.3, 1.4, 1.5, 2],
                            exec(e, t, { control: i }) {
                                return (0, p.memorizeExec)(
                                    e,
                                    t,
                                    { control: i },
                                    (e) => e
                                );
                            },
                        });
                    class bt extends re.S {
                        constructor(e) {
                            super(e),
                                (this.buttons = [
                                    { name: "lineHeight", group: "font" },
                                ]),
                                (0, f.xl)(i(5803));
                        }
                        afterInit(e) {
                            (0, p.css)(e.editor, {
                                lineHeight: e.o.defaultLineHeight,
                            }),
                                e.registerCommand(
                                    "applyLineHeight",
                                    this.applyLineHeight
                                );
                        }
                        applyLineHeight(e, t, i) {
                            const {
                                s,
                                createInside: o,
                                editor: r,
                                o: n,
                            } = this.j;
                            let a;
                            s.isFocused() || s.focus(), s.save();
                            const l = (e) => {
                                let t = le.i.closest(e, le.i.isBlock, r);
                                t || (t = le.i.wrap(e, n.enter, o));
                                const s = (0, p.css)(t, "lineHeight");
                                void 0 === a && (a = "" + s != "" + i),
                                    (0, p.css)(t, "lineHeight", a ? i : null);
                            };
                            try {
                                if (s.isCollapsed()) {
                                    const e = o.fake();
                                    s.insertNode(e, !1, !1),
                                        l(e),
                                        le.i.safeRemove(e);
                                } else s.eachSelection(l);
                            } finally {
                                s.restore();
                            }
                        }
                        beforeDestruct(e) {
                            (0, p.css)(e.editor, { lineHeight: null });
                        }
                    }
                    (0, c.gn)(
                        [g.autobind],
                        bt.prototype,
                        "applyLineHeight",
                        null
                    ),
                        f.pw.add("lineHeight", bt);
                    var yt = i(21861);
                    (d.D.prototype.link = {
                        formTemplate(e) {
                            const {
                                openInNewTabCheckbox: t,
                                noFollowCheckbox: i,
                                modeClassName: s,
                                selectSizeClassName: o,
                                selectMultipleClassName: r,
                                selectOptionsClassName: n,
                            } = e.o.link;
                            return new yt.x4(e, [
                                new yt.eC(e, [
                                    new yt.u3(e, {
                                        name: "url",
                                        type: "text",
                                        ref: "url_input",
                                        label: "URL",
                                        placeholder: "http://",
                                        required: !0,
                                    }),
                                ]),
                                new yt.eC(
                                    e,
                                    [
                                        new yt.u3(e, {
                                            name: "content",
                                            ref: "content_input",
                                            label: "Text",
                                        }),
                                    ],
                                    { ref: "content_input_box" }
                                ),
                                s
                                    ? new yt.eC(e, [
                                          "input" === s
                                              ? new yt.u3(e, {
                                                    name: "className",
                                                    ref: "className_input",
                                                    label: "Class name",
                                                })
                                              : "select" === s
                                              ? new yt.Cj(e, {
                                                    name: "className",
                                                    ref: "className_select",
                                                    label: "Class name",
                                                    size: o,
                                                    multiple: r,
                                                    options: n,
                                                })
                                              : null,
                                      ])
                                    : null,
                                t
                                    ? new yt.mA(e, {
                                          name: "target",
                                          ref: "target_checkbox",
                                          label: "Open in new tab",
                                      })
                                    : null,
                                i
                                    ? new yt.mA(e, {
                                          name: "nofollow",
                                          ref: "nofollow_checkbox",
                                          label: "No follow",
                                      })
                                    : null,
                                new yt.eC(
                                    e,
                                    [
                                        new st.y3(e, {
                                            name: "unlink",
                                            variant: "default",
                                            text: "Unlink",
                                        }),
                                        new st.y3(e, {
                                            name: "insert",
                                            type: "submit",
                                            variant: "primary",
                                            text: "Insert",
                                        }),
                                    ],
                                    { align: "full" }
                                ),
                            ]);
                        },
                        followOnDblClick: !1,
                        processVideoLink: !0,
                        processPastedLink: !0,
                        noFollowCheckbox: !0,
                        openInNewTabCheckbox: !0,
                        modeClassName: "input",
                        selectMultipleClassName: !0,
                        selectSizeClassName: 3,
                        selectOptionsClassName: [],
                        hotkeys: ["ctrl+k", "cmd+k"],
                    }),
                        te.J.set("link", i(40364)).set("unlink", i(33178)),
                        (d.D.prototype.controls.unlink = {
                            exec(e, t) {
                                const i = le.i.closest(t, "a", e.editor);
                                i && le.i.unwrap(i),
                                    e.synchronizeValues(),
                                    e.e.fire("hidePopup");
                            },
                            tooltip: "Unlink",
                        }),
                        (d.D.prototype.controls.link = {
                            isActive(e) {
                                const t = e.s.current();
                                return !(!t || !le.i.closest(t, "a", e.editor));
                            },
                            popup(e, t, i, s) {
                                return e.e.fire("generateLinkForm.link", t, s);
                            },
                            tags: ["a"],
                            tooltip: "Insert link",
                        });
                    class wt extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.buttons = [
                                    { name: "link", group: "insert" },
                                ]);
                        }
                        afterInit(e) {
                            e.o.link.followOnDblClick &&
                                e.e.on("dblclick.link", this.onDblClickOnLink),
                                e.o.link.processPastedLink &&
                                    e.e.on(
                                        "processPaste.link",
                                        this.onProcessPasteLink
                                    ),
                                e.e.on(
                                    "generateLinkForm.link",
                                    this.__generateForm
                                ),
                                e.registerCommand("openLinkDialog", {
                                    exec: () => {
                                        const t = e.dlg({ resizable: !1 }),
                                            i = this.__generateForm(
                                                e.s.current(),
                                                () => {
                                                    t.close();
                                                }
                                            );
                                        i.container.classList.add(
                                            "jodit-dialog_alert"
                                        ),
                                            t.setContent(i),
                                            t.open(),
                                            e.async.requestIdleCallback(() => {
                                                const { url_input: e } = (0,
                                                p.refs)(i.container);
                                                null == e || e.focus();
                                            });
                                    },
                                    hotkeys: e.o.link.hotkeys,
                                });
                        }
                        onDblClickOnLink(e) {
                            if (!ne.i.isTag(e.target, "a")) return;
                            const t = (0, p.attr)(e.target, "href");
                            t && ((location.href = t), e.preventDefault());
                        }
                        onProcessPasteLink(e, t) {
                            const { jodit: i } = this;
                            if ((0, p.isURL)(t) && i.o.link.processPastedLink) {
                                if (
                                    (i.e.stopPropagation("processPaste"),
                                    i.o.link.processVideoLink)
                                ) {
                                    const e = (0,
                                    p.convertMediaUrlToVideoEmbed)(t);
                                    if (e !== t)
                                        return i.createInside.fromHTML(e);
                                }
                                if (i.s.isCollapsed()) {
                                    const e = i.createInside.element("a");
                                    return (
                                        e.setAttribute("href", t),
                                        (e.textContent = t),
                                        i.e.fire("applyLink", i, e, null),
                                        e
                                    );
                                }
                                return (
                                    i.s.applyStyle(void 0, {
                                        element: "a",
                                        attributes: { href: t },
                                    }),
                                    !0
                                );
                            }
                        }
                        __generateForm(e, t) {
                            const { jodit: i } = this,
                                s = i.i18n.bind(i),
                                {
                                    openInNewTabCheckbox: o,
                                    noFollowCheckbox: r,
                                    formTemplate: n,
                                    formClassName: a,
                                    modeClassName: l,
                                } = i.o.link,
                                c = n(i),
                                d = (0, p.isString)(c)
                                    ? i.c.fromHTML(c, {
                                          target_checkbox_box: o,
                                          nofollow_checkbox_box: r,
                                      })
                                    : c,
                                h = ne.i.isElement(d) ? d : d.container,
                                u = (0, p.refs)(h),
                                {
                                    insert: m,
                                    unlink: f,
                                    content_input_box: g,
                                } = u,
                                {
                                    target_checkbox: v,
                                    nofollow_checkbox: b,
                                    url_input: y,
                                } = u,
                                w = ne.i.isImage(e);
                            let { content_input: k } = u;
                            const { className_input: C } = u,
                                { className_select: S } = u;
                            let x;
                            k ||
                                (k = i.c.element("input", {
                                    type: "hidden",
                                    ref: "content_input",
                                })),
                                a && h.classList.add(a),
                                w && ne.i.hide(g);
                            const E = () =>
                                x
                                    ? x.innerText
                                    : (0, p.stripTags)(
                                          i.s.range.cloneContents(),
                                          i.ed
                                      );
                            if (
                                ((x =
                                    !(!e || !ne.i.closest(e, "a", i.editor)) &&
                                    ne.i.closest(e, "a", i.editor)),
                                !w && e && (k.value = E()),
                                x)
                            ) {
                                if (
                                    ((y.value = (0, p.attr)(x, "href") || ""),
                                    l)
                                )
                                    switch (l) {
                                        case "input":
                                            C &&
                                                (C.value =
                                                    (0, p.attr)(x, "class") ||
                                                    "");
                                            break;
                                        case "select":
                                            if (S) {
                                                for (
                                                    let e = 0;
                                                    S.selectedOptions.length >
                                                    e;
                                                    e++
                                                ) {
                                                    const t = S.options.item(e);
                                                    t && (t.selected = !1);
                                                }
                                                ((0, p.attr)(x, "class") || "")
                                                    .split(" ")
                                                    .forEach((e) => {
                                                        if (e)
                                                            for (
                                                                let t = 0;
                                                                S.options
                                                                    .length > t;
                                                                t++
                                                            ) {
                                                                const i =
                                                                    S.options.item(
                                                                        t
                                                                    );
                                                                (null == i
                                                                    ? void 0
                                                                    : i.value) &&
                                                                    i.value ===
                                                                        e &&
                                                                    (i.selected =
                                                                        !0);
                                                            }
                                                    });
                                            }
                                    }
                                o &&
                                    v &&
                                    (v.checked =
                                        "_blank" === (0, p.attr)(x, "target")),
                                    r &&
                                        b &&
                                        (b.checked =
                                            "nofollow" ===
                                            (0, p.attr)(x, "rel")),
                                    (m.textContent = s("Update"));
                            } else ne.i.hide(f);
                            i.editor.normalize();
                            const _ = i.history.snapshot.make();
                            f &&
                                i.e.on(f, "click", (e) => {
                                    i.s.restore(),
                                        i.history.snapshot.restore(_),
                                        x && ne.i.unwrap(x),
                                        i.synchronizeValues(),
                                        t(),
                                        e.preventDefault();
                                });
                            const j = () => {
                                if (!y.value.trim().length)
                                    return (
                                        y.focus(),
                                        y.classList.add("jodit_error"),
                                        !1
                                    );
                                let e;
                                i.s.restore(),
                                    i.s.removeMarkers(),
                                    i.editor.normalize(),
                                    i.history.snapshot.restore(_);
                                const s = E() !== k.value.trim(),
                                    n = i.createInside;
                                if (x) e = [x];
                                else {
                                    if (i.s.isCollapsed()) {
                                        const t = n.element("a");
                                        i.s.insertNode(t, !1, !1), (e = [t]);
                                    } else {
                                        const t = i.s.current();
                                        e = ne.i.isTag(t, ["img"])
                                            ? [ne.i.wrap(t, "a", n)]
                                            : i.s.wrapInTag("a");
                                    }
                                    e.forEach((e) => i.s.select(e));
                                }
                                return (
                                    e.forEach((e) => {
                                        var t;
                                        if (
                                            ((0, p.attr)(e, "href", y.value),
                                            l && (null != C ? C : S))
                                        )
                                            if ("input" === l)
                                                "" === C.value &&
                                                    e.hasAttribute("class") &&
                                                    (0, p.attr)(
                                                        e,
                                                        "class",
                                                        null
                                                    ),
                                                    "" !== C.value &&
                                                        (0, p.attr)(
                                                            e,
                                                            "class",
                                                            C.value
                                                        );
                                            else if ("select" === l) {
                                                e.hasAttribute("class") &&
                                                    (0, p.attr)(
                                                        e,
                                                        "class",
                                                        null
                                                    );
                                                for (
                                                    let i = 0;
                                                    S.selectedOptions.length >
                                                    i;
                                                    i++
                                                ) {
                                                    const s =
                                                        null ===
                                                            (t =
                                                                S.selectedOptions.item(
                                                                    i
                                                                )) ||
                                                        void 0 === t
                                                            ? void 0
                                                            : t.value;
                                                    s && e.classList.add(s);
                                                }
                                            }
                                        if (!w) {
                                            let t = e.textContent;
                                            k.value.trim().length
                                                ? s && (t = k.value)
                                                : (t = y.value),
                                                t !== e.textContent &&
                                                    (e.textContent = t);
                                        }
                                        o &&
                                            v &&
                                            (0, p.attr)(
                                                e,
                                                "target",
                                                v.checked ? "_blank" : null
                                            ),
                                            r &&
                                                b &&
                                                (0, p.attr)(
                                                    e,
                                                    "rel",
                                                    b.checked
                                                        ? "nofollow"
                                                        : null
                                                ),
                                            i.e.fire("applyLink", i, e, d);
                                    }),
                                    i.synchronizeValues(),
                                    t(),
                                    !1
                                );
                            };
                            return (
                                ne.i.isElement(d)
                                    ? i.e.on(
                                          d,
                                          "submit",
                                          (e) => (
                                              e.preventDefault(),
                                              e.stopImmediatePropagation(),
                                              j(),
                                              !1
                                          )
                                      )
                                    : d.onSubmit(j),
                                d
                            );
                        }
                        beforeDestruct(e) {
                            e.e
                                .off(
                                    "generateLinkForm.link",
                                    this.__generateForm
                                )
                                .off("dblclick.link", this.onDblClickOnLink)
                                .off(
                                    "processPaste.link",
                                    this.onProcessPasteLink
                                );
                        }
                    }
                    (0, c.gn)(
                        [g.autobind],
                        wt.prototype,
                        "onDblClickOnLink",
                        null
                    ),
                        (0, c.gn)(
                            [g.autobind],
                            wt.prototype,
                            "onProcessPasteLink",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            wt.prototype,
                            "__generateForm",
                            null
                        ),
                        f.pw.add("link", wt),
                        (d.D.prototype.mediaFakeTag = "jodit-media"),
                        (d.D.prototype.mediaInFakeBlock = !0),
                        (d.D.prototype.mediaBlocks = ["video", "audio"]),
                        f.pw.add("media", (e) => {
                            const t = "jodit_fake_wrapper",
                                {
                                    mediaFakeTag: i,
                                    mediaBlocks: s,
                                    mediaInFakeBlock: o,
                                } = e.options;
                            o &&
                                e.e
                                    .on("afterGetValueFromEditor", (e) => {
                                        const s = RegExp(
                                            `<${i}[^>]+data-${t}[^>]+>([^]+?)</${i}>`,
                                            "ig"
                                        );
                                        s.test(e.value) &&
                                            (e.value = e.value.replace(
                                                s,
                                                "$1"
                                            ));
                                    })
                                    .on(
                                        "change afterInit afterSetMode changePlace",
                                        e.async.debounce(() => {
                                            e.isDestructed ||
                                                e.getMode() === h.MODE_SOURCE ||
                                                (0, me.$$)(
                                                    s.join(","),
                                                    e.editor
                                                ).forEach((s) => {
                                                    (0, me.dataBind)(s, t) ||
                                                        ((0, me.dataBind)(
                                                            s,
                                                            t,
                                                            !0
                                                        ),
                                                        ((s) => {
                                                            if (
                                                                s.parentNode &&
                                                                (0, me.attr)(
                                                                    s.parentNode,
                                                                    "data-jodit_iframe_wrapper"
                                                                )
                                                            )
                                                                s =
                                                                    s.parentNode;
                                                            else {
                                                                const o =
                                                                    e.createInside.element(
                                                                        i,
                                                                        {
                                                                            "data-jodit-temp": 1,
                                                                            contenteditable:
                                                                                !1,
                                                                            draggable:
                                                                                !0,
                                                                            ["data-" +
                                                                            t]: 1,
                                                                        }
                                                                    );
                                                                (0, me.attr)(
                                                                    o,
                                                                    "style",
                                                                    (0,
                                                                    me.attr)(
                                                                        s,
                                                                        "style"
                                                                    )
                                                                ),
                                                                    (o.style.display =
                                                                        "inline-block" ===
                                                                        s.style
                                                                            .display
                                                                            ? "inline-block"
                                                                            : "block"),
                                                                    (o.style.width =
                                                                        s.offsetWidth +
                                                                        "px"),
                                                                    (o.style.height =
                                                                        s.offsetHeight +
                                                                        "px"),
                                                                    s.parentNode &&
                                                                        s.parentNode.insertBefore(
                                                                            o,
                                                                            s
                                                                        ),
                                                                    o.appendChild(
                                                                        s
                                                                    ),
                                                                    (s = o);
                                                            }
                                                            e.e
                                                                .off(
                                                                    s,
                                                                    "mousedown.select touchstart.select"
                                                                )
                                                                .on(
                                                                    s,
                                                                    "mousedown.select touchstart.select",
                                                                    () => {
                                                                        e.s.setCursorAfter(
                                                                            s
                                                                        );
                                                                    }
                                                                );
                                                        })(s));
                                                });
                                        }, e.defaultTimeout)
                                    );
                        });
                    var kt = i(1017),
                        Ct = i(81023);
                    (d.D.prototype.mobileTapTimeout = 300),
                        (d.D.prototype.toolbarAdaptive = !0),
                        (d.D.prototype.controls.dots = {
                            mode: h.MODE_SOURCE + h.MODE_WYSIWYG,
                            popup(e, t, i, s, o) {
                                let r = i.data;
                                return (
                                    void 0 === r &&
                                        ((r = {
                                            toolbar: (0, ht.R)(e),
                                            rebuild() {
                                                var t;
                                                if (o) {
                                                    const i = e.e.fire(
                                                        "getDiffButtons.mobile",
                                                        o.closest(Ct.n)
                                                    );
                                                    if (i && r) {
                                                        r.toolbar.build(
                                                            (0, p.splitArray)(i)
                                                        );
                                                        const s =
                                                            (null ===
                                                                (t =
                                                                    e.toolbar
                                                                        .firstButton) ||
                                                            void 0 === t
                                                                ? void 0
                                                                : t.container
                                                                      .offsetWidth) ||
                                                            36;
                                                        r.toolbar.container.style.width =
                                                            3 * (s + 4) + "px";
                                                    }
                                                }
                                            },
                                        }),
                                        (i.data = r)),
                                    r.rebuild(),
                                    r.toolbar
                                );
                            },
                            tooltip: "Show all",
                        }),
                        f.pw.add("mobile", (e) => {
                            let t = 0,
                                i = (0, p.splitArray)(e.o.buttons);
                            e.o.mobileTapTimeout &&
                                e.e.on("touchend", (i) => {
                                    if (
                                        i.changedTouches &&
                                        i.changedTouches.length
                                    ) {
                                        const s = new Date().getTime(),
                                            o = s - t;
                                        o > e.o.mobileTapTimeout &&
                                            ((t = s),
                                            1.5 * e.o.mobileTapTimeout > o &&
                                                e.s.insertCursorAtPoint(
                                                    i.clientX,
                                                    i.clientY
                                                ));
                                    }
                                }),
                                e.e.on("getDiffButtons.mobile", (t) => {
                                    if (t === e.toolbar) {
                                        const t = (0, kt.q)(
                                                (0, p.splitArray)(e.o.buttons),
                                                e
                                            ),
                                            s = (0, kt.q)(i, e);
                                        return (0, p.toArray)(t).reduce(
                                            (e, t) => (
                                                s.has(t) || e.push(t), e
                                            ),
                                            []
                                        );
                                    }
                                }),
                                e.o.toolbarAdaptive &&
                                    e.e
                                        .on(
                                            "resize afterInit recalcAdaptive changePlace afterAddPlace",
                                            () => {
                                                var t;
                                                if (!e.o.toolbar) return;
                                                const s = (
                                                        null !==
                                                            (t =
                                                                e.container
                                                                    .parentElement) &&
                                                        void 0 !== t
                                                            ? t
                                                            : e.container
                                                    ).offsetWidth,
                                                    o = (0, p.splitArray)(
                                                        e.isFullSize ||
                                                            s >= e.o.sizeLG
                                                            ? e.o.buttons
                                                            : e.o.sizeMD > s
                                                            ? e.o.sizeSM > s
                                                                ? e.o.buttonsXS
                                                                : e.o.buttonsSM
                                                            : e.o.buttonsMD
                                                    );
                                                "" + o != "" + i &&
                                                    ((i = o),
                                                    e.e.fire("closeAllPopups"),
                                                    e.toolbar
                                                        .setRemoveButtons(
                                                            e.o.removeButtons
                                                        )
                                                        .build(
                                                            i.concat(
                                                                e.o.extraButtons
                                                            )
                                                        ));
                                            }
                                        )
                                        .on(e.ow, "load resize", () =>
                                            e.e.fire("recalcAdaptive")
                                        );
                        });
                    var St = i(69003);
                    const xt = (e, t, { control: i }) => {
                        var s;
                        const o = "button" + i.command,
                            r =
                                null !== (s = i.args && i.args[0]) &&
                                void 0 !== s
                                    ? s
                                    : (0, St.q)(e, o);
                        (0, St.q)(e, o, r),
                            e.execCommand(
                                i.command,
                                !1,
                                "default" === r ? null : r
                            );
                    };
                    te.J.set("ol", i(8681)).set("ul", i(1513)),
                        (d.D.prototype.controls.ul = {
                            command: "insertUnorderedList",
                            tags: ["ul"],
                            tooltip: "Insert Unordered List",
                            list: {
                                default: "Default",
                                circle: "Circle",
                                disc: "Dot",
                                square: "Quadrate",
                            },
                            exec: xt,
                        }),
                        (d.D.prototype.controls.ol = {
                            command: "insertOrderedList",
                            tags: ["ol"],
                            tooltip: "Insert Ordered List",
                            list: {
                                default: "Default",
                                "lower-alpha": "Lower Alpha",
                                "lower-greek": "Lower Greek",
                                "lower-roman": "Lower Roman",
                                "upper-alpha": "Upper Alpha",
                                "upper-roman": "Upper Roman",
                            },
                            exec: xt,
                        });
                    class Et extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.buttons = [
                                    { name: "ul", group: "list" },
                                    { name: "ol", group: "list" },
                                ]);
                        }
                        afterInit(e) {
                            e.registerCommand(
                                "insertUnorderedList",
                                this.onCommand
                            ).registerCommand(
                                "insertOrderedList",
                                this.onCommand
                            );
                        }
                        onCommand(e, t, i) {
                            return (
                                this.jodit.s.applyStyle(
                                    { listStyleType: null != i ? i : null },
                                    {
                                        element:
                                            "insertunorderedlist" === e
                                                ? "ul"
                                                : "ol",
                                    }
                                ),
                                this.jodit.synchronizeValues(),
                                !1
                            );
                        }
                        beforeDestruct(e) {}
                    }
                    (0, c.gn)([g.autobind], Et.prototype, "onCommand", null),
                        f.pw.add("orderedList", Et);
                    var _t = i(29527);
                    (d.D.prototype.askBeforePasteHTML = !0),
                        (d.D.prototype.processPasteHTML = !0),
                        (d.D.prototype.pasteHTMLActionList = [
                            { value: h.INSERT_AS_HTML, text: "Keep" },
                            { value: h.INSERT_AS_TEXT, text: "Insert as Text" },
                            {
                                value: h.INSERT_ONLY_TEXT,
                                text: "Insert only Text",
                            },
                        ]),
                        (d.D.prototype.memorizeChoiceWhenPasteFragment = !1),
                        (d.D.prototype.nl2brInPlainText = !0);
                    const jt = "pasteStorage";
                    d.D.prototype.controls.paste = {
                        tooltip: "Paste from clipboard",
                        async exec(e, t, { control: i }) {
                            if (i.name === jt)
                                return void e.execCommand("showPasteStorage");
                            e.s.focus();
                            let s = "",
                                o = !0;
                            if (navigator.clipboard) {
                                try {
                                    const e = await navigator.clipboard.read();
                                    if (e && e.length) {
                                        const t = await e[0].getType(
                                            h.TEXT_PLAIN
                                        );
                                        s = await new Response(t).text();
                                    }
                                    o = !1;
                                } catch (e) {}
                                if (o)
                                    try {
                                        (s =
                                            await navigator.clipboard.readText()),
                                            (o = !1);
                                    } catch (e) {}
                            }
                            o &&
                                ((s = e.buffer.get(h.CLIPBOARD_ID) || ""),
                                (o = 0 === s.length));
                            const r = e.value;
                            o
                                ? (e.ed.execCommand("paste"),
                                  (o = r === e.value),
                                  !o && e.e.fire("afterPaste"))
                                : s.length
                                ? ((0, _t.kU)(null, e, s),
                                  e.e.fire("afterPaste"))
                                : o &&
                                  e.alert(
                                      "Your browser doesn't support direct access to the clipboard.",
                                      () => {
                                          e.s.focus();
                                      }
                                  );
                        },
                        list: { [jt]: "Paste Storage" },
                        isChildDisabled: (e) =>
                            2 > e.e.fire("pasteStorageList"),
                    };
                    class zt extends ye.S {
                        constructor() {
                            super(...arguments),
                                (this.pasteStack = new p.LimitedStack(20)),
                                (this._isDialogOpened = !1);
                        }
                        afterInit(e) {
                            e.e
                                .on("paste.paste", this.onPaste)
                                .on("pasteStack.paste", (e) =>
                                    this.pasteStack.push(e)
                                ),
                                e.o.nl2brInPlainText &&
                                    this.j.e.on(
                                        "processPaste.paste",
                                        this.onProcessPasteReplaceNl2Br
                                    );
                        }
                        beforeDestruct(e) {
                            e.e
                                .off("paste.paste", this.onPaste)
                                .off(
                                    "processPaste.paste",
                                    this.onProcessPasteReplaceNl2Br
                                )
                                .off(".paste");
                        }
                        onPaste(e) {
                            try {
                                if (
                                    !1 === this.customPasteProcess(e) ||
                                    !1 === this.j.e.fire("beforePaste", e)
                                )
                                    return e.preventDefault(), !1;
                                this.defaultPasteProcess(e);
                            } finally {
                                this.j.e.fire("afterPaste", e);
                            }
                        }
                        customPasteProcess(e) {
                            if (!this.j.o.processPasteHTML) return;
                            const t = (0, p.getDataTransfer)(e),
                                i = {
                                    html:
                                        null == t
                                            ? void 0
                                            : t.getData(h.TEXT_HTML),
                                    plain:
                                        null == t
                                            ? void 0
                                            : t.getData(h.TEXT_PLAIN),
                                    rtf:
                                        null == t
                                            ? void 0
                                            : t.getData(h.TEXT_RTF),
                                };
                            let s;
                            for (s in i) {
                                const t = i[s];
                                if (
                                    (0, p.isHTML)(t) &&
                                    (this.j.e.fire("processHTML", e, t, i) ||
                                        this.processHTML(e, t))
                                )
                                    return !1;
                            }
                        }
                        defaultPasteProcess(e) {
                            const t = (0, p.getDataTransfer)(e);
                            let i =
                                (null == t ? void 0 : t.getData(h.TEXT_HTML)) ||
                                (null == t ? void 0 : t.getData(h.TEXT_PLAIN));
                            if (t && i && "" !== (0, p.trim)(i)) {
                                const s = this.j.e.fire(
                                    "processPaste",
                                    e,
                                    i,
                                    (0, _t.ZH)(t)
                                );
                                void 0 !== s && (i = s),
                                    ((0, p.isString)(i) || le.i.isNode(i)) &&
                                        this.insertByType(
                                            e,
                                            i,
                                            this.j.o.defaultActionOnPaste
                                        ),
                                    e.preventDefault(),
                                    e.stopPropagation();
                            }
                        }
                        processHTML(e, t) {
                            if (this.j.o.askBeforePasteHTML) {
                                if (this.j.o.memorizeChoiceWhenPasteFragment) {
                                    const i = this.pasteStack.find(
                                        (e) => e.html === t
                                    );
                                    if (i)
                                        return (
                                            this.insertByType(
                                                e,
                                                t,
                                                i.action ||
                                                    this.j.o
                                                        .defaultActionOnPaste
                                            ),
                                            !0
                                        );
                                }
                                if (this._isDialogOpened) return !0;
                                const i = (0, _t.$t)(
                                    this.j,
                                    "Your code is similar to HTML. Keep as HTML?",
                                    "Paste as HTML",
                                    (i) => {
                                        (this._isDialogOpened = !1),
                                            this.insertByType(e, t, i);
                                    },
                                    this.j.o.pasteHTMLActionList
                                );
                                return (
                                    i &&
                                        ((this._isDialogOpened = !0),
                                        i.e.on("beforeClose", () => {
                                            this._isDialogOpened = !1;
                                        })),
                                    !0
                                );
                            }
                            return !1;
                        }
                        insertByType(e, t, i) {
                            if (
                                (this.pasteStack.push({ html: t, action: i }),
                                (0, p.isString)(t))
                            )
                                switch (
                                    (this.j.buffer.set(h.CLIPBOARD_ID, t), i)
                                ) {
                                    case h.INSERT_CLEAR_HTML:
                                        t = (0, p.cleanFromWord)(t);
                                        break;
                                    case h.INSERT_ONLY_TEXT:
                                        t = (0, p.stripTags)(t);
                                        break;
                                    case h.INSERT_AS_TEXT:
                                        t = (0, p.htmlspecialchars)(t);
                                }
                            (0, _t.kU)(e, this.j, t);
                        }
                        onProcessPasteReplaceNl2Br(e, t, i) {
                            if (i === h.TEXT_PLAIN + ";" && !(0, p.isHTML)(t))
                                return (0, p.nl2br)(t);
                        }
                    }
                    (0, c.gn)([g.autobind], zt.prototype, "onPaste", null),
                        (0, c.gn)(
                            [g.autobind],
                            zt.prototype,
                            "onProcessPasteReplaceNl2Br",
                            null
                        ),
                        f.pw.add("paste", zt),
                        i(42214);
                    var Tt = i(4846);
                    f.pw.add(
                        "pasteStorage",
                        class It extends ye.S {
                            constructor() {
                                super(...arguments),
                                    (this.currentIndex = 0),
                                    (this.list = []),
                                    (this.container = null),
                                    (this.listBox = null),
                                    (this.previewBox = null),
                                    (this.dialog = null),
                                    (this.paste = () => {
                                        if (
                                            (this.j.s.focus(),
                                            this.j.s.insertHTML(
                                                this.list[this.currentIndex]
                                            ),
                                            0 !== this.currentIndex)
                                        ) {
                                            const e = this.list[0];
                                            (this.list[0] =
                                                this.list[this.currentIndex]),
                                                (this.list[this.currentIndex] =
                                                    e);
                                        }
                                        this.dialog && this.dialog.close(),
                                            this.j.synchronizeValues(),
                                            this.j.e.fire("afterPaste");
                                    }),
                                    (this.onKeyDown = (e) => {
                                        let t = this.currentIndex;
                                        -1 !==
                                            [
                                                h.KEY_UP,
                                                h.KEY_DOWN,
                                                h.KEY_ENTER,
                                            ].indexOf(e.key) &&
                                            (e.key === h.KEY_UP &&
                                                (0 === t
                                                    ? (t = this.list.length - 1)
                                                    : (t -= 1)),
                                            e.key === h.KEY_DOWN &&
                                                (t === this.list.length - 1
                                                    ? (t = 0)
                                                    : (t += 1)),
                                            e.key !== h.KEY_ENTER
                                                ? (t !== this.currentIndex &&
                                                      this.selectIndex(t),
                                                  e.stopImmediatePropagation(),
                                                  e.preventDefault())
                                                : this.paste());
                                    }),
                                    (this.selectIndex = (e) => {
                                        this.listBox &&
                                            (0, p.toArray)(
                                                this.listBox.childNodes
                                            ).forEach((t, i) => {
                                                t.classList.remove(
                                                    "jodit_active"
                                                ),
                                                    e === i &&
                                                        this.previewBox &&
                                                        (t.classList.add(
                                                            "jodit_active"
                                                        ),
                                                        (this.previewBox.innerHTML =
                                                            this.list[e]),
                                                        t.focus());
                                            }),
                                            (this.currentIndex = e);
                                    }),
                                    (this.showDialog = () => {
                                        2 > this.list.length ||
                                            (this.dialog || this.createDialog(),
                                            this.listBox &&
                                                (this.listBox.innerHTML = ""),
                                            this.previewBox &&
                                                (this.previewBox.innerHTML =
                                                    ""),
                                            this.list.forEach((e, t) => {
                                                const i = this.j.c.element("a");
                                                (i.textContent =
                                                    t +
                                                    1 +
                                                    ". " +
                                                    e.replace(
                                                        (0, h.SPACE_REG_EXP)(),
                                                        ""
                                                    )),
                                                    this.j.e.on(
                                                        i,
                                                        "keydown",
                                                        this.onKeyDown
                                                    ),
                                                    (0, p.attr)(i, "href", "#"),
                                                    (0, p.attr)(
                                                        i,
                                                        "data-index",
                                                        "" + t
                                                    ),
                                                    (0, p.attr)(
                                                        i,
                                                        "tab-index",
                                                        "-1"
                                                    ),
                                                    this.listBox &&
                                                        this.listBox.appendChild(
                                                            i
                                                        );
                                            }),
                                            this.dialog && this.dialog.open(),
                                            this.j.async.setTimeout(() => {
                                                this.selectIndex(0);
                                            }, 100));
                                    });
                            }
                            createDialog() {
                                this.dialog = this.j.dlg();
                                const e = (0, Tt.zx)(
                                    this.j,
                                    "paste",
                                    "Paste",
                                    "primary"
                                );
                                e.onAction(this.paste);
                                const t = (0, Tt.zx)(this.j, "", "Cancel");
                                t.onAction(this.dialog.close),
                                    (this.container = this.j.c.div()),
                                    this.container.classList.add(
                                        "jodit-paste-storage"
                                    ),
                                    (this.listBox = this.j.c.div()),
                                    (this.previewBox = this.j.c.div()),
                                    this.container.appendChild(this.listBox),
                                    this.container.appendChild(this.previewBox),
                                    this.dialog.setHeader(
                                        this.j.i18n("Choose Content to Paste")
                                    ),
                                    this.dialog.setContent(this.container),
                                    this.dialog.setFooter([e, t]),
                                    this.j.e.on(
                                        this.listBox,
                                        "click dblclick",
                                        (e) => {
                                            const t = e.target;
                                            return (
                                                le.i.isTag(t, "a") &&
                                                    t.hasAttribute(
                                                        "data-index"
                                                    ) &&
                                                    this.selectIndex(
                                                        parseInt(
                                                            (0, p.attr)(
                                                                t,
                                                                "-index"
                                                            ) || "0",
                                                            10
                                                        )
                                                    ),
                                                "dblclick" === e.type &&
                                                    this.paste(),
                                                !1
                                            );
                                        }
                                    );
                            }
                            afterInit() {
                                this.j.e
                                    .off("afterCopy.paste-storage")
                                    .on(
                                        "pasteStorageList.paste-storage",
                                        () => this.list.length
                                    )
                                    .on("afterCopy.paste-storage", (e) => {
                                        -1 !== this.list.indexOf(e) &&
                                            this.list.splice(
                                                this.list.indexOf(e),
                                                1
                                            ),
                                            this.list.unshift(e),
                                            this.list.length > 5 &&
                                                (this.list.length = 5);
                                    }),
                                    this.j.registerCommand("showPasteStorage", {
                                        exec: this.showDialog,
                                        hotkeys: [
                                            "ctrl+shift+v",
                                            "cmd+shift+v",
                                        ],
                                    });
                            }
                            beforeDestruct() {
                                this.dialog && this.dialog.destruct(),
                                    this.j.e.off(".paste-storage"),
                                    le.i.safeRemove(this.previewBox),
                                    le.i.safeRemove(this.listBox),
                                    le.i.safeRemove(this.container),
                                    (this.container = null),
                                    (this.listBox = null),
                                    (this.previewBox = null),
                                    (this.dialog = null),
                                    (this.list = []);
                            }
                        }
                    ),
                        i(93549),
                        f.pw.add("poweredByJodit", (e) => {
                            const { o: t } = e;
                            t.hidePoweredByJodit ||
                                t.inline ||
                                !(
                                    t.showCharsCounter ||
                                    t.showWordsCounter ||
                                    t.showXPathInStatusbar
                                ) ||
                                e.hookStatus("ready", () => {
                                    e.statusbar.append(
                                        e.create.fromHTML(
                                            '<a\n\t\t\t\t\t\ttabindex="-1"\n\t\t\t\t\t\tstyle="text-transform: uppercase"\n\t\t\t\t\t\tclass="jodit-status-bar-link"\n\t\t\t\t\t\ttarget="_blank"\n\t\t\t\t\t\thref="https://xdsoft.net/jodit/">\n\t\t\t\t\t\t\tPowered by Jodit\n\t\t\t\t\t\t</a>'
                                        ),
                                        !0
                                    );
                                });
                        });
                    var Lt = i(57652);
                    (d.D.prototype.controls.preview = {
                        icon: "eye",
                        command: "preview",
                        mode: h.MODE_SOURCE + h.MODE_WYSIWYG,
                        tooltip: "Preview",
                    }),
                        f.pw.add("preview", (e) => {
                            e.registerButton({ name: "preview" }),
                                e.registerCommand("preview", (t, i, s) => {
                                    const o = e.dlg();
                                    o
                                        .setSize(1024, 600)
                                        .open("", e.i18n("Preview"))
                                        .setModal(!0),
                                        (0, Lt.$)(
                                            e,
                                            s,
                                            "px",
                                            o.getElm("content")
                                        );
                                });
                        });
                    var Mt = i(37056),
                        At = i(54152);
                    te.J.set("print", i(94460)),
                        (d.D.prototype.controls.print = {
                            exec(e) {
                                const t = e.create.element("iframe");
                                Object.assign(t.style, {
                                    position: "fixed",
                                    right: 0,
                                    bottom: 0,
                                    width: 0,
                                    height: 0,
                                    border: 0,
                                }),
                                    (0, f.ZO)(e, d.D).appendChild(t);
                                const i = () => {
                                        e.e.off(e.ow, "mousemove", i),
                                            ne.i.safeRemove(t);
                                    },
                                    s = t.contentWindow;
                                if (s) {
                                    e.e
                                        .on(s, "onbeforeunload onafterprint", i)
                                        .on(e.ow, "mousemove", i),
                                        e.o.iframe
                                            ? (e.e.fire(
                                                  "generateDocumentStructure.iframe",
                                                  s.document,
                                                  e
                                              ),
                                              (s.document.body.innerHTML =
                                                  e.value))
                                            : (s.document.write(
                                                  '<!doctype html><html lang="' +
                                                      (0, Mt.X)(e.o.language) +
                                                      '"><head><title></title></head><style>' +
                                                      (0, At.a)(e) +
                                                      "</style><body></body></html>"
                                              ),
                                              s.document.close(),
                                              (0, Lt.$)(
                                                  e,
                                                  void 0,
                                                  "px",
                                                  s.document.body
                                              ));
                                    const t = s.document.createElement("style");
                                    (t.innerHTML =
                                        "@media print {\n\t\t\t\t\tbody {\n\t\t\t\t\t\t\t-webkit-print-color-adjust: exact;\n\t\t\t\t\t}\n\t\t\t}"),
                                        s.document.head.appendChild(t),
                                        s.focus(),
                                        s.print();
                                }
                            },
                            mode: h.MODE_SOURCE + h.MODE_WYSIWYG,
                            tooltip: "Print",
                        }),
                        f.pw.add("print", (e) => {
                            e.registerButton({ name: "print" });
                        }),
                        te.J.set("redo", i(19780)).set("undo", i(6309)),
                        (d.D.prototype.controls.redo = {
                            mode: h.MODE_SPLIT,
                            isDisabled(e) {
                                return !e.history.canRedo();
                            },
                            tooltip: "Redo",
                        }),
                        (d.D.prototype.controls.undo = {
                            mode: h.MODE_SPLIT,
                            isDisabled(e) {
                                return !e.history.canUndo();
                            },
                            tooltip: "Undo",
                        }),
                        f.pw.add(
                            "redoUndo",
                            class Dt extends ye.S {
                                constructor() {
                                    super(...arguments),
                                        (this.buttons = [
                                            { name: "undo", group: "history" },
                                            { name: "redo", group: "history" },
                                        ]);
                                }
                                beforeDestruct() {}
                                afterInit(e) {
                                    const t = (t) => (e.history[t](), !1);
                                    e.registerCommand("redo", {
                                        exec: t,
                                        hotkeys: [
                                            "ctrl+y",
                                            "ctrl+shift+z",
                                            "cmd+y",
                                            "cmd+shift+z",
                                        ],
                                    }),
                                        e.registerCommand("undo", {
                                            exec: t,
                                            hotkeys: ["ctrl+z", "cmd+z"],
                                        });
                                }
                            }
                        ),
                        (d.D.prototype.tableAllowCellResize = !0);
                    const Pt = "table_processor_observer-resize";
                    class Nt extends u.Plugin {
                        constructor() {
                            super(...arguments),
                                (this.selectMode = !1),
                                (this.resizeDelta = 0),
                                (this.createResizeHandle = () => {
                                    this.resizeHandler ||
                                        ((this.resizeHandler = this.j.c.div(
                                            "jodit-table-resizer"
                                        )),
                                        this.j.e
                                            .on(
                                                this.resizeHandler,
                                                "mousedown.table touchstart.table",
                                                this.onHandleMouseDown
                                            )
                                            .on(
                                                this.resizeHandler,
                                                "mouseenter.table",
                                                () => {
                                                    this.j.async.clearTimeout(
                                                        this.hideTimeout
                                                    );
                                                }
                                            ));
                                }),
                                (this.hideTimeout = 0),
                                (this.drag = !1),
                                (this.minX = 0),
                                (this.maxX = 0),
                                (this.startX = 0);
                        }
                        get module() {
                            return this.j.getInstance("Table", this.j.o);
                        }
                        get isRTL() {
                            return "rtl" === this.j.o.direction;
                        }
                        showResizeHandle() {
                            this.j.async.clearTimeout(this.hideTimeout),
                                this.j.workplace.appendChild(
                                    this.resizeHandler
                                );
                        }
                        hideResizeHandle() {
                            this.hideTimeout = this.j.async.setTimeout(
                                () => {
                                    le.i.safeRemove(this.resizeHandler);
                                },
                                {
                                    timeout: this.j.defaultTimeout,
                                    label: "hideResizer",
                                }
                            );
                        }
                        onHandleMouseDown(e) {
                            if (this.j.isLocked) return;
                            (this.drag = !0),
                                this.j.e
                                    .on(
                                        this.j.ow,
                                        "mouseup.resize-cells touchend.resize-cells",
                                        this.onMouseUp
                                    )
                                    .on(
                                        this.j.ew,
                                        "mousemove.table touchmove.table",
                                        this.onMouseMove
                                    ),
                                (this.startX = e.clientX),
                                this.j.lock(Pt),
                                this.resizeHandler.classList.add(
                                    "jodit-table-resizer_moved"
                                );
                            let t,
                                i = this.workTable.getBoundingClientRect();
                            if (
                                ((this.minX = 0),
                                (this.maxX = 1e6),
                                null != this.wholeTable)
                            )
                                (i =
                                    this.workTable.parentNode.getBoundingClientRect()),
                                    (this.minX = i.left),
                                    (this.maxX = this.minX + i.width);
                            else {
                                const e = u.Table.formalCoordinate(
                                    this.workTable,
                                    this.workCell,
                                    !0
                                );
                                u.Table.formalMatrix(
                                    this.workTable,
                                    (i, s, o) => {
                                        e[1] === o &&
                                            ((t = i.getBoundingClientRect()),
                                            (this.minX = Math.max(
                                                t.left + h.NEARBY / 2,
                                                this.minX
                                            ))),
                                            e[1] + (this.isRTL ? -1 : 1) ===
                                                o &&
                                                ((t =
                                                    i.getBoundingClientRect()),
                                                (this.maxX = Math.min(
                                                    t.left +
                                                        t.width -
                                                        h.NEARBY / 2,
                                                    this.maxX
                                                )));
                                    }
                                );
                            }
                            return !1;
                        }
                        onMouseMove(e) {
                            if (!this.drag) return;
                            this.j.e.fire("closeAllPopups");
                            let t = e.clientX;
                            const i = (0, p.offset)(
                                this.resizeHandler.parentNode ||
                                    this.j.od.documentElement,
                                this.j,
                                this.j.od,
                                !0
                            );
                            this.minX > t && (t = this.minX),
                                t > this.maxX && (t = this.maxX),
                                (this.resizeDelta =
                                    t -
                                    this.startX +
                                    (this.j.o.iframe ? i.left : 0)),
                                (this.resizeHandler.style.left =
                                    t - (this.j.o.iframe ? 0 : i.left) + "px");
                            const s = this.j.s.sel;
                            s && s.removeAllRanges();
                        }
                        onMouseUp(e) {
                            (this.selectMode || this.drag) &&
                                ((this.selectMode = !1), this.j.unlock()),
                                this.resizeHandler &&
                                    this.drag &&
                                    ((this.drag = !1),
                                    this.j.e.off(
                                        this.j.ew,
                                        "mousemove.table touchmove.table",
                                        this.onMouseMove
                                    ),
                                    this.resizeHandler.classList.remove(
                                        "jodit-table-resizer_moved"
                                    ),
                                    this.startX !== e.clientX &&
                                        (null == this.wholeTable
                                            ? this.resizeColumns()
                                            : this.resizeTable()),
                                    this.j.synchronizeValues(),
                                    this.j.s.focus());
                        }
                        resizeColumns() {
                            const e = this.resizeDelta,
                                t = [];
                            u.Table.setColumnWidthByDelta(
                                this.workTable,
                                u.Table.formalCoordinate(
                                    this.workTable,
                                    this.workCell,
                                    !0
                                )[1],
                                e,
                                !0,
                                t
                            );
                            const i = (0, p.call)(
                                this.isRTL ? le.i.prev : le.i.next,
                                this.workCell,
                                le.i.isCell,
                                this.workCell.parentNode
                            );
                            u.Table.setColumnWidthByDelta(
                                this.workTable,
                                u.Table.formalCoordinate(this.workTable, i)[1],
                                -e,
                                !1,
                                t
                            );
                        }
                        resizeTable() {
                            const e = this.resizeDelta * (this.isRTL ? -1 : 1),
                                t = this.workTable.offsetWidth,
                                i = (0, p.getContentWidth)(
                                    this.workTable.parentNode,
                                    this.j.ew
                                ),
                                s = !this.wholeTable;
                            if (this.isRTL ? !s : s)
                                this.workTable.style.width =
                                    ((t + e) / i) * 100 + "%";
                            else {
                                const s = this.isRTL
                                        ? "marginRight"
                                        : "marginLeft",
                                    o = parseInt(
                                        this.j.ew.getComputedStyle(
                                            this.workTable
                                        )[s] || "0",
                                        10
                                    );
                                (this.workTable.style.width =
                                    ((t - e) / i) * 100 + "%"),
                                    (this.workTable.style[s] =
                                        ((o + e) / i) * 100 + "%");
                            }
                        }
                        setWorkCell(e, t = null) {
                            (this.wholeTable = t),
                                (this.workCell = e),
                                (this.workTable = le.i.up(
                                    e,
                                    (e) => le.i.isTag(e, "table"),
                                    this.j.editor
                                ));
                        }
                        calcHandlePosition(e, t, i = 0, s = 0) {
                            const o = (0, p.offset)(t, this.j, this.j.ed);
                            if (i > h.NEARBY && o.width - h.NEARBY > i)
                                return void this.hideResizeHandle();
                            const r = (0, p.offset)(
                                    this.j.workplace,
                                    this.j,
                                    this.j.od,
                                    !0
                                ),
                                n = (0, p.offset)(e, this.j, this.j.ed);
                            if (
                                ((this.resizeHandler.style.left =
                                    (i > h.NEARBY ? o.left + o.width : o.left) -
                                    r.left +
                                    s +
                                    "px"),
                                Object.assign(this.resizeHandler.style, {
                                    height: n.height + "px",
                                    top: n.top - r.top + "px",
                                }),
                                this.showResizeHandle(),
                                i > h.NEARBY)
                            ) {
                                const e = (0, p.call)(
                                    this.isRTL ? le.i.prev : le.i.next,
                                    t,
                                    le.i.isCell,
                                    t.parentNode
                                );
                                this.setWorkCell(t, !!e && null);
                            } else {
                                const e = (0, p.call)(
                                    this.isRTL ? le.i.next : le.i.prev,
                                    t,
                                    le.i.isCell,
                                    t.parentNode
                                );
                                this.setWorkCell(e || t, !e || null);
                            }
                        }
                        afterInit(e) {
                            e.o.tableAllowCellResize &&
                                e.e
                                    .off(this.j.ow, ".resize-cells")
                                    .off(".resize-cells")
                                    .on(
                                        "change.resize-cells afterCommand.resize-cells afterSetMode.resize-cells",
                                        () => {
                                            (0, p.$$)(
                                                "table",
                                                e.editor
                                            ).forEach(this.observe);
                                        }
                                    )
                                    .on(
                                        this.j.ow,
                                        "scroll.resize-cells",
                                        () => {
                                            if (!this.drag) return;
                                            const t = le.i.up(
                                                this.workCell,
                                                (e) => le.i.isTag(e, "table"),
                                                e.editor
                                            );
                                            if (t) {
                                                const e =
                                                    t.getBoundingClientRect();
                                                this.resizeHandler.style.top =
                                                    e.top + "px";
                                            }
                                        }
                                    )
                                    .on("beforeSetMode.resize-cells", () => {
                                        this.module
                                            .getAllSelectedCells()
                                            .forEach((t) => {
                                                this.module.removeSelection(t),
                                                    u.Table.normalizeTable(
                                                        le.i.closest(
                                                            t,
                                                            "table",
                                                            e.editor
                                                        )
                                                    );
                                            });
                                    });
                        }
                        observe(e) {
                            (0, p.dataBind)(e, Pt) ||
                                ((0, p.dataBind)(e, Pt, !0),
                                this.j.e
                                    .on(e, "mouseleave.resize-cells", (e) => {
                                        this.resizeHandler &&
                                            this.resizeHandler !==
                                                e.relatedTarget &&
                                            this.hideResizeHandle();
                                    })
                                    .on(
                                        e,
                                        "mousemove.resize-cells touchmove.resize-cells",
                                        this.j.async.throttle(
                                            (t) => {
                                                if (this.j.isLocked) return;
                                                const i = le.i.up(
                                                    t.target,
                                                    le.i.isCell,
                                                    e
                                                );
                                                i &&
                                                    this.calcHandlePosition(
                                                        e,
                                                        i,
                                                        t.offsetX
                                                    );
                                            },
                                            { timeout: this.j.defaultTimeout }
                                        )
                                    ),
                                this.createResizeHandle());
                        }
                        beforeDestruct(e) {
                            e.events &&
                                (e.e.off(this.j.ow, ".resize-cells"),
                                e.e.off(".resize-cells"));
                        }
                    }
                    (0, c.gn)(
                        [g.autobind],
                        Nt.prototype,
                        "onHandleMouseDown",
                        null
                    ),
                        (0, c.gn)(
                            [g.autobind],
                            Nt.prototype,
                            "onMouseMove",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Nt.prototype,
                            "onMouseUp",
                            null
                        ),
                        (0, c.gn)([g.autobind], Nt.prototype, "observe", null),
                        f.pw.add("resizeCells", Nt),
                        (d.D.prototype.allowResizeX = !1),
                        (d.D.prototype.allowResizeY = !0);
                    let Rt = class e extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.isResized = !1),
                                (this.start = { x: 0, y: 0, w: 0, h: 0 }),
                                (this.handle = this.j.c.div(
                                    "jodit-editor__resize",
                                    ie.JO.get("resize_handler")
                                ));
                        }
                        afterInit(e) {
                            const {
                                height: t,
                                width: i,
                                allowResizeX: s,
                            } = e.o;
                            let { allowResizeY: o } = e.o;
                            "auto" === t && "auto" !== i && (o = !1),
                                ("auto" === t && "auto" === i) ||
                                    (!s && !o) ||
                                    (e.statusbar.setMod("resize-handle", !0),
                                    e.e
                                        .on(
                                            "toggleFullSize.resizeHandler",
                                            () => {
                                                this.handle.style.display =
                                                    e.isFullSize
                                                        ? "none"
                                                        : "block";
                                            }
                                        )
                                        .on(
                                            this.handle,
                                            "mousedown touchstart",
                                            this.onHandleResizeStart
                                        )
                                        .on(
                                            e.ow,
                                            "mouseup touchend",
                                            this.onHandleResizeEnd
                                        ),
                                    e.container.appendChild(this.handle));
                        }
                        onHandleResizeStart(e) {
                            (this.isResized = !0),
                                (this.start.x = e.clientX),
                                (this.start.y = e.clientY),
                                (this.start.w = this.j.container.offsetWidth),
                                (this.start.h = this.j.container.offsetHeight),
                                this.j.lock(),
                                this.j.e.on(
                                    this.j.ow,
                                    "mousemove touchmove",
                                    this.onHandleResize
                                ),
                                e.preventDefault();
                        }
                        onHandleResize(e) {
                            this.isResized &&
                                (this.j.o.allowResizeY &&
                                    this.j.e.fire(
                                        "setHeight",
                                        this.start.h + e.clientY - this.start.y
                                    ),
                                this.j.o.allowResizeX &&
                                    this.j.e.fire(
                                        "setWidth",
                                        this.start.w + e.clientX - this.start.x
                                    ),
                                this.j.e.fire("resize"));
                        }
                        onHandleResizeEnd() {
                            this.isResized &&
                                ((this.isResized = !1),
                                this.j.e.off(
                                    this.j.ow,
                                    "mousemove touchmove",
                                    this.onHandleResize
                                ),
                                this.j.unlock());
                        }
                        beforeDestruct() {
                            ne.i.safeRemove(this.handle),
                                this.j.e.off(
                                    this.j.ow,
                                    "mouseup touchsend",
                                    this.onHandleResizeEnd
                                );
                        }
                    };
                    (Rt.requires = ["size"]),
                        (Rt = (0, c.gn)([g.autobind], Rt)),
                        f.pw.add("resizeHandler", Rt),
                        (d.D.prototype.allowResizeTags = [
                            "img",
                            "iframe",
                            "table",
                            "jodit",
                        ]),
                        (d.D.prototype.resizer = {
                            showSize: !0,
                            hideSizeTimeout: 1e3,
                            forImageChangeAttributes: !0,
                            min_width: 10,
                            min_height: 10,
                            useAspectRatio: ["img"],
                        });
                    const qt = "__jodit-resizer_binded";
                    class Bt extends ye.S {
                        constructor() {
                            super(...arguments),
                                (this.LOCK_KEY = "resizer"),
                                (this.element = null),
                                (this.isResizeMode = !1),
                                (this.isShown = !1),
                                (this.startX = 0),
                                (this.startY = 0),
                                (this.width = 0),
                                (this.height = 0),
                                (this.ratio = 0),
                                (this.rect = this.j.c.fromHTML(
                                    `<div title="${this.j.i18n(
                                        "Press Alt for custom resizing"
                                    )}" class="jodit-resizer">\n\t\t\t\t<div class="jodit-resizer__top-left"></div>\n\t\t\t\t<div class="jodit-resizer__top-right"></div>\n\t\t\t\t<div class="jodit-resizer__bottom-right"></div>\n\t\t\t\t<div class="jodit-resizer__bottom-left"></div>\n\t\t\t\t<span>100x100</span>\n\t\t\t</div>`
                                )),
                                (this.sizeViewer =
                                    this.rect.getElementsByTagName("span")[0]),
                                (this.pointerX = 0),
                                (this.pointerY = 0),
                                (this.isAltMode = !1),
                                (this.onClickElement = (e) => {
                                    this.isResizeMode ||
                                        (this.element === e && this.isShown) ||
                                        ((this.element = e),
                                        this.show(),
                                        le.i.isTag(this.element, "img") &&
                                            !this.element.complete &&
                                            this.j.e.one(
                                                this.element,
                                                "load",
                                                this.updateSize
                                            ));
                                }),
                                (this.updateSize = () => {
                                    if (
                                        !this.isInDestruct &&
                                        this.isShown &&
                                        this.element &&
                                        this.rect
                                    ) {
                                        const e = this.getWorkplacePosition(),
                                            t = (0, p.offset)(
                                                this.element,
                                                this.j,
                                                this.j.ed
                                            ),
                                            i = parseInt(
                                                this.rect.style.left || "0",
                                                10
                                            ),
                                            s = this.rect.offsetWidth,
                                            o = this.rect.offsetHeight,
                                            r = t.top - e.top,
                                            n = t.left - e.left;
                                        (parseInt(
                                            this.rect.style.top || "0",
                                            10
                                        ) === r &&
                                            i === n &&
                                            s === this.element.offsetWidth &&
                                            o === this.element.offsetHeight) ||
                                            ((0, p.css)(this.rect, {
                                                top: r,
                                                left: n,
                                                width: this.element.offsetWidth,
                                                height: this.element
                                                    .offsetHeight,
                                            }),
                                            this.j.events &&
                                                (this.j.e.fire(
                                                    this.element,
                                                    "changesize"
                                                ),
                                                isNaN(i) ||
                                                    this.j.e.fire("resize")));
                                    }
                                }),
                                (this.hideSizeViewer = () => {
                                    this.sizeViewer.style.opacity = "0";
                                });
                        }
                        afterInit(e) {
                            (0, p.$$)("div", this.rect).forEach((t) => {
                                e.e.on(
                                    t,
                                    "mousedown.resizer touchstart.resizer",
                                    this.onStartResizing.bind(this, t)
                                );
                            }),
                                f.TB.on("hideHelpers", this.hide),
                                e.e
                                    .on("readonly", (e) => {
                                        e && this.hide();
                                    })
                                    .on(
                                        "afterInit changePlace",
                                        this.addEventListeners.bind(this)
                                    )
                                    .on(
                                        "afterGetValueFromEditor.resizer",
                                        (e) => {
                                            const t =
                                                /<jodit[^>]+data-jodit_iframe_wrapper[^>]+>(.*?<iframe[^>]*>.*?<\/iframe>.*?)<\/jodit>/gi;
                                            t.test(e.value) &&
                                                (e.value = e.value.replace(
                                                    t,
                                                    "$1"
                                                ));
                                        }
                                    )
                                    .on("hideResizer", this.hide)
                                    .on(
                                        "change afterInit afterSetMode",
                                        this.onChangeEditor
                                    ),
                                this.addEventListeners(),
                                this.onChangeEditor();
                        }
                        onEditorClick(e) {
                            let t = e.target;
                            const {
                                editor: i,
                                options: { allowResizeTags: s },
                            } = this.j;
                            for (; t && t !== i; ) {
                                if (le.i.isTag(t, s))
                                    return (
                                        this.bind(t),
                                        void this.onClickElement(t)
                                    );
                                t = t.parentNode;
                            }
                        }
                        addEventListeners() {
                            const e = this.j;
                            e.e
                                .off(e.editor, ".resizer")
                                .off(e.ow, ".resizer")
                                .on(e.editor, "keydown.resizer", (e) => {
                                    this.isShown &&
                                        e.key === h.KEY_DELETE &&
                                        this.element &&
                                        !le.i.isTag(this.element, "table") &&
                                        this.onDelete(e);
                                })
                                .on(e.ow, "resize.resizer", this.updateSize)
                                .on("resize.resizer", this.updateSize)
                                .on([e.ow, e.editor], "scroll.resizer", () => {
                                    this.isShown &&
                                        !this.isResizeMode &&
                                        this.hide();
                                })
                                .on(e.ow, "keydown.resizer", this.onKeyDown)
                                .on(e.ow, "keyup.resizer", this.onKeyUp)
                                .on(
                                    e.ow,
                                    "mouseup.resizer touchend.resizer",
                                    this.onClickOutside
                                );
                        }
                        onStartResizing(e, t) {
                            if (!this.element || !this.element.parentNode)
                                return this.hide(), !1;
                            (this.handle = e),
                                t.cancelable && t.preventDefault(),
                                t.stopImmediatePropagation(),
                                (this.width = this.element.offsetWidth),
                                (this.height = this.element.offsetHeight),
                                (this.ratio = this.width / this.height),
                                (this.isResizeMode = !0),
                                (this.startX = t.clientX),
                                (this.startY = t.clientY),
                                (this.pointerX = t.clientX),
                                (this.pointerY = t.clientY);
                            const { j: i } = this;
                            i.e.fire("hidePopup"),
                                i.lock(this.LOCK_KEY),
                                i.e.on(
                                    i.ow,
                                    "mousemove.resizer touchmove.resizer",
                                    this.onResize
                                );
                        }
                        onEndResizing() {
                            const { j: e } = this;
                            e.unlock(),
                                (this.isResizeMode = !1),
                                (this.isAltMode = !1),
                                e.synchronizeValues(),
                                e.e.off(
                                    e.ow,
                                    "mousemove.resizer touchmove.resizer",
                                    this.onResize
                                );
                        }
                        onResize(e) {
                            if (this.isResizeMode) {
                                if (!this.element) return;
                                let t, i;
                                if (
                                    ((this.pointerX = e.clientX),
                                    (this.pointerY = e.clientY),
                                    this.j.options.iframe)
                                ) {
                                    const s = this.getWorkplacePosition();
                                    (t = e.clientX + s.left - this.startX),
                                        (i = e.clientY + s.top - this.startY);
                                } else
                                    (t = this.pointerX - this.startX),
                                        (i = this.pointerY - this.startY);
                                const s = this.handle.className;
                                let o = 0,
                                    r = 0;
                                const n = this.j.o.resizer.useAspectRatio;
                                !this.isAltMode &&
                                (!0 === n ||
                                    (Array.isArray(n) &&
                                        le.i.isTag(this.element, n)))
                                    ? (t
                                          ? ((o =
                                                this.width +
                                                (s.match(/left/) ? -1 : 1) * t),
                                            (r = Math.round(o / this.ratio)))
                                          : ((r =
                                                this.height +
                                                (s.match(/top/) ? -1 : 1) * i),
                                            (o = Math.round(r * this.ratio))),
                                      o >
                                          (0, p.innerWidth)(
                                              this.j.editor,
                                              this.j.ow
                                          ) &&
                                          ((o = (0, p.innerWidth)(
                                              this.j.editor,
                                              this.j.ow
                                          )),
                                          (r = Math.round(o / this.ratio))))
                                    : ((o =
                                          this.width +
                                          (s.match(/left/) ? -1 : 1) * t),
                                      (r =
                                          this.height +
                                          (s.match(/top/) ? -1 : 1) * i)),
                                    o > this.j.o.resizer.min_width &&
                                        this.applySize(
                                            this.element,
                                            "width",
                                            this.rect.parentNode.offsetWidth > o
                                                ? o
                                                : "100%"
                                        ),
                                    r > this.j.o.resizer.min_height &&
                                        this.applySize(
                                            this.element,
                                            "height",
                                            r
                                        ),
                                    this.updateSize(),
                                    this.showSizeViewer(
                                        this.element.offsetWidth,
                                        this.element.offsetHeight
                                    ),
                                    e.stopImmediatePropagation();
                            }
                        }
                        onKeyDown(e) {
                            (this.isAltMode = e.key === h.KEY_ALT),
                                !this.isAltMode &&
                                    this.isResizeMode &&
                                    this.onEndResizing();
                        }
                        onKeyUp() {
                            this.isAltMode &&
                                this.isResizeMode &&
                                this.element &&
                                ((this.width = this.element.offsetWidth),
                                (this.height = this.element.offsetHeight),
                                (this.ratio = this.width / this.height),
                                (this.startX = this.pointerX),
                                (this.startY = this.pointerY)),
                                (this.isAltMode = !1);
                        }
                        onClickOutside(e) {
                            if (this.isShown) {
                                if (!this.isResizeMode) return this.hide();
                                e.stopImmediatePropagation(),
                                    this.onEndResizing();
                            }
                        }
                        getWorkplacePosition() {
                            return (0, p.offset)(
                                this.rect.parentNode ||
                                    this.j.od.documentElement,
                                this.j,
                                this.j.od,
                                !0
                            );
                        }
                        applySize(e, t, i) {
                            const s =
                                le.i.isImage(e) &&
                                this.j.o.resizer.forImageChangeAttributes;
                            s && (0, p.attr)(e, t, i),
                                (s && !e.style[t]) || (0, p.css)(e, t, i);
                        }
                        onDelete(e) {
                            this.element &&
                                ("JODIT" !== this.element.tagName
                                    ? this.j.s.select(this.element)
                                    : (le.i.safeRemove(this.element),
                                      this.hide(),
                                      e.preventDefault()));
                        }
                        onChangeEditor() {
                            this.isShown &&
                                (this.element && this.element.parentNode
                                    ? this.updateSize()
                                    : this.hide()),
                                (0, p.$$)("iframe", this.j.editor).forEach(
                                    this.bind
                                );
                        }
                        bind(e) {
                            if (
                                !le.i.isHTMLElement(e) ||
                                !this.j.o.allowResizeTags.includes(
                                    e.tagName.toLowerCase()
                                ) ||
                                (0, p.dataBind)(e, qt)
                            )
                                return;
                            let t;
                            if (
                                ((0, p.dataBind)(e, qt, !0),
                                le.i.isTag(e, "iframe"))
                            ) {
                                const i = e;
                                le.i.isHTMLElement(e.parentNode) &&
                                (0, p.attr)(
                                    e.parentNode,
                                    "-jodit_iframe_wrapper"
                                )
                                    ? (e = e.parentNode)
                                    : ((t = this.j.createInside.element(
                                          "jodit",
                                          {
                                              "data-jodit-temp": 1,
                                              contenteditable: !1,
                                              draggable: !0,
                                              "data-jodit_iframe_wrapper": 1,
                                          }
                                      )),
                                      (0, p.attr)(
                                          t,
                                          "style",
                                          (0, p.attr)(e, "style")
                                      ),
                                      (0, p.css)(t, {
                                          display:
                                              "inline-block" === e.style.display
                                                  ? "inline-block"
                                                  : "block",
                                          width: e.offsetWidth,
                                          height: e.offsetHeight,
                                      }),
                                      e.parentNode &&
                                          e.parentNode.insertBefore(t, e),
                                      t.appendChild(e),
                                      this.j.e.on(t, "click", () => {
                                          (0, p.attr)(
                                              t,
                                              "data-jodit-wrapper_active",
                                              !0
                                          );
                                      }),
                                      (e = t)),
                                    this.j.e
                                        .off(
                                            e,
                                            "mousedown.select touchstart.select"
                                        )
                                        .on(
                                            e,
                                            "mousedown.select touchstart.select",
                                            () => {
                                                this.j.s.select(e);
                                            }
                                        )
                                        .off(e, "changesize")
                                        .on(e, "changesize", () => {
                                            i.setAttribute(
                                                "width",
                                                e.offsetWidth + "px"
                                            ),
                                                i.setAttribute(
                                                    "height",
                                                    e.offsetHeight + "px"
                                                );
                                        });
                            }
                            this.j.e.on(e, "dragstart", this.hide);
                        }
                        showSizeViewer(e, t) {
                            this.j.o.resizer.showSize &&
                                (this.sizeViewer.offsetWidth > e ||
                                this.sizeViewer.offsetHeight > t
                                    ? this.hideSizeViewer()
                                    : ((this.sizeViewer.style.opacity = "1"),
                                      (this.sizeViewer.textContent = `${e} x ${t}`),
                                      this.j.async.setTimeout(
                                          this.hideSizeViewer,
                                          {
                                              timeout:
                                                  this.j.o.resizer
                                                      .hideSizeTimeout,
                                              label: "hideSizeViewer",
                                          }
                                      )));
                        }
                        show() {
                            this.j.o.readonly ||
                                this.isShown ||
                                ((this.isShown = !0),
                                this.rect.parentNode ||
                                    ((0, p.markOwner)(this.j, this.rect),
                                    this.j.workplace.appendChild(this.rect)),
                                this.j.isFullSize &&
                                    (this.rect.style.zIndex =
                                        "" +
                                        (0, p.css)(this.j.container, "zIndex")),
                                this.updateSize());
                        }
                        hide() {
                            this.isResizeMode ||
                                ((this.isResizeMode = !1),
                                (this.isShown = !1),
                                (this.element = null),
                                le.i.safeRemove(this.rect),
                                (0, p.$$)(
                                    "[data-jodit-wrapper_active='true']",
                                    this.j.editor
                                ).forEach((e) =>
                                    (0, p.attr)(
                                        e,
                                        "data-jodit-wrapper_active",
                                        !1
                                    )
                                ));
                        }
                        beforeDestruct(e) {
                            this.hide(),
                                f.TB.off("hideHelpers", this.hide),
                                e.e.off(this.j.ow, ".resizer").off(".resizer");
                        }
                    }
                    (0, c.gn)(
                        [(0, g.watch)(":click")],
                        Bt.prototype,
                        "onEditorClick",
                        null
                    ),
                        (0, c.gn)(
                            [g.autobind],
                            Bt.prototype,
                            "onStartResizing",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Bt.prototype,
                            "onEndResizing",
                            null
                        ),
                        (0, c.gn)([g.autobind], Bt.prototype, "onResize", null),
                        (0, c.gn)(
                            [g.autobind],
                            Bt.prototype,
                            "onKeyDown",
                            null
                        ),
                        (0, c.gn)([g.autobind], Bt.prototype, "onKeyUp", null),
                        (0, c.gn)(
                            [g.autobind],
                            Bt.prototype,
                            "onClickOutside",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.debounce)()],
                            Bt.prototype,
                            "onChangeEditor",
                            null
                        ),
                        (0, c.gn)([g.autobind], Bt.prototype, "bind", null),
                        (0, c.gn)([g.autobind], Bt.prototype, "hide", null),
                        f.pw.add("resizer", Bt);
                    let Ot = class e extends ie.u1 {
                        className() {
                            return "UISearch";
                        }
                        render() {
                            return `<div>\n\t\t\t<div class="&__box">\n\t\t\t\t<div class="&__inputs">\n\t\t\t\t\t<input data-ref="query" tabindex="0" placeholder="~Search for~" type="text"/>\n\t\t\t\t\t<input data-ref="replace" tabindex="0" placeholder="~Replace with~" type="text"/>\n\t\t\t\t</div>\n\t\t\t\t<div class="&__counts">\n\t\t\t\t\t<span data-ref="counter-box">\n\t\t\t\t\t\t<span data-ref="current">0</span><span>/</span><span data-ref="count">0</span>\n\t\t\t\t\t</span>\n\t\t\t\t</div>\n\t\t\t\t<div class="&__buttons">\n\t\t\t\t\t<button data-ref="next" tabindex="0" type="button">${ie.JO.get(
                                "angle-down"
                            )}</button>\n\t\t\t\t\t<button data-ref="prev" tabindex="0" type="button">${ie.JO.get(
                                "angle-up"
                            )}</button>\n\t\t\t\t\t<button data-ref="cancel" tabindex="0" type="button">${ie.JO.get(
                                "cancel"
                            )}</button>\n\t\t\t\t\t<button data-ref="replace-btn" tabindex="0" type="button" class="jodit-ui-button">~Replace~</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>`;
                        }
                        get currentIndex() {
                            return this._currentIndex;
                        }
                        set currentIndex(e) {
                            (this._currentIndex = e),
                                (this.currentBox.innerText = "" + e);
                        }
                        set count(e) {
                            this.countBox.innerText = "" + e;
                        }
                        get query() {
                            return this.queryInput.value;
                        }
                        get replace() {
                            return this.replaceInput.value;
                        }
                        constructor(e) {
                            super(e),
                                (this.selInfo = null),
                                (this._currentIndex = 0),
                                (this.isOpened = !1);
                            const {
                                query: t,
                                replace: i,
                                cancel: s,
                                next: o,
                                prev: r,
                                replaceBtn: n,
                                current: a,
                                count: l,
                            } = (0, p.refs)(this.container);
                            (this.queryInput = t),
                                (this.replaceInput = i),
                                (this.closeButton = s),
                                (this.replaceButton = n),
                                (this.currentBox = a),
                                (this.countBox = l),
                                e.e
                                    .on(
                                        this.closeButton,
                                        "pointerdown",
                                        () => (this.close(), !1)
                                    )
                                    .on(this.queryInput, "input", () => {
                                        this.currentIndex = 0;
                                    })
                                    .on(this.queryInput, "pointerdown", () => {
                                        e.s.isFocused() &&
                                            (e.s.removeMarkers(),
                                            (this.selInfo = e.s.save()));
                                    })
                                    .on(
                                        this.replaceButton,
                                        "pointerdown",
                                        () => (
                                            e.e.fire(
                                                this,
                                                "pressReplaceButton"
                                            ),
                                            !1
                                        )
                                    )
                                    .on(
                                        o,
                                        "pointerdown",
                                        () => (e.e.fire("searchNext"), !1)
                                    )
                                    .on(
                                        r,
                                        "pointerdown",
                                        () => (e.e.fire("searchPrevious"), !1)
                                    )
                                    .on(this.queryInput, "input", () => {
                                        this.setMod(
                                            "empty-query",
                                            !(0, p.trim)(this.queryInput.value)
                                                .length
                                        );
                                    })
                                    .on(
                                        this.queryInput,
                                        "keydown",
                                        this.j.async.debounce((t) => {
                                            t.key === h.KEY_ENTER
                                                ? (t.preventDefault(),
                                                  t.stopImmediatePropagation(),
                                                  e.e.fire("searchNext") &&
                                                      this.close())
                                                : e.e.fire(
                                                      this,
                                                      "needUpdateCounters"
                                                  );
                                        }, this.j.defaultTimeout)
                                    );
                        }
                        onEditorKeyDown(e) {
                            if (!this.isOpened) return;
                            const { j: t } = this;
                            if (t.getRealMode() === h.MODE_WYSIWYG)
                                switch (e.key) {
                                    case h.KEY_ESC:
                                        this.close();
                                        break;
                                    case h.KEY_F3:
                                        this.queryInput.value &&
                                            (t.e.fire(
                                                e.shiftKey
                                                    ? "searchPrevious"
                                                    : "searchNext"
                                            ),
                                            e.preventDefault());
                                }
                        }
                        open(e, t, i = !1) {
                            this.isOpened ||
                                (this.j.workplace.appendChild(this.container),
                                (this.isOpened = !0)),
                                this.calcSticky(
                                    this.j.e.fire("getStickyState.sticky") || !1
                                ),
                                this.j.e.fire("hidePopup"),
                                this.setMod("replace", i);
                            const s = null != e ? e : "" + (this.j.s.sel || "");
                            s && (this.queryInput.value = s),
                                t && (this.replaceInput.value = t),
                                this.setMod("empty-query", !s.length),
                                this.j.e.fire(this, "needUpdateCounters"),
                                s
                                    ? this.queryInput.select()
                                    : this.queryInput.focus();
                        }
                        close() {
                            this.isOpened &&
                                (this.j.s.restore(),
                                ne.i.safeRemove(this.container),
                                (this.isOpened = !1),
                                this.j.e.fire(this, "afterClose"));
                        }
                        calcSticky(e) {
                            if (this.isOpened)
                                if ((this.setMod("sticky", e), e)) {
                                    const e = (0, p.position)(
                                        this.j.toolbarContainer
                                    );
                                    (0, p.css)(this.container, {
                                        top: e.top + e.height,
                                        left: e.left + e.width,
                                    });
                                } else
                                    (0, p.css)(this.container, {
                                        top: null,
                                        left: null,
                                    });
                        }
                    };
                    (0, c.gn)(
                        [(0, g.watch)([":keydown", "queryInput:keydown"])],
                        Ot.prototype,
                        "onEditorKeyDown",
                        null
                    ),
                        (0, c.gn)([g.autobind], Ot.prototype, "open", null),
                        (0, c.gn)([g.autobind], Ot.prototype, "close", null),
                        (0, c.gn)(
                            [(0, g.watch)(":toggleSticky")],
                            Ot.prototype,
                            "calcSticky",
                            null
                        ),
                        (Ot = (0, c.gn)([g.component], Ot));
                    var Ht = i(27147);
                    class Ft {
                        constructor(e = Ht.Q) {
                            (this.searchIndex = e),
                                (this.queue = []),
                                (this.value = "");
                        }
                        add(e) {
                            var t;
                            const i = (
                                null !== (t = e.nodeValue) && void 0 !== t
                                    ? t
                                    : ""
                            ).toLowerCase();
                            if (!i.length) return;
                            const s = this.value.length;
                            this.queue.push({
                                startIndex: s,
                                endIndex: s + i.length,
                                node: e,
                            }),
                                (this.value += i);
                        }
                        ranges(e, t = 0) {
                            const i = [];
                            let s = t,
                                o = 0,
                                r = 0;
                            do {
                                if (
                                    (([s, o] = this.searchIndex(
                                        e,
                                        this.value,
                                        s
                                    )),
                                    -1 !== s)
                                ) {
                                    let e,
                                        t,
                                        n = 0,
                                        a = 0;
                                    for (
                                        let i = r;
                                        this.queue.length > i;
                                        i += 1
                                    )
                                        if (
                                            (!e &&
                                                this.queue[i].endIndex > s &&
                                                ((e = this.queue[i].node),
                                                (n =
                                                    s -
                                                    this.queue[i].startIndex)),
                                            e &&
                                                this.queue[i].endIndex >= s + o)
                                        ) {
                                            (t = this.queue[i].node),
                                                (a =
                                                    s +
                                                    o -
                                                    this.queue[i].startIndex),
                                                (r = i);
                                            break;
                                        }
                                    e &&
                                        t &&
                                        i.push({
                                            startContainer: e,
                                            startOffset: n,
                                            endContainer: t,
                                            endOffset: a,
                                        }),
                                        (s += o);
                                }
                            } while (-1 !== s);
                            return 0 === i.length ? null : i;
                        }
                    }
                    const Vt = "jd-tmp-selection";
                    function Wt(e, t, i, s) {
                        if (
                            null == e.startContainer.nodeValue ||
                            null == e.endContainer.nodeValue
                        )
                            return;
                        const o = i.element("span", { [Vt]: !0 });
                        le.i.markTemporary(o);
                        const r = e.startContainer.nodeValue;
                        let n = 0;
                        if (0 !== e.startOffset) {
                            const t = i.text(r.substring(0, e.startOffset));
                            (e.startContainer.nodeValue = r.substring(
                                e.startOffset
                            )),
                                le.i.before(e.startContainer, t),
                                e.startContainer === e.endContainer &&
                                    ((n = e.startOffset), (e.endOffset -= n)),
                                (e.startOffset = 0);
                        }
                        const a = e.endContainer.nodeValue;
                        if (e.endOffset !== a.length) {
                            const s = i.text(a.substring(e.endOffset));
                            (e.endContainer.nodeValue = a.substring(
                                0,
                                e.endOffset
                            )),
                                le.i.after(e.endContainer, s);
                            for (const i of t) {
                                if (i.startContainer !== e.endContainer) break;
                                (i.startContainer = s),
                                    (i.startOffset =
                                        i.startOffset - e.endOffset - n),
                                    i.endContainer === e.endContainer &&
                                        ((i.endContainer = s),
                                        (i.endOffset =
                                            i.endOffset - e.endOffset - n));
                            }
                            e.endOffset = e.endContainer.nodeValue.length;
                        }
                        let l = e.startContainer;
                        do {
                            if (!l) break;
                            if (
                                (!le.i.isText(l) ||
                                    (le.i.isElement((c = l.parentNode)) &&
                                        c.hasAttribute(Vt)) ||
                                    le.i.wrap(l, o.cloneNode(), i),
                                l === e.endContainer)
                            )
                                break;
                            let t = l.firstChild || l.nextSibling;
                            if (!t) {
                                for (; l && !l.nextSibling && l !== s; )
                                    l = l.parentNode;
                                t = null == l ? void 0 : l.nextSibling;
                            }
                            l = t;
                        } while (l && l !== s);
                        var c;
                    }
                    function $t(e) {
                        return (0, Ye.$$)(`[${Vt}]`, e);
                    }
                    function Ut(e) {
                        $t(e).forEach((e) => le.i.unwrap(e));
                    }
                    (d.D.prototype.useSearch = !0),
                        (d.D.prototype.search = { lazyIdleTimeout: 0 }),
                        te.J.set("search", i(2251)),
                        (d.D.prototype.controls.find = {
                            tooltip: "Find",
                            icon: "search",
                            exec(e, t, { control: i }) {
                                switch (i.args && i.args[0]) {
                                    case "findPrevious":
                                        e.e.fire("searchPrevious");
                                        break;
                                    case "findNext":
                                        e.e.fire("searchNext");
                                        break;
                                    case "replace":
                                        e.execCommand("openReplaceDialog");
                                        break;
                                    default:
                                        e.execCommand("openSearchDialog");
                                }
                            },
                            list: {
                                search: "Find",
                                findNext: "Find Next",
                                findPrevious: "Find Previous",
                                replace: "Replace",
                            },
                            childTemplate(e, t, i) {
                                return i;
                            },
                        });
                    class Yt extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.buttons = [
                                    { name: "find", group: "search" },
                                ]),
                                (this.previousQuery = ""),
                                (this.drawPromise = null),
                                (this.walker = null),
                                (this.walkerCount = null),
                                (this.cache = {}),
                                (this.wrapFrameRequest = 0);
                        }
                        get ui() {
                            return new Ot(this.j);
                        }
                        async updateCounters() {
                            this.ui.isOpened &&
                                (this.ui.count = await this.calcCounts(
                                    this.ui.query
                                ));
                        }
                        onPressReplaceButton() {
                            this.findAndReplace(this.ui.query),
                                this.updateCounters();
                        }
                        tryScrollToElement(e) {
                            let t = ne.i.closest(
                                e,
                                ne.i.isElement,
                                this.j.editor
                            );
                            t ||
                                (t = ne.i.prev(
                                    e,
                                    ne.i.isElement,
                                    this.j.editor
                                )),
                                t &&
                                    t !== this.j.editor &&
                                    (0, p.scrollIntoViewIfNeeded)(
                                        t,
                                        this.j.editor,
                                        this.j.ed
                                    );
                        }
                        async calcCounts(e) {
                            return (
                                await this.findQueryBounds(e, "walkerCount")
                            ).length;
                        }
                        async findQueryBounds(e, t) {
                            let i = this[t];
                            return (
                                i && i.break(),
                                (i = new ne.b(this.j.async, {
                                    timeout: this.j.o.search.lazyIdleTimeout,
                                })),
                                (this[t] = i),
                                this.find(i, e).catch((e) => [])
                            );
                        }
                        async findAndReplace(e) {
                            const t = await this.findQueryBounds(e, "walker");
                            if (!t.length) return !1;
                            let i = this.findCurrentIndexInRanges(
                                t,
                                this.j.s.range
                            );
                            -1 === i && (i = 0);
                            const s = t[i];
                            if (s) {
                                try {
                                    const t = this.j.ed.createRange();
                                    t.setStart(s.startContainer, s.startOffset),
                                        t.setEnd(s.endContainer, s.endOffset),
                                        t.deleteContents();
                                    const o = this.j.createInside.text(
                                        this.ui.replace
                                    );
                                    ne.i.safeInsertNode(t, o),
                                        Ut(this.j.editor),
                                        this.j.s.setCursorAfter(o),
                                        this.tryScrollToElement(o),
                                        (this.cache = {}),
                                        (this.ui.currentIndex = i),
                                        await this.findAndSelect(e, !0).catch(
                                            (e) => null
                                        );
                                } finally {
                                    this.j.synchronizeValues();
                                }
                                return this.j.e.fire("afterFindAndReplace"), !0;
                            }
                            return !1;
                        }
                        async findAndSelect(e, t) {
                            var i;
                            const s = await this.findQueryBounds(e, "walker");
                            if (!s.length) return !1;
                            (this.previousQuery === e &&
                                $t(this.j.editor).length) ||
                                (null === (i = this.drawPromise) ||
                                    void 0 === i ||
                                    i.rejectCallback(),
                                this.j.async.cancelAnimationFrame(
                                    this.wrapFrameRequest
                                ),
                                Ut(this.j.editor),
                                (this.drawPromise =
                                    this.drawSelectionRanges(s))),
                                (this.previousQuery = e);
                            let o = this.ui.currentIndex - 1;
                            (o =
                                -1 === o
                                    ? 0
                                    : t
                                    ? o === s.length - 1
                                        ? 0
                                        : o + 1
                                    : 0 === o
                                    ? s.length - 1
                                    : o - 1),
                                (this.ui.currentIndex = o + 1);
                            const r = s[o];
                            if (r) {
                                const e = this.j.ed.createRange();
                                try {
                                    e.setStart(r.startContainer, r.startOffset),
                                        e.setEnd(r.endContainer, r.endOffset),
                                        this.j.s.selectRange(e);
                                } catch (e) {}
                                return (
                                    this.tryScrollToElement(r.startContainer),
                                    await this.updateCounters(),
                                    await this.drawPromise,
                                    this.j.e.fire("afterFindAndSelect"),
                                    !0
                                );
                            }
                            return !1;
                        }
                        findCurrentIndexInRanges(e, t) {
                            return e.findIndex(
                                (e) =>
                                    e.startContainer === t.startContainer &&
                                    e.startOffset === t.startOffset &&
                                    e.endContainer === t.startContainer &&
                                    e.endOffset === t.endOffset
                            );
                        }
                        async isValidCache(e) {
                            return (await e).every((e) => {
                                var t, i, s, o;
                                return (
                                    e.startContainer.isConnected &&
                                    e.startOffset <=
                                        (null !==
                                            (i =
                                                null ===
                                                    (t =
                                                        e.startContainer
                                                            .nodeValue) ||
                                                void 0 === t
                                                    ? void 0
                                                    : t.length) && void 0 !== i
                                            ? i
                                            : 0) &&
                                    e.endContainer.isConnected &&
                                    e.endOffset <=
                                        (null !==
                                            (o =
                                                null ===
                                                    (s =
                                                        e.endContainer
                                                            .nodeValue) ||
                                                void 0 === s
                                                    ? void 0
                                                    : s.length) && void 0 !== o
                                            ? o
                                            : 0)
                                );
                            });
                        }
                        async find(e, t) {
                            if (!t.length) return [];
                            const i = this.cache[t];
                            return i && (await this.isValidCache(i))
                                ? i
                                : ((this.cache[t] = this.j.async.promise(
                                      (i) => {
                                          const s = new Ft(
                                              this.j.o.search.fuzzySearch
                                          );
                                          e.on("break", () => {
                                              i([]);
                                          })
                                              .on(
                                                  "visit",
                                                  (e) => (
                                                      ne.i.isText(e) &&
                                                          s.add(e),
                                                      !1
                                                  )
                                              )
                                              .on("end", () => {
                                                  var e;
                                                  i(
                                                      null !==
                                                          (e = s.ranges(t)) &&
                                                          void 0 !== e
                                                          ? e
                                                          : []
                                                  );
                                              })
                                              .setWork(this.j.editor);
                                      }
                                  )),
                                  this.cache[t]);
                        }
                        drawSelectionRanges(e) {
                            const {
                                async: t,
                                createInside: i,
                                editor: s,
                            } = this.j;
                            t.cancelAnimationFrame(this.wrapFrameRequest);
                            const o = [...e];
                            let r,
                                n = 0;
                            return t.promise((e) => {
                                const a = () => {
                                    do {
                                        (r = o.shift()),
                                            r && Wt(r, o, i, s),
                                            (n += 1);
                                    } while (r && 5 >= n);
                                    o.length
                                        ? (this.wrapFrameRequest =
                                              t.requestAnimationFrame(a))
                                        : e();
                                };
                                a();
                            });
                        }
                        onAfterGetValueFromEditor(e) {
                            e.value = e.value.replace(
                                RegExp(
                                    `<span[^>]+${Vt}[^>]+>(.*?)</span>`,
                                    "g"
                                ),
                                "$1"
                            );
                        }
                        afterInit(e) {
                            if (e.o.useSearch) {
                                const t = this;
                                e.e
                                    .on("beforeSetMode.search", () => {
                                        this.ui.close();
                                    })
                                    .on(this.ui, "afterClose", () => {
                                        Ut(e.editor),
                                            (this.ui.currentIndex = 0),
                                            (this.ui.count = 0),
                                            (this.cache = {});
                                    })
                                    .on("click", () => {
                                        (this.ui.currentIndex = 0),
                                            Ut(e.editor);
                                    })
                                    .on("change.search", () => {
                                        this.cache = {};
                                    })
                                    .on(
                                        "keydown.search mousedown.search",
                                        e.async.debounce(() => {
                                            this.ui.selInfo &&
                                                (e.s.removeMarkers(),
                                                (this.ui.selInfo = null)),
                                                this.ui.isOpened &&
                                                    this.updateCounters();
                                        }, e.defaultTimeout)
                                    )
                                    .on(
                                        "searchNext.search searchPrevious.search",
                                        () => (
                                            this.ui.isOpened || this.ui.open(),
                                            t
                                                .findAndSelect(
                                                    t.ui.query,
                                                    "searchNext" === e.e.current
                                                )
                                                .catch((e) => {})
                                        )
                                    )
                                    .on(
                                        "search.search",
                                        (e, i = !0) => (
                                            (this.ui.currentIndex = 0),
                                            t
                                                .findAndSelect(e || "", i)
                                                .catch((e) => {})
                                        )
                                    ),
                                    e
                                        .registerCommand("search", {
                                            exec(e, i, s = !0) {
                                                return (
                                                    i &&
                                                        t
                                                            .findAndSelect(i, s)
                                                            .catch((e) => {}),
                                                    !1
                                                );
                                            },
                                        })
                                        .registerCommand("openSearchDialog", {
                                            exec(e, i) {
                                                return t.ui.open(i), !1;
                                            },
                                            hotkeys: ["ctrl+f", "cmd+f"],
                                        })
                                        .registerCommand("openReplaceDialog", {
                                            exec(i, s, o) {
                                                return (
                                                    e.o.readonly ||
                                                        t.ui.open(s, o, !0),
                                                    !1
                                                );
                                            },
                                            hotkeys: ["ctrl+h", "cmd+h"],
                                        });
                            }
                        }
                        beforeDestruct(e) {
                            this.ui.destruct(), e.e.off(".search");
                        }
                    }
                    (0, c.gn)([g.cache], Yt.prototype, "ui", null),
                        (0, c.gn)(
                            [(0, g.watch)("ui:needUpdateCounters")],
                            Yt.prototype,
                            "updateCounters",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)("ui:pressReplaceButton")],
                            Yt.prototype,
                            "onPressReplaceButton",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Yt.prototype,
                            "findQueryBounds",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Yt.prototype,
                            "findAndReplace",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Yt.prototype,
                            "findAndSelect",
                            null
                        ),
                        (0, c.gn)([g.autobind], Yt.prototype, "find", null),
                        (0, c.gn)(
                            [(0, g.watch)(":afterGetValueFromEditor")],
                            Yt.prototype,
                            "onAfterGetValueFromEditor",
                            null
                        ),
                        f.pw.add("search", Yt);
                    var Gt = i(85140);
                    d.D.prototype.select = {
                        normalizeSelectionBeforeCutAndCopy: !1,
                    };
                    class Kt extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.proxyEventsList = [
                                    "click",
                                    "mousedown",
                                    "touchstart",
                                    "mouseup",
                                    "touchend",
                                ]);
                        }
                        afterInit(e) {
                            this.proxyEventsList.forEach((t) => {
                                e.e.on(t + ".select", this.onStartSelection);
                            });
                        }
                        beforeDestruct(e) {
                            this.proxyEventsList.forEach((t) => {
                                e.e.on(t + ".select", this.onStartSelection);
                            });
                        }
                        onStartSelection(e) {
                            const { j: t } = this;
                            let i,
                                s = e.target;
                            for (; void 0 === i && s && s !== t.editor; )
                                (i = t.e.fire(
                                    (0, Gt.e)(
                                        e.type + "_" + s.nodeName.toLowerCase()
                                    ),
                                    s,
                                    e
                                )),
                                    (s = s.parentElement);
                            "click" === e.type &&
                                void 0 === i &&
                                s === t.editor &&
                                t.e.fire(e.type + "Editor", s, e);
                        }
                        onOutsideClick(e) {
                            const t = e.target;
                            le.i.up(t, (e) => e === this.j.editor) ||
                                ie.u1.closestElement(t, ie.GI) ||
                                this.j.e.fire("outsideClick", e);
                        }
                        beforeCommandCut(e) {
                            const { s: t } = this.j;
                            if ("cut" === e && !t.isCollapsed()) {
                                const e = t.current();
                                e &&
                                    le.i.isOrContains(this.j.editor, e) &&
                                    this.onCopyNormalizeSelectionBound();
                            }
                        }
                        onCopyNormalizeSelectionBound(e) {
                            const { s: t, editor: i, o: s } = this.j;
                            s.select.normalizeSelectionBeforeCutAndCopy &&
                                !t.isCollapsed() &&
                                (!e ||
                                    (e.isTrusted &&
                                        le.i.isNode(e.target) &&
                                        le.i.isOrContains(i, e.target))) &&
                                this.jodit.s.expandSelection();
                        }
                    }
                    (0, c.gn)(
                        [g.autobind],
                        Kt.prototype,
                        "onStartSelection",
                        null
                    ),
                        (0, c.gn)(
                            [(0, g.watch)("ow:click")],
                            Kt.prototype,
                            "onOutsideClick",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)([":beforeCommand"])],
                            Kt.prototype,
                            "beforeCommandCut",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)([":copy", ":cut"])],
                            Kt.prototype,
                            "onCopyNormalizeSelectionBound",
                            null
                        ),
                        f.pw.add("select", Kt),
                        (d.D.prototype.tableAllowCellSelection = !0);
                    const Jt = "table_processor_observer",
                        Xt = "onMoveTableSelectCell";
                    class Zt extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.requires = ["select"]),
                                (this.selectedCell = null),
                                (this.isSelectionMode = !1);
                        }
                        get module() {
                            return this.j.getInstance("Table", this.j.o);
                        }
                        afterInit(e) {
                            e.o.tableAllowCellSelection &&
                                e.e
                                    .on("keydown.select-cells", (e) => {
                                        e.key === h.KEY_TAB &&
                                            this.unselectCells();
                                    })
                                    .on(
                                        "beforeCommand.select-cells",
                                        this.onExecCommand
                                    )
                                    .on(
                                        "afterCommand.select-cells",
                                        this.onAfterCommand
                                    )
                                    .on(
                                        [
                                            "clickEditor",
                                            "mousedownTd",
                                            "mousedownTh",
                                            "touchstartTd",
                                            "touchstartTh",
                                        ]
                                            .map((e) => e + ".select-cells")
                                            .join(" "),
                                        this.onStartSelection
                                    )
                                    .on("clickTr clickTbody", () => {
                                        var e;
                                        const t =
                                            this.module.getAllSelectedCells()
                                                .length;
                                        if (t)
                                            return (
                                                t > 1 &&
                                                    (null ===
                                                        (e = this.j.s.sel) ||
                                                        void 0 === e ||
                                                        e.removeAllRanges()),
                                                !1
                                            );
                                    });
                        }
                        onStartSelection(e) {
                            if (this.j.o.readonly) return;
                            if ((this.unselectCells(), e === this.j.editor))
                                return;
                            const t = le.i.closest(e, "table", this.j.editor);
                            return e && t
                                ? (e.firstChild ||
                                      e.appendChild(
                                          this.j.createInside.element("br")
                                      ),
                                  (this.isSelectionMode = !0),
                                  (this.selectedCell = e),
                                  this.module.addSelection(e),
                                  this.j.e
                                      .on(
                                          t,
                                          "mousemove.select-cells touchmove.select-cells",
                                          this.j.async.throttle(
                                              this.onMove.bind(this, t),
                                              {
                                                  label: Xt,
                                                  timeout:
                                                      this.j.defaultTimeout / 2,
                                              }
                                          )
                                      )
                                      .on(
                                          t,
                                          "mouseup.select-cells touchend.select-cells",
                                          this.onStopSelection.bind(this, t)
                                      ),
                                  !1)
                                : void 0;
                        }
                        onOutsideClick() {
                            (this.selectedCell = null),
                                this.onRemoveSelection();
                        }
                        onChange() {
                            this.j.isLocked ||
                                this.isSelectionMode ||
                                this.onRemoveSelection();
                        }
                        onMove(e, t) {
                            var i;
                            if (this.j.o.readonly && !this.j.isLocked) return;
                            if (this.j.isLockedNotBy(Jt)) return;
                            const s = this.j.ed.elementFromPoint(
                                t.clientX,
                                t.clientY
                            );
                            if (!s) return;
                            const o = le.i.closest(s, ["td", "th"], e);
                            if (!o || !this.selectedCell) return;
                            o !== this.selectedCell && this.j.lock(Jt),
                                this.unselectCells();
                            const r = u.Table.getSelectedBound(e, [
                                    o,
                                    this.selectedCell,
                                ]),
                                n = u.Table.formalMatrix(e);
                            for (let e = r[0][0]; r[1][0] >= e; e += 1)
                                for (let t = r[0][1]; r[1][1] >= t; t += 1)
                                    this.module.addSelection(n[e][t]);
                            this.module.getAllSelectedCells().length > 1 &&
                                (null === (i = this.j.s.sel) ||
                                    void 0 === i ||
                                    i.removeAllRanges()),
                                this.j.e.fire("hidePopup"),
                                t.stopPropagation(),
                                (() => {
                                    const e = this.j.createInside.fromHTML(
                                        '<div style="color:rgba(0,0,0,0.01);width:0;height:0">&nbsp;</div>'
                                    );
                                    o.appendChild(e),
                                        this.j.async.setTimeout(() => {
                                            var t;
                                            null === (t = e.parentNode) ||
                                                void 0 === t ||
                                                t.removeChild(e);
                                        }, this.j.defaultTimeout / 5);
                                })();
                        }
                        onRemoveSelection(e) {
                            var t;
                            if (
                                !(null ===
                                    (t = null == e ? void 0 : e.buffer) ||
                                void 0 === t
                                    ? void 0
                                    : t.actionTrigger) &&
                                !this.selectedCell &&
                                this.module.getAllSelectedCells().length
                            )
                                return (
                                    this.j.unlock(),
                                    this.unselectCells(),
                                    void this.j.e.fire("hidePopup", "cells")
                                );
                            (this.isSelectionMode = !1),
                                (this.selectedCell = null);
                        }
                        onStopSelection(e, t) {
                            if (!this.selectedCell) return;
                            (this.isSelectionMode = !1), this.j.unlock();
                            const i = this.j.ed.elementFromPoint(
                                t.clientX,
                                t.clientY
                            );
                            if (!i) return;
                            const s = le.i.closest(i, ["td", "th"], e);
                            if (!s) return;
                            const o = le.i.closest(s, "table", e);
                            if (o && o !== e) return;
                            const r = u.Table.getSelectedBound(e, [
                                    s,
                                    this.selectedCell,
                                ]),
                                n = u.Table.formalMatrix(e),
                                a = n[r[1][0]][r[1][1]],
                                l = n[r[0][0]][r[0][1]];
                            this.j.e.fire(
                                "showPopup",
                                e,
                                () => {
                                    const e = (0, p.position)(l, this.j),
                                        t = (0, p.position)(a, this.j);
                                    return {
                                        left: e.left,
                                        top: e.top,
                                        width: t.left - e.left + t.width,
                                        height: t.top - e.top + t.height,
                                    };
                                },
                                "cells"
                            ),
                                (0, p.$$)("table", this.j.editor).forEach(
                                    (e) => {
                                        this.j.e.off(
                                            e,
                                            "mousemove.select-cells touchmove.select-cells mouseup.select-cells touchend.select-cells"
                                        );
                                    }
                                ),
                                this.j.async.clearTimeout(Xt);
                        }
                        unselectCells(e) {
                            const t = this.module,
                                i = t.getAllSelectedCells();
                            i.length &&
                                i.forEach((i) => {
                                    (e && e === i) || t.removeSelection(i);
                                });
                        }
                        onExecCommand(e) {
                            if (
                                /table(splitv|splitg|merge|empty|bin|binrow|bincolumn|addcolumn|addrow)/.test(
                                    e
                                )
                            ) {
                                e = e.replace("table", "");
                                const t = this.module.getAllSelectedCells();
                                if (t.length) {
                                    const [i] = t;
                                    if (!i) return;
                                    const s = le.i.closest(
                                        i,
                                        "table",
                                        this.j.editor
                                    );
                                    if (!s) return;
                                    switch (e) {
                                        case "splitv":
                                            u.Table.splitVertical(s, this.j);
                                            break;
                                        case "splitg":
                                            u.Table.splitHorizontal(s, this.j);
                                            break;
                                        case "merge":
                                            u.Table.mergeSelected(s, this.j);
                                            break;
                                        case "empty":
                                            t.forEach((e) => le.i.detach(e));
                                            break;
                                        case "bin":
                                            le.i.safeRemove(s);
                                            break;
                                        case "binrow":
                                            new Set(
                                                t.map((e) => e.parentNode)
                                            ).forEach((e) => {
                                                u.Table.removeRow(
                                                    s,
                                                    e.rowIndex
                                                );
                                            });
                                            break;
                                        case "bincolumn":
                                            {
                                                const e = new Set();
                                                t.reduce(
                                                    (t, i) => (
                                                        e.has(i.cellIndex) ||
                                                            (t.push(i),
                                                            e.add(i.cellIndex)),
                                                        t
                                                    ),
                                                    []
                                                ).forEach((e) => {
                                                    u.Table.removeColumn(
                                                        s,
                                                        e.cellIndex
                                                    );
                                                });
                                            }
                                            break;
                                        case "addcolumnafter":
                                        case "addcolumnbefore":
                                            u.Table.appendColumn(
                                                s,
                                                i.cellIndex,
                                                "addcolumnafter" === e,
                                                this.j.createInside
                                            );
                                            break;
                                        case "addrowafter":
                                        case "addrowbefore":
                                            u.Table.appendRow(
                                                s,
                                                i.parentNode,
                                                "addrowafter" === e,
                                                this.j.createInside
                                            );
                                    }
                                }
                                return !1;
                            }
                        }
                        onAfterCommand(e) {
                            /^justify/.test(e) &&
                                this.module
                                    .getAllSelectedCells()
                                    .forEach((t) => (0, p.alignElement)(e, t));
                        }
                        beforeDestruct(e) {
                            this.onRemoveSelection(), e.e.off(".select-cells");
                        }
                    }
                    (0, c.gn)(
                        [g.autobind],
                        Zt.prototype,
                        "onStartSelection",
                        null
                    ),
                        (0, c.gn)(
                            [(0, g.watch)(":outsideClick")],
                            Zt.prototype,
                            "onOutsideClick",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":change")],
                            Zt.prototype,
                            "onChange",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Zt.prototype,
                            "onRemoveSelection",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Zt.prototype,
                            "onStopSelection",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Zt.prototype,
                            "onExecCommand",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            Zt.prototype,
                            "onAfterCommand",
                            null
                        ),
                        f.pw.add("selectCells", Zt),
                        (d.D.prototype.minWidth = 200),
                        (d.D.prototype.maxWidth = "100%"),
                        (d.D.prototype.minHeight = 200),
                        (d.D.prototype.maxHeight = "auto"),
                        (d.D.prototype.saveHeightInStorage = !1);
                    let Qt = class e extends ye.S {
                        constructor() {
                            super(...arguments),
                                (this.resizeWorkspaces = this.j.async.debounce(
                                    this.resizeWorkspaceImd,
                                    this.j.defaultTimeout,
                                    !0
                                ));
                        }
                        afterInit(e) {
                            e.e
                                .on("setHeight.size", this.setHeight)
                                .on("setWidth.size", this.setWidth)
                                .on(
                                    "afterInit.size changePlace.size",
                                    this.initialize,
                                    { top: !0 }
                                )
                                .on(e.ow, "load.size", this.resizeWorkspaces)
                                .on(
                                    "afterInit.size resize.size afterUpdateToolbar.size scroll.size afterResize.size",
                                    this.resizeWorkspaces
                                )
                                .on(
                                    "toggleFullSize.size toggleToolbar.size",
                                    this.resizeWorkspaceImd
                                ),
                                this.initialize();
                        }
                        initialize() {
                            const { j: e } = this;
                            if (e.o.inline) return;
                            let { height: t } = e.o;
                            if (e.o.saveHeightInStorage && "auto" !== t) {
                                const i = e.storage.get("height");
                                i && (t = i);
                            }
                            (0, p.css)(e.editor, { minHeight: "100%" }),
                                (0, p.css)(e.container, {
                                    minHeight: e.o.minHeight,
                                    maxHeight: e.o.maxHeight,
                                    minWidth: e.o.minWidth,
                                    maxWidth: e.o.maxWidth,
                                }),
                                this.setHeight(t),
                                this.setWidth(e.o.width);
                        }
                        setHeight(e) {
                            if ((0, p.isNumber)(e)) {
                                const { minHeight: t, maxHeight: i } = this.j.o;
                                (0, p.isNumber)(t) && t > e && (e = t),
                                    (0, p.isNumber)(i) && e > i && (e = i);
                            }
                            (0, p.css)(this.j.container, "height", e),
                                this.j.o.saveHeightInStorage &&
                                    this.j.storage.set("height", e),
                                this.resizeWorkspaceImd();
                        }
                        setWidth(e) {
                            if ((0, p.isNumber)(e)) {
                                const { minWidth: t, maxWidth: i } = this.j.o;
                                (0, p.isNumber)(t) && t > e && (e = t),
                                    (0, p.isNumber)(i) && e > i && (e = i);
                            }
                            (0, p.css)(this.j.container, "width", e),
                                this.resizeWorkspaceImd();
                        }
                        getNotWorkHeight() {
                            var e, t;
                            return (
                                ((null === (e = this.j.toolbarContainer) ||
                                void 0 === e
                                    ? void 0
                                    : e.offsetHeight) || 0) +
                                ((null === (t = this.j.statusbar) ||
                                void 0 === t
                                    ? void 0
                                    : t.getHeight()) || 0) +
                                2
                            );
                        }
                        resizeWorkspaceImd() {
                            if (
                                !this.j ||
                                this.j.isDestructed ||
                                !this.j.o ||
                                this.j.o.inline
                            )
                                return;
                            if (
                                !this.j.container ||
                                !this.j.container.parentNode
                            )
                                return;
                            const e =
                                ((0, p.css)(this.j.container, "minHeight") ||
                                    0) - this.getNotWorkHeight();
                            if (
                                ((0, p.isNumber)(e) &&
                                    e > 0 &&
                                    ([
                                        this.j.workplace,
                                        this.j.iframe,
                                        this.j.editor,
                                    ].map((t) => {
                                        t && (0, p.css)(t, "minHeight", e);
                                    }),
                                    this.j.e.fire("setMinHeight", e)),
                                (0, p.isNumber)(this.j.o.maxHeight))
                            ) {
                                const e =
                                    this.j.o.maxHeight -
                                    this.getNotWorkHeight();
                                [
                                    this.j.workplace,
                                    this.j.iframe,
                                    this.j.editor,
                                ].map((t) => {
                                    t && (0, p.css)(t, "maxHeight", e);
                                }),
                                    this.j.e.fire("setMaxHeight", e);
                            }
                            this.j.container &&
                                (0, p.css)(
                                    this.j.workplace,
                                    "height",
                                    "auto" !== this.j.o.height ||
                                        this.j.isFullSize
                                        ? this.j.container.offsetHeight -
                                              this.getNotWorkHeight()
                                        : "auto"
                                );
                        }
                        beforeDestruct(e) {
                            e.e
                                .off(e.ow, "load.size", this.resizeWorkspaces)
                                .off(".size");
                        }
                    };
                    (0, c.gn)(
                        [g.autobind],
                        Qt.prototype,
                        "resizeWorkspaceImd",
                        null
                    ),
                        (Qt = (0, c.gn)([g.autobind], Qt)),
                        f.pw.add("size", Qt);
                    class ei {
                        constructor(e, t, i, s) {
                            (this.jodit = e),
                                (this.container = t),
                                (this.toWYSIWYG = i),
                                (this.fromWYSIWYG = s),
                                (this.className = ""),
                                (this.isReady = !1);
                        }
                        get j() {
                            return this.jodit;
                        }
                        onReady() {
                            this.replaceUndoManager(),
                                (this.isReady = !0),
                                this.j.e.fire(this, "ready");
                        }
                        onReadyAlways(e) {
                            var t;
                            this.isReady
                                ? e()
                                : null === (t = this.j.events) ||
                                  void 0 === t ||
                                  t.on(this, "ready", e);
                        }
                    }
                    class ti extends ei {
                        constructor() {
                            super(...arguments),
                                (this.autosize = this.j.async.debounce(() => {
                                    (this.instance.style.height = "auto"),
                                        (this.instance.style.height =
                                            this.instance.scrollHeight + "px");
                                }, this.j.defaultTimeout));
                        }
                        init(e) {
                            (this.instance = e.c.element("textarea", {
                                class: "jodit-source__mirror",
                            })),
                                this.container.appendChild(this.instance),
                                e.e
                                    .on(
                                        this.instance,
                                        "mousedown keydown touchstart input",
                                        e.async.debounce(
                                            this.toWYSIWYG,
                                            e.defaultTimeout
                                        )
                                    )
                                    .on("setMinHeight.source", (e) => {
                                        (0, Re.i)(
                                            this.instance,
                                            "minHeight",
                                            e
                                        );
                                    })
                                    .on(
                                        this.instance,
                                        "change keydown mousedown touchstart input",
                                        this.autosize
                                    )
                                    .on("afterSetMode.source", this.autosize)
                                    .on(
                                        this.instance,
                                        "mousedown focus",
                                        (t) => {
                                            e.e.fire(t.type, t);
                                        }
                                    ),
                                this.autosize(),
                                this.onReady();
                        }
                        destruct() {
                            le.i.safeRemove(this.instance);
                        }
                        getValue() {
                            return this.instance.value;
                        }
                        setValue(e) {
                            this.instance.value = e;
                        }
                        insertRaw(e) {
                            const t = this.getValue();
                            if (0 > this.getSelectionStart())
                                this.setValue(t + e);
                            else {
                                const i = this.getSelectionStart(),
                                    s = this.getSelectionEnd();
                                this.setValue(
                                    t.substring(0, i) +
                                        e +
                                        t.substring(s, t.length)
                                );
                            }
                        }
                        getSelectionStart() {
                            return this.instance.selectionStart;
                        }
                        getSelectionEnd() {
                            return this.instance.selectionEnd;
                        }
                        setSelectionRange(e, t = e) {
                            this.instance.setSelectionRange(e, t);
                        }
                        get isFocused() {
                            return this.instance === this.j.od.activeElement;
                        }
                        focus() {
                            this.instance.focus();
                        }
                        blur() {
                            this.instance.blur();
                        }
                        setPlaceHolder(e) {
                            this.instance.setAttribute("placeholder", e);
                        }
                        setReadOnly(e) {
                            e
                                ? this.instance.setAttribute("readonly", "true")
                                : this.instance.removeAttribute("readonly");
                        }
                        selectAll() {
                            this.instance.select();
                        }
                        replaceUndoManager() {
                            const { history: e } = this.jodit;
                            this.j.e.on(this.instance, "keydown", (t) => {
                                if ((t.ctrlKey || t.metaKey) && "z" === t.key)
                                    return (
                                        t.shiftKey ? e.redo() : e.undo(),
                                        this.setSelectionRange(
                                            this.getValue().length
                                        ),
                                        !1
                                    );
                            });
                        }
                    }
                    class ii extends ei {
                        constructor() {
                            super(...arguments),
                                (this.className = "jodit_ace_editor"),
                                (this.proxyOnBlur = (e) => {
                                    this.j.e.fire("blur", e);
                                }),
                                (this.proxyOnFocus = (e) => {
                                    this.j.e.fire("focus", e);
                                }),
                                (this.proxyOnMouseDown = (e) => {
                                    this.j.e.fire("mousedown", e);
                                });
                        }
                        aceExists() {
                            return void 0 !== this.j.ow.ace;
                        }
                        getLastColumnIndex(e) {
                            return this.instance.session.getLine(e).length;
                        }
                        getLastColumnIndices() {
                            const e = this.instance.session.getLength(),
                                t = [];
                            let i = 0;
                            for (let s = 0; e > s; s++)
                                (i += this.getLastColumnIndex(s)),
                                    s > 0 && (i += 1),
                                    (t[s] = i);
                            return t;
                        }
                        getRowColumnIndices(e) {
                            const t = this.getLastColumnIndices();
                            if (t[0] >= e) return { row: 0, column: e };
                            let i = 1;
                            for (let s = 1; t.length > s; s++)
                                e > t[s] && (i = s + 1);
                            return { row: i, column: e - t[i - 1] - 1 };
                        }
                        setSelectionRangeIndices(e, t) {
                            const i = this.getRowColumnIndices(e),
                                s = this.getRowColumnIndices(t);
                            this.instance
                                .getSelection()
                                .setSelectionRange({ start: i, end: s });
                        }
                        getIndexByRowColumn(e, t) {
                            return (
                                this.getLastColumnIndices()[e] -
                                this.getLastColumnIndex(e) +
                                t
                            );
                        }
                        init(e) {
                            const t = () => {
                                if (
                                    void 0 !== this.instance ||
                                    !this.aceExists()
                                )
                                    return;
                                const t = this.j.c.div(
                                    "jodit-source__mirror-fake"
                                );
                                this.container.appendChild(t),
                                    (this.instance = e.ow.ace.edit(t)),
                                    this.instance.setTheme(
                                        e.o.sourceEditorNativeOptions.theme
                                    ),
                                    this.instance.renderer.setShowGutter(
                                        e.o.sourceEditorNativeOptions.showGutter
                                    ),
                                    this.instance
                                        .getSession()
                                        .setMode(
                                            e.o.sourceEditorNativeOptions.mode
                                        ),
                                    this.instance.setHighlightActiveLine(
                                        e.o.sourceEditorNativeOptions
                                            .highlightActiveLine
                                    ),
                                    this.instance
                                        .getSession()
                                        .setUseWrapMode(!0),
                                    this.instance.setOption(
                                        "indentedSoftWrap",
                                        !1
                                    ),
                                    this.instance.setOption(
                                        "wrap",
                                        e.o.sourceEditorNativeOptions.wrap
                                    ),
                                    this.instance.getSession().setUseWorker(!1),
                                    (this.instance.$blockScrolling = 1 / 0),
                                    this.instance.on("change", this.toWYSIWYG),
                                    this.instance.on(
                                        "focus",
                                        this.proxyOnFocus
                                    ),
                                    this.instance.on(
                                        "mousedown",
                                        this.proxyOnMouseDown
                                    ),
                                    this.instance.on("blur", this.proxyOnBlur),
                                    e.getRealMode() !== h.MODE_WYSIWYG &&
                                        this.setValue(this.getValue());
                                const i = this.j.async.debounce(() => {
                                    e.isInDestruct ||
                                        (this.instance.setOption(
                                            "maxLines",
                                            "auto" !== e.o.height
                                                ? e.workplace.offsetHeight /
                                                      this.instance.renderer
                                                          .lineHeight
                                                : 1 / 0
                                        ),
                                        this.instance.resize());
                                }, 2 * this.j.defaultTimeout);
                                e.e.on("afterResize afterSetMode", i),
                                    i(),
                                    this.onReady();
                            };
                            e.e.on("afterSetMode", () => {
                                (e.getRealMode() !== h.MODE_SOURCE &&
                                    e.getMode() !== h.MODE_SPLIT) ||
                                    (this.fromWYSIWYG(), t());
                            }),
                                t(),
                                this.aceExists() ||
                                    (0, p.loadNext)(
                                        e,
                                        e.o.sourceEditorCDNUrlsJS
                                    )
                                        .then(() => {
                                            e.isInDestruct || t();
                                        })
                                        .catch(() => null);
                        }
                        destruct() {
                            var e, t;
                            this.instance.off("change", this.toWYSIWYG),
                                this.instance.off("focus", this.proxyOnFocus),
                                this.instance.off(
                                    "mousedown",
                                    this.proxyOnMouseDown
                                ),
                                this.instance.destroy(),
                                null ===
                                    (t =
                                        null === (e = this.j) || void 0 === e
                                            ? void 0
                                            : e.events) ||
                                    void 0 === t ||
                                    t.off("aceInited.source");
                        }
                        setValue(e) {
                            if (
                                !this.j.o.editHTMLDocumentMode &&
                                this.j.o.beautifyHTML
                            ) {
                                const t = this.j.e.fire("beautifyHTML", e);
                                (0, p.isString)(t) && (e = t);
                            }
                            this.instance.setValue(e),
                                this.instance.clearSelection();
                        }
                        getValue() {
                            return this.instance.getValue();
                        }
                        setReadOnly(e) {
                            this.instance.setReadOnly(e);
                        }
                        get isFocused() {
                            return this.instance.isFocused();
                        }
                        focus() {
                            this.instance.focus();
                        }
                        blur() {
                            this.instance.blur();
                        }
                        getSelectionStart() {
                            const e = this.instance.selection.getRange();
                            return this.getIndexByRowColumn(
                                e.start.row,
                                e.start.column
                            );
                        }
                        getSelectionEnd() {
                            const e = this.instance.selection.getRange();
                            return this.getIndexByRowColumn(
                                e.end.row,
                                e.end.column
                            );
                        }
                        selectAll() {
                            this.instance.selection.selectAll();
                        }
                        insertRaw(e) {
                            const t = this.instance.selection.getCursor(),
                                i = this.instance.session.insert(t, e);
                            this.instance.selection.setRange(
                                { start: t, end: i },
                                !1
                            );
                        }
                        setSelectionRange(e, t) {
                            this.setSelectionRangeIndices(e, t);
                        }
                        setPlaceHolder(e) {}
                        replaceUndoManager() {
                            const { history: e } = this.jodit;
                            this.instance.commands.addCommand({
                                name: "Undo",
                                bindKey: { win: "Ctrl-Z", mac: "Command-Z" },
                                exec() {
                                    e.undo();
                                },
                            }),
                                this.instance.commands.addCommand({
                                    name: "Redo",
                                    bindKey: {
                                        win: "Ctrl-Shift-Z",
                                        mac: "Command-Shift-Z",
                                    },
                                    exec() {
                                        e.redo();
                                    },
                                });
                        }
                    }
                    function si(e, t, i, s, o) {
                        let r;
                        if ((0, p.isFunction)(e)) r = e(t);
                        else
                            switch (e) {
                                case "ace":
                                    if (!t.o.shadowRoot) {
                                        r = new ii(t, i, s, o);
                                        break;
                                    }
                                default:
                                    r = new ti(t, i, s, o);
                            }
                        return (
                            r.init(t),
                            r.onReadyAlways(() => {
                                r.setReadOnly(t.o.readonly);
                            }),
                            r
                        );
                    }
                    (d.D.prototype.beautifyHTML = !h.IS_IE),
                        (d.D.prototype.sourceEditor = "ace"),
                        (d.D.prototype.sourceEditorNativeOptions = {
                            showGutter: !0,
                            theme: "ace/theme/idle_fingers",
                            mode: "ace/mode/html",
                            wrap: !0,
                            highlightActiveLine: !0,
                        }),
                        (d.D.prototype.sourceEditorCDNUrlsJS = [
                            "https://cdnjs.cloudflare.com/ajax/libs/ace/1.4.2/ace.js",
                        ]),
                        (d.D.prototype.beautifyHTMLCDNUrlsJS = [
                            "https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.4/beautify.min.js",
                            "https://cdnjs.cloudflare.com/ajax/libs/js-beautify/1.14.4/beautify-html.min.js",
                        ]),
                        te.J.set("source", i(88858)),
                        (d.D.prototype.controls.source = {
                            mode: h.MODE_SPLIT,
                            exec(e) {
                                e.toggleMode();
                            },
                            isActive(e) {
                                return e.getRealMode() === h.MODE_SOURCE;
                            },
                            tooltip: "Change mode",
                        });
                    class oi extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.buttons = [
                                    { name: "source", group: "source" },
                                ]),
                                (this.__lock = !1),
                                (this.__oldMirrorValue = ""),
                                (this.tempMarkerStart =
                                    "{start-jodit-selection}"),
                                (this.tempMarkerStartReg =
                                    /{start-jodit-selection}/g),
                                (this.tempMarkerEnd = "{end-jodit-selection}"),
                                (this.tempMarkerEndReg =
                                    /{end-jodit-selection}/g),
                                (this.getSelectionStart = () => {
                                    var e, t;
                                    return null !==
                                        (t =
                                            null === (e = this.sourceEditor) ||
                                            void 0 === e
                                                ? void 0
                                                : e.getSelectionStart()) &&
                                        void 0 !== t
                                        ? t
                                        : 0;
                                }),
                                (this.getSelectionEnd = () => {
                                    var e, t;
                                    return null !==
                                        (t =
                                            null === (e = this.sourceEditor) ||
                                            void 0 === e
                                                ? void 0
                                                : e.getSelectionEnd()) &&
                                        void 0 !== t
                                        ? t
                                        : 0;
                                });
                        }
                        onInsertHTML(e) {
                            var t;
                            if (!this.j.o.readonly && !this.j.isEditorMode())
                                return (
                                    null === (t = this.sourceEditor) ||
                                        void 0 === t ||
                                        t.insertRaw(e),
                                    this.toWYSIWYG(),
                                    !1
                                );
                        }
                        fromWYSIWYG(e = !1) {
                            if (!this.__lock || !0 === e) {
                                this.__lock = !0;
                                const e = this.j.getEditorValue(
                                    !1,
                                    h.SOURCE_CONSUMER
                                );
                                e !== this.getMirrorValue() &&
                                    this.setMirrorValue(e),
                                    (this.__lock = !1);
                            }
                        }
                        toWYSIWYG() {
                            if (this.__lock) return;
                            const e = this.getMirrorValue();
                            e !== this.__oldMirrorValue &&
                                ((this.__lock = !0),
                                (this.j.value = e),
                                (this.__lock = !1),
                                (this.__oldMirrorValue = e));
                        }
                        getNormalPosition(e, t) {
                            for (
                                t = t.replace(
                                    /<(script|style|iframe)[^>]*>[^]*?<\/\1>/im,
                                    (e) => {
                                        let t = "";
                                        for (let i = 0; e.length > i; i += 1)
                                            t += h.INVISIBLE_SPACE;
                                        return t;
                                    }
                                );
                                e > 0 && t[e] === h.INVISIBLE_SPACE;

                            )
                                e--;
                            let i = e;
                            for (; i > 0; ) {
                                if (
                                    (i--,
                                    "<" === t[i] &&
                                        void 0 !== t[i + 1] &&
                                        t[i + 1].match(/[\w/]+/i))
                                )
                                    return i;
                                if (">" === t[i]) return e;
                            }
                            return e;
                        }
                        clnInv(e) {
                            return e.replace(h.INVISIBLE_SPACE_REG_EXP(), "");
                        }
                        onSelectAll(e) {
                            var t;
                            if (
                                "selectall" === e.toLowerCase() &&
                                this.j.getRealMode() === h.MODE_SOURCE
                            )
                                return (
                                    null === (t = this.sourceEditor) ||
                                        void 0 === t ||
                                        t.selectAll(),
                                    !1
                                );
                        }
                        getMirrorValue() {
                            var e;
                            return (
                                (null === (e = this.sourceEditor) ||
                                void 0 === e
                                    ? void 0
                                    : e.getValue()) || ""
                            );
                        }
                        setMirrorValue(e) {
                            var t;
                            null === (t = this.sourceEditor) ||
                                void 0 === t ||
                                t.setValue(e);
                        }
                        setFocusToMirror() {
                            var e;
                            null === (e = this.sourceEditor) ||
                                void 0 === e ||
                                e.focus();
                        }
                        saveSelection() {
                            if (this.j.getRealMode() === h.MODE_WYSIWYG)
                                this.j.s.save(),
                                    this.j.synchronizeValues(),
                                    this.fromWYSIWYG(!0);
                            else {
                                if (this.j.o.editHTMLDocumentMode) return;
                                const e = this.getMirrorValue();
                                if (
                                    this.getSelectionStart() ===
                                    this.getSelectionEnd()
                                ) {
                                    const t = this.j.s.marker(!0),
                                        i = this.getNormalPosition(
                                            this.getSelectionStart(),
                                            this.getMirrorValue()
                                        );
                                    this.setMirrorValue(
                                        e.substring(0, i) +
                                            this.clnInv(t.outerHTML) +
                                            e.substring(i)
                                    );
                                } else {
                                    const t = this.j.s.marker(!0),
                                        i = this.j.s.marker(!1),
                                        s = this.getNormalPosition(
                                            this.getSelectionStart(),
                                            e
                                        ),
                                        o = this.getNormalPosition(
                                            this.getSelectionEnd(),
                                            e
                                        );
                                    this.setMirrorValue(
                                        e.substring(0, s) +
                                            this.clnInv(t.outerHTML) +
                                            e.substring(s, o - s) +
                                            this.clnInv(i.outerHTML) +
                                            e.substring(o)
                                    );
                                }
                                this.toWYSIWYG();
                            }
                        }
                        removeSelection() {
                            if (this.j.getRealMode() === h.MODE_WYSIWYG)
                                return (
                                    (this.__lock = !0),
                                    this.j.s.restore(),
                                    void (this.__lock = !1)
                                );
                            let e = this.getMirrorValue(),
                                t = 0,
                                i = 0;
                            try {
                                if (
                                    ((e = e
                                        .replace(
                                            /<span[^>]+data-jodit-selection_marker=(["'])start\1[^>]*>[<>]*?<\/span>/gim,
                                            this.tempMarkerStart
                                        )
                                        .replace(
                                            /<span[^>]+data-jodit-selection_marker=(["'])end\1[^>]*>[<>]*?<\/span>/gim,
                                            this.tempMarkerEnd
                                        )),
                                    !this.j.o.editHTMLDocumentMode &&
                                        this.j.o.beautifyHTML)
                                ) {
                                    const t = this.j.e.fire("beautifyHTML", e);
                                    (0, p.isString)(t) && (e = t);
                                }
                                if (
                                    ((t = e.indexOf(this.tempMarkerStart)),
                                    (i = t),
                                    (e = e.replace(
                                        this.tempMarkerStartReg,
                                        ""
                                    )),
                                    -1 !== t)
                                ) {
                                    const t = e.indexOf(this.tempMarkerEnd);
                                    -1 !== t && (i = t);
                                }
                                e = e.replace(this.tempMarkerEndReg, "");
                            } finally {
                                e = e
                                    .replace(this.tempMarkerEndReg, "")
                                    .replace(this.tempMarkerStartReg, "");
                            }
                            this.setMirrorValue(e),
                                this.setMirrorSelectionRange(t, i),
                                this.toWYSIWYG(),
                                this.setFocusToMirror();
                        }
                        setMirrorSelectionRange(e, t) {
                            var i;
                            null === (i = this.sourceEditor) ||
                                void 0 === i ||
                                i.setSelectionRange(e, t);
                        }
                        onReadonlyReact() {
                            var e;
                            null === (e = this.sourceEditor) ||
                                void 0 === e ||
                                e.setReadOnly(this.j.o.readonly);
                        }
                        afterInit(e) {
                            if (
                                ((this.mirrorContainer =
                                    e.c.div("jodit-source")),
                                e.workplace.appendChild(this.mirrorContainer),
                                e.e.on(
                                    "afterAddPlace changePlace afterInit",
                                    () => {
                                        e.workplace.appendChild(
                                            this.mirrorContainer
                                        );
                                    }
                                ),
                                (this.sourceEditor = si(
                                    "area",
                                    e,
                                    this.mirrorContainer,
                                    this.toWYSIWYG,
                                    this.fromWYSIWYG
                                )),
                                e.e.on(e.ow, "keydown", (e) => {
                                    var t;
                                    e.key === h.KEY_ESC &&
                                        (null === (t = this.sourceEditor) ||
                                        void 0 === t
                                            ? void 0
                                            : t.isFocused) &&
                                        this.sourceEditor.blur();
                                }),
                                this.onReadonlyReact(),
                                e.e
                                    .on("placeholder.source", (e) => {
                                        var t;
                                        null === (t = this.sourceEditor) ||
                                            void 0 === t ||
                                            t.setPlaceHolder(e);
                                    })
                                    .on(
                                        "change.source",
                                        this.syncValueFromWYSIWYG
                                    )
                                    .on("beautifyHTML", (e) => e),
                                e.o.beautifyHTML)
                            ) {
                                const t = () => {
                                    var t;
                                    const i = e.ow.html_beautify;
                                    return !(
                                        !i ||
                                        e.isInDestruct ||
                                        (null === (t = e.events) ||
                                            void 0 === t ||
                                            t
                                                .off("beautifyHTML")
                                                .on("beautifyHTML", (e) =>
                                                    i(e)
                                                ),
                                        0)
                                    );
                                };
                                t() ||
                                    (0, p.loadNext)(
                                        e,
                                        e.o.beautifyHTMLCDNUrlsJS
                                    ).then(t);
                            }
                            this.syncValueFromWYSIWYG(!0),
                                this.initSourceEditor(e);
                        }
                        syncValueFromWYSIWYG(e = !1) {
                            const t = this.j;
                            (t.getMode() !== h.MODE_SPLIT &&
                                t.getMode() !== h.MODE_SOURCE) ||
                                this.fromWYSIWYG(e);
                        }
                        initSourceEditor(e) {
                            var t;
                            if ("area" !== e.o.sourceEditor) {
                                const t = si(
                                    e.o.sourceEditor,
                                    e,
                                    this.mirrorContainer,
                                    this.toWYSIWYG,
                                    this.fromWYSIWYG
                                );
                                t.onReadyAlways(() => {
                                    var i, s;
                                    null === (i = this.sourceEditor) ||
                                        void 0 === i ||
                                        i.destruct(),
                                        (this.sourceEditor = t),
                                        this.syncValueFromWYSIWYG(!0),
                                        null === (s = e.events) ||
                                            void 0 === s ||
                                            s.fire("sourceEditorReady", e);
                                });
                            } else
                                null === (t = this.sourceEditor) ||
                                    void 0 === t ||
                                    t.onReadyAlways(() => {
                                        var t;
                                        this.syncValueFromWYSIWYG(!0),
                                            null === (t = e.events) ||
                                                void 0 === t ||
                                                t.fire("sourceEditorReady", e);
                                    });
                        }
                        beforeDestruct() {
                            this.sourceEditor &&
                                (this.sourceEditor.destruct(),
                                delete this.sourceEditor),
                                le.i.safeRemove(this.mirrorContainer);
                        }
                    }
                    (0, c.gn)(
                        [(0, g.watch)(":insertHTML.source")],
                        oi.prototype,
                        "onInsertHTML",
                        null
                    ),
                        (0, c.gn)(
                            [g.autobind],
                            oi.prototype,
                            "fromWYSIWYG",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            oi.prototype,
                            "toWYSIWYG",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            oi.prototype,
                            "getNormalPosition",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":beforeCommand.source")],
                            oi.prototype,
                            "onSelectAll",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":beforeSetMode.source")],
                            oi.prototype,
                            "saveSelection",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":afterSetMode.source")],
                            oi.prototype,
                            "removeSelection",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            oi.prototype,
                            "setMirrorSelectionRange",
                            null
                        ),
                        (0, c.gn)(
                            [(0, g.watch)(":readonly.source")],
                            oi.prototype,
                            "onReadonlyReact",
                            null
                        ),
                        (0, c.gn)(
                            [g.autobind],
                            oi.prototype,
                            "syncValueFromWYSIWYG",
                            null
                        ),
                        f.pw.add("source", oi),
                        (d.D.prototype.spellcheck = !1),
                        te.J.set("spellcheck", i(16054)),
                        (d.D.prototype.controls.spellcheck = {
                            isActive: (e) => e.o.spellcheck,
                            icon: i(16054),
                            name: "spellcheck",
                            command: "toggleSpellcheck",
                            tooltip: "Spellcheck",
                        });
                    class ri extends re.S {
                        constructor(e) {
                            super(e),
                                (this.buttons = [
                                    { group: "state", name: "spellcheck" },
                                ]),
                                (0, f.xl)(i(33589));
                        }
                        afterInit(e) {
                            e.e.on(
                                "afterInit afterAddPlace prepareWYSIWYGEditor",
                                this.toggleSpellcheck
                            ),
                                this.toggleSpellcheck(),
                                e.registerCommand("toggleSpellcheck", () => {
                                    (this.jodit.o.spellcheck =
                                        !this.jodit.o.spellcheck),
                                        this.toggleSpellcheck(),
                                        this.j.e.fire("updateToolbar");
                                });
                        }
                        toggleSpellcheck() {
                            (0, ce.Lj)(
                                this.jodit.editor,
                                "spellcheck",
                                this.jodit.o.spellcheck
                            );
                        }
                        beforeDestruct(e) {}
                    }
                    (0, c.gn)(
                        [g.autobind],
                        ri.prototype,
                        "toggleSpellcheck",
                        null
                    ),
                        f.pw.add("spellcheck", ri),
                        (d.D.prototype.showCharsCounter = !0),
                        (d.D.prototype.countHTMLChars = !1),
                        (d.D.prototype.showWordsCounter = !0),
                        f.pw.add(
                            "stat",
                            class ni extends ye.S {
                                constructor() {
                                    super(...arguments),
                                        (this.charCounter = null),
                                        (this.wordCounter = null),
                                        (this.reInit = () => {
                                            this.j.o.showCharsCounter &&
                                                this.charCounter &&
                                                this.j.statusbar.append(
                                                    this.charCounter,
                                                    !0
                                                ),
                                                this.j.o.showWordsCounter &&
                                                    this.wordCounter &&
                                                    this.j.statusbar.append(
                                                        this.wordCounter,
                                                        !0
                                                    ),
                                                this.j.e
                                                    .off(
                                                        "change keyup",
                                                        this.calc
                                                    )
                                                    .on(
                                                        "change keyup",
                                                        this.calc
                                                    ),
                                                this.calc();
                                        }),
                                        (this.calc = this.j.async.throttle(
                                            () => {
                                                const e = this.j.text;
                                                if (
                                                    this.j.o.showCharsCounter &&
                                                    this.charCounter
                                                ) {
                                                    const t = this.j.o
                                                        .countHTMLChars
                                                        ? this.j.value
                                                        : e.replace(
                                                              (0,
                                                              h.SPACE_REG_EXP)(),
                                                              ""
                                                          );
                                                    this.charCounter.textContent =
                                                        this.j.i18n(
                                                            "Chars: %d",
                                                            t.length
                                                        );
                                                }
                                                this.j.o.showWordsCounter &&
                                                    this.wordCounter &&
                                                    (this.wordCounter.textContent =
                                                        this.j.i18n(
                                                            "Words: %d",
                                                            e
                                                                .replace(
                                                                    (0,
                                                                    h.INVISIBLE_SPACE_REG_EXP)(),
                                                                    ""
                                                                )
                                                                .split(
                                                                    (0,
                                                                    h.SPACE_REG_EXP)()
                                                                )
                                                                .filter(
                                                                    (e) =>
                                                                        e.length
                                                                ).length
                                                        ));
                                            },
                                            this.j.defaultTimeout
                                        ));
                                }
                                afterInit() {
                                    (this.charCounter = this.j.c.span()),
                                        (this.wordCounter = this.j.c.span()),
                                        this.j.e.on(
                                            "afterInit changePlace afterAddPlace",
                                            this.reInit
                                        ),
                                        this.reInit();
                                }
                                beforeDestruct() {
                                    le.i.safeRemove(this.charCounter),
                                        le.i.safeRemove(this.wordCounter),
                                        this.j.e.off(
                                            "afterInit changePlace afterAddPlace",
                                            this.reInit
                                        ),
                                        (this.charCounter = null),
                                        (this.wordCounter = null);
                                }
                            }
                        ),
                        (d.D.prototype.toolbarSticky = !0),
                        (d.D.prototype.toolbarDisableStickyForMobile = !0),
                        (d.D.prototype.toolbarStickyOffset = 0);
                    class ai extends ye.S {
                        constructor() {
                            super(...arguments),
                                (this.isToolbarSticked = !1),
                                (this.createDummy = (e) => {}),
                                (this.addSticky = (e) => {
                                    this.isToolbarSticked ||
                                        (this.createDummy(e),
                                        this.j.container.classList.add(
                                            "jodit_sticky"
                                        ),
                                        (this.isToolbarSticked = !0)),
                                        (0, p.css)(e, {
                                            top:
                                                this.j.o.toolbarStickyOffset ||
                                                null,
                                            width:
                                                this.j.container.offsetWidth -
                                                2,
                                        });
                                }),
                                (this.removeSticky = (e) => {
                                    this.isToolbarSticked &&
                                        ((0, p.css)(e, { width: "", top: "" }),
                                        this.j.container.classList.remove(
                                            "jodit_sticky"
                                        ),
                                        (this.isToolbarSticked = !1));
                                });
                        }
                        afterInit(e) {
                            e.e
                                .on(
                                    e.ow,
                                    "scroll.sticky wheel.sticky mousewheel.sticky resize.sticky",
                                    this.onScroll
                                )
                                .on(
                                    "getStickyState.sticky",
                                    () => this.isToolbarSticked
                                );
                        }
                        onScroll() {
                            const { jodit: e } = this,
                                t =
                                    e.ow.pageYOffset ||
                                    (e.od.documentElement &&
                                        e.od.documentElement.scrollTop) ||
                                    0,
                                i = (0, p.offset)(e.container, e, e.od, !0),
                                s =
                                    e.getMode() === h.MODE_WYSIWYG &&
                                    t + e.o.toolbarStickyOffset > i.top &&
                                    i.top + i.height >
                                        t + e.o.toolbarStickyOffset &&
                                    !(
                                        e.o.toolbarDisableStickyForMobile &&
                                        this.isMobile()
                                    );
                            if (
                                e.o.toolbarSticky &&
                                !0 === e.o.toolbar &&
                                this.isToolbarSticked !== s
                            ) {
                                const t = e.toolbarContainer;
                                t &&
                                    (s
                                        ? this.addSticky(t)
                                        : this.removeSticky(t)),
                                    e.e.fire("toggleSticky", s);
                            }
                        }
                        isMobile() {
                            return (
                                this.j &&
                                this.j.options &&
                                this.j.container &&
                                this.j.o.sizeSM >= this.j.container.offsetWidth
                            );
                        }
                        beforeDestruct(e) {
                            this.dummyBox && le.i.safeRemove(this.dummyBox),
                                e.e
                                    .off(
                                        e.ow,
                                        "scroll.sticky wheel.sticky mousewheel.sticky resize.sticky",
                                        this.onScroll
                                    )
                                    .off(".sticky");
                        }
                    }
                    (0, c.gn)(
                        [(0, g.throttle)()],
                        ai.prototype,
                        "onScroll",
                        null
                    ),
                        f.pw.add("sticky", ai),
                        (d.D.prototype.usePopupForSpecialCharacters = !1),
                        (d.D.prototype.specialCharacters = [
                            "!",
                            "&quot;",
                            "#",
                            "$",
                            "%",
                            "&amp;",
                            "'",
                            "(",
                            ")",
                            "*",
                            "+",
                            "-",
                            ".",
                            "/",
                            "0",
                            "1",
                            "2",
                            "3",
                            "4",
                            "5",
                            "6",
                            "7",
                            "8",
                            "9",
                            ":",
                            ";",
                            "&lt;",
                            "=",
                            "&gt;",
                            "?",
                            "@",
                            "A",
                            "B",
                            "C",
                            "D",
                            "E",
                            "F",
                            "G",
                            "H",
                            "I",
                            "J",
                            "K",
                            "L",
                            "M",
                            "N",
                            "O",
                            "P",
                            "Q",
                            "R",
                            "S",
                            "T",
                            "U",
                            "V",
                            "W",
                            "X",
                            "Y",
                            "Z",
                            "[",
                            "]",
                            "^",
                            "_",
                            "`",
                            "a",
                            "b",
                            "c",
                            "d",
                            "e",
                            "f",
                            "g",
                            "h",
                            "i",
                            "j",
                            "k",
                            "l",
                            "m",
                            "n",
                            "o",
                            "p",
                            "q",
                            "r",
                            "s",
                            "t",
                            "u",
                            "v",
                            "w",
                            "x",
                            "y",
                            "z",
                            "{",
                            "|",
                            "}",
                            "~",
                            "&euro;",
                            "&lsquo;",
                            "&rsquo;",
                            "&ldquo;",
                            "&rdquo;",
                            "&ndash;",
                            "&mdash;",
                            "&iexcl;",
                            "&cent;",
                            "&pound;",
                            "&curren;",
                            "&yen;",
                            "&brvbar;",
                            "&sect;",
                            "&uml;",
                            "&copy;",
                            "&ordf;",
                            "&laquo;",
                            "&raquo;",
                            "&not;",
                            "&reg;",
                            "&macr;",
                            "&deg;",
                            "&sup2;",
                            "&sup3;",
                            "&acute;",
                            "&micro;",
                            "&para;",
                            "&middot;",
                            "&cedil;",
                            "&sup1;",
                            "&ordm;",
                            "&frac14;",
                            "&frac12;",
                            "&frac34;",
                            "&iquest;",
                            "&Agrave;",
                            "&Aacute;",
                            "&Acirc;",
                            "&Atilde;",
                            "&Auml;",
                            "&Aring;",
                            "&AElig;",
                            "&Ccedil;",
                            "&Egrave;",
                            "&Eacute;",
                            "&Ecirc;",
                            "&Euml;",
                            "&Igrave;",
                            "&Iacute;",
                            "&Icirc;",
                            "&Iuml;",
                            "&ETH;",
                            "&Ntilde;",
                            "&Ograve;",
                            "&Oacute;",
                            "&Ocirc;",
                            "&Otilde;",
                            "&Ouml;",
                            "&times;",
                            "&Oslash;",
                            "&Ugrave;",
                            "&Uacute;",
                            "&Ucirc;",
                            "&Uuml;",
                            "&Yacute;",
                            "&THORN;",
                            "&szlig;",
                            "&agrave;",
                            "&aacute;",
                            "&acirc;",
                            "&atilde;",
                            "&auml;",
                            "&aring;",
                            "&aelig;",
                            "&ccedil;",
                            "&egrave;",
                            "&eacute;",
                            "&ecirc;",
                            "&euml;",
                            "&igrave;",
                            "&iacute;",
                            "&icirc;",
                            "&iuml;",
                            "&eth;",
                            "&ntilde;",
                            "&ograve;",
                            "&oacute;",
                            "&ocirc;",
                            "&otilde;",
                            "&ouml;",
                            "&divide;",
                            "&oslash;",
                            "&ugrave;",
                            "&uacute;",
                            "&ucirc;",
                            "&uuml;",
                            "&yacute;",
                            "&thorn;",
                            "&yuml;",
                            "&OElig;",
                            "&oelig;",
                            "&#372;",
                            "&#374",
                            "&#373",
                            "&#375;",
                            "&sbquo;",
                            "&#8219;",
                            "&bdquo;",
                            "&hellip;",
                            "&trade;",
                            "&#9658;",
                            "&bull;",
                            "&rarr;",
                            "&rArr;",
                            "&hArr;",
                            "&diams;",
                            "&asymp;",
                        ]),
                        te.J.set("symbols", i(41087)),
                        (d.D.prototype.controls.symbols = {
                            hotkeys: ["ctrl+shift+i", "cmd+shift+i"],
                            tooltip: "Insert Special Character",
                            popup(e, t, i, s) {
                                const o = e.e.fire(
                                    "generateSpecialCharactersTable.symbols"
                                );
                                if (o) {
                                    if (e.o.usePopupForSpecialCharacters) {
                                        const t = e.c.div();
                                        return (
                                            t.classList.add("jodit-symbols"),
                                            t.appendChild(o),
                                            e.e.on(o, "close_dialog", s),
                                            t
                                        );
                                    }
                                    {
                                        e.alert(
                                            o,
                                            "Select Special Character",
                                            void 0,
                                            "jodit-symbols"
                                        ).bindDestruct(e);
                                        const t = o.querySelector("a");
                                        t && t.focus();
                                    }
                                }
                            },
                        }),
                        f.pw.add(
                            "symbols",
                            class li extends ye.S {
                                constructor(e) {
                                    super(e),
                                        (this.buttons = [
                                            {
                                                name: "symbols",
                                                group: "insert",
                                            },
                                        ]),
                                        (this.countInRow = 17),
                                        (0, f.xl)(i(87815));
                                }
                                afterInit(e) {
                                    e.e.on(
                                        "generateSpecialCharactersTable.symbols",
                                        () => {
                                            const t = e.c.fromHTML(
                                                    '<div class="jodit-symbols__container">\n\t\t\t\t\t\t<div class="jodit-symbols__container_table">\n\t\t\t\t\t\t\t<table class="jodit-symbols__table"><tbody></tbody></table>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class="jodit-symbols__container_preview">\n\t\t\t\t\t\t\t<div class="jodit-symbols__preview"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>'
                                                ),
                                                i = t.querySelector(
                                                    ".jodit-symbols__preview"
                                                ),
                                                s =
                                                    t.querySelector("table")
                                                        .tBodies[0],
                                                o = [];
                                            for (
                                                let t = 0;
                                                e.o.specialCharacters.length >
                                                t;

                                            ) {
                                                const i = e.c.element("tr");
                                                for (
                                                    let s = 0;
                                                    this.countInRow > s &&
                                                    e.o.specialCharacters
                                                        .length > t;
                                                    s += 1, t += 1
                                                ) {
                                                    const r = e.c.element("td"),
                                                        n = e.c.fromHTML(
                                                            `<a\n\t\t\t\t\t\t\t\t\tdata-index="${t}"\n\t\t\t\t\t\t\t\t\tdata-index-j="${s}"\n\t\t\t\t\t\t\t\t\trole="option"\n\t\t\t\t\t\t\t\t\ttabindex="-1"\n\t\t\t\t\t\t\t>${e.o.specialCharacters[t]}</a>`
                                                        );
                                                    o.push(n),
                                                        r.appendChild(n),
                                                        i.appendChild(r);
                                                }
                                                s.appendChild(i);
                                            }
                                            const r = this;
                                            return (
                                                e.e
                                                    .on(
                                                        o,
                                                        "focus",
                                                        function () {
                                                            i.innerHTML =
                                                                this.innerHTML;
                                                        }
                                                    )
                                                    .on(
                                                        o,
                                                        "mousedown",
                                                        function (t) {
                                                            le.i.isTag(
                                                                this,
                                                                "a"
                                                            ) &&
                                                                (e.s.focus(),
                                                                e.s.insertHTML(
                                                                    this
                                                                        .innerHTML
                                                                ),
                                                                e.e.fire(
                                                                    this,
                                                                    "close_dialog"
                                                                ),
                                                                t &&
                                                                    t.preventDefault(),
                                                                t &&
                                                                    t.stopImmediatePropagation());
                                                        }
                                                    )
                                                    .on(
                                                        o,
                                                        "mouseenter",
                                                        function () {
                                                            le.i.isTag(
                                                                this,
                                                                "a"
                                                            ) && this.focus();
                                                        }
                                                    )
                                                    .on(o, "keydown", (t) => {
                                                        const i = t.target;
                                                        if (
                                                            le.i.isTag(i, "a")
                                                        ) {
                                                            const s = parseInt(
                                                                    (0,
                                                                    me.attr)(
                                                                        i,
                                                                        "-index"
                                                                    ) || "0",
                                                                    10
                                                                ),
                                                                n = parseInt(
                                                                    (0,
                                                                    me.attr)(
                                                                        i,
                                                                        "data-index-j"
                                                                    ) || "0",
                                                                    10
                                                                );
                                                            let a;
                                                            switch (t.key) {
                                                                case h.KEY_UP:
                                                                case h.KEY_DOWN:
                                                                    (a =
                                                                        t.key ===
                                                                        h.KEY_UP
                                                                            ? s -
                                                                              r.countInRow
                                                                            : s +
                                                                              r.countInRow),
                                                                        void 0 ===
                                                                            o[
                                                                                a
                                                                            ] &&
                                                                            ((a =
                                                                                t.key ===
                                                                                h.KEY_UP
                                                                                    ? Math.floor(
                                                                                          o.length /
                                                                                              r.countInRow
                                                                                      ) *
                                                                                          r.countInRow +
                                                                                      n
                                                                                    : n),
                                                                            a >
                                                                                o.length -
                                                                                    1 &&
                                                                                (a -=
                                                                                    r.countInRow)),
                                                                        o[a] &&
                                                                            o[
                                                                                a
                                                                            ].focus();
                                                                    break;
                                                                case h.KEY_RIGHT:
                                                                case h.KEY_LEFT:
                                                                    (a =
                                                                        t.key ===
                                                                        h.KEY_LEFT
                                                                            ? s -
                                                                              1
                                                                            : s +
                                                                              1),
                                                                        void 0 ===
                                                                            o[
                                                                                a
                                                                            ] &&
                                                                            (a =
                                                                                t.key ===
                                                                                h.KEY_LEFT
                                                                                    ? o.length -
                                                                                      1
                                                                                    : 0),
                                                                        o[a] &&
                                                                            o[
                                                                                a
                                                                            ].focus();
                                                                    break;
                                                                case h.KEY_ENTER:
                                                                    e.e.fire(
                                                                        i,
                                                                        "mousedown"
                                                                    ),
                                                                        t.stopImmediatePropagation(),
                                                                        t.preventDefault();
                                                            }
                                                        }
                                                    }),
                                                t
                                            );
                                        }
                                    );
                                }
                                beforeDestruct(e) {
                                    e.e.off(
                                        "generateSpecialCharactersTable.symbols"
                                    );
                                }
                            }
                        ),
                        i(10173),
                        (d.D.prototype.tab = { tabInsideLiInsertNewList: !0 });
                    class ci extends re.S {
                        afterInit(e) {}
                        __onTab(e) {
                            if (
                                e.key === h.KEY_TAB &&
                                this.__onShift(e.shiftKey)
                            )
                                return !1;
                        }
                        __onCommand(e) {
                            if (
                                ("indent" === e || "outdent" === e) &&
                                this.__onShift("outdent" === e)
                            )
                                return !1;
                        }
                        __onShift(e) {
                            const t = ((e, t = !1) => {
                                if (!e.o.tab.tabInsideLiInsertNewList)
                                    return !1;
                                const [i, s] = ((e) => {
                                    const t = e.createInside.fake(),
                                        i = e.createInside.fake(),
                                        s = e.s.range.cloneRange();
                                    s.collapse(!0), s.insertNode(t);
                                    const o = e.s.range.cloneRange();
                                    return (
                                        o.collapse(!1), o.insertNode(i), [t, i]
                                    );
                                })(e);
                                try {
                                    const o = ((e, t, i) => {
                                        const s = le.i.closest(
                                            t,
                                            "li",
                                            e.editor
                                        );
                                        return (
                                            !!s &&
                                            !(
                                                !i &&
                                                !le.i.isTag(
                                                    s.previousElementSibling,
                                                    "li"
                                                )
                                            ) &&
                                            !(
                                                i &&
                                                !le.i.closest(s, "li", e.editor)
                                            ) &&
                                            s
                                        );
                                    })(e, i, t);
                                    if (!o) return !1;
                                    if (
                                        !((e, t, i) => {
                                            const s = le.i.closest(
                                                i,
                                                "li",
                                                t.editor
                                            );
                                            return !(
                                                !s ||
                                                (s !== e && !e.contains(s))
                                            );
                                        })(o, e, i)
                                    )
                                        return !1;
                                    const r = le.i.closest(
                                        o,
                                        ["ol", "ul"],
                                        e.editor
                                    );
                                    return !(
                                        !r ||
                                        (t &&
                                            !le.i.closest(r, "li", e.editor)) ||
                                        (t
                                            ? ((e, t, i) => {
                                                  const s = le.i.closest(
                                                          t,
                                                          "li",
                                                          e.editor
                                                      ),
                                                      o = Array.from(
                                                          t.children
                                                      ).filter((e) =>
                                                          le.i.isTag(e, "li")
                                                      );
                                                  le.i.after(s, i);
                                                  const r = o.indexOf(i);
                                                  if (
                                                      ((0 !== r &&
                                                          1 !== o.length) ||
                                                          le.i.safeRemove(t),
                                                      r !== o.length - 1)
                                                  ) {
                                                      const e = t.cloneNode();
                                                      le.i.append(i, e);
                                                      for (
                                                          let t = r + 1;
                                                          o.length > t;
                                                          t += 1
                                                      )
                                                          le.i.append(e, o[t]);
                                                  }
                                              })(e, r, o)
                                            : ((e, t, i) => {
                                                  const s =
                                                          i.previousElementSibling,
                                                      o = s.lastElementChild,
                                                      r = le.i.isTag(
                                                          o,
                                                          t.tagName
                                                      )
                                                          ? o
                                                          : e.createInside.element(
                                                                t.tagName,
                                                                Array.from(
                                                                    t.attributes
                                                                ).reduce(
                                                                    (e, t) => (
                                                                        (e[
                                                                            t.name
                                                                        ] =
                                                                            t.value),
                                                                        e
                                                                    ),
                                                                    {}
                                                                )
                                                            );
                                                  r.appendChild(i),
                                                      o !== r &&
                                                          s.appendChild(r);
                                              })(e, r, o),
                                        0)
                                    );
                                } finally {
                                    const t = e.s.createRange();
                                    t.setStartAfter(i),
                                        t.setEndBefore(s),
                                        e.s.selectRange(t),
                                        le.i.safeRemove(i),
                                        le.i.safeRemove(s);
                                }
                                return !1;
                            })(this.j, e);
                            return t && this.j.e.fire("afterTab", e), t;
                        }
                        beforeDestruct(e) {}
                    }
                    (0, c.gn)(
                        [(0, g.watch)(":keydown.tab")],
                        ci.prototype,
                        "__onTab",
                        null
                    ),
                        (0, c.gn)(
                            [(0, g.watch)(":beforeCommand.tab")],
                            ci.prototype,
                            "__onCommand",
                            null
                        ),
                        f.pw.add("tab", ci),
                        (d.D.prototype.table = {
                            selectionCellStyle:
                                "border: 1px double #1e88e5 !important;",
                            useExtraClassesOptions: !1,
                        }),
                        te.J.set("table", i(46430)),
                        (d.D.prototype.controls.table = {
                            data: {
                                cols: 10,
                                rows: 10,
                                classList: {
                                    "table table-bordered":
                                        "Bootstrap Bordered",
                                    "table table-striped": "Bootstrap Striped",
                                    "table table-dark": "Bootstrap Dark",
                                },
                            },
                            popup(e, t, i, s, o) {
                                const r =
                                        i.data && i.data.rows
                                            ? i.data.rows
                                            : 10,
                                    n =
                                        i.data && i.data.cols
                                            ? i.data.cols
                                            : 10,
                                    a = e.c.fromHTML(
                                        '<form class="jodit-form jodit-form__inserter"><div class="jodit-form__table-creator-box"><div class="jodit-form__container"></div><div class="jodit-form__options">' +
                                            (() => {
                                                if (
                                                    !e.o.table
                                                        .useExtraClassesOptions
                                                )
                                                    return "";
                                                const t = [];
                                                if (i.data) {
                                                    const e = i.data.classList;
                                                    Object.keys(e).forEach(
                                                        (i) => {
                                                            t.push(
                                                                `<label class="jodit_vertical_middle"><input class="jodit-checkbox" value="${i}" type="checkbox"/>${e[i]}</label>`
                                                            );
                                                        }
                                                    );
                                                }
                                                return t.join("");
                                            })() +
                                            '</div></div><label class="jodit-form__center"><span>1</span> &times; <span>1</span></label></form>'
                                    ),
                                    l = a.querySelectorAll("span")[0],
                                    c = a.querySelectorAll("span")[1],
                                    d = a.querySelector(
                                        ".jodit-form__container"
                                    ),
                                    h = a.querySelector(".jodit-form__options"),
                                    u = [],
                                    m = r * n;
                                for (let t = 0; m > t; t += 1)
                                    u[t] ||
                                        u.push(
                                            e.c.element("span", {
                                                dataIndex: t,
                                            })
                                        );
                                if (
                                    (e.e
                                        .on(d, "mousemove", (e, t) => {
                                            const i = e.target;
                                            if (!ne.i.isTag(i, "span")) return;
                                            const s =
                                                    void 0 === t || isNaN(t)
                                                        ? parseInt(
                                                              (0, me.attr)(
                                                                  i,
                                                                  "-index"
                                                              ) || "0",
                                                              10
                                                          )
                                                        : t || 0,
                                                o = Math.ceil((s + 1) / n),
                                                r = (s % n) + 1;
                                            for (
                                                let e = 0;
                                                u.length > e;
                                                e += 1
                                            )
                                                u[e].className =
                                                    (e % n) + 1 > r ||
                                                    Math.ceil((e + 1) / n) > o
                                                        ? ""
                                                        : "jodit_hovered";
                                            (c.textContent = "" + r),
                                                (l.textContent = "" + o);
                                        })
                                        .on(d, "touchstart mousedown", (t) => {
                                            const i = t.target;
                                            if (
                                                (t.preventDefault(),
                                                t.stopImmediatePropagation(),
                                                !ne.i.isTag(i, "span"))
                                            )
                                                return;
                                            const o = parseInt(
                                                    (0, me.attr)(i, "-index") ||
                                                        "0",
                                                    10
                                                ),
                                                r = Math.ceil((o + 1) / n),
                                                a = (o % n) + 1,
                                                l = e.createInside,
                                                c = l.element("tbody"),
                                                d = l.element("table");
                                            d.appendChild(c);
                                            let u,
                                                m,
                                                f = null;
                                            for (let e = 1; r >= e; e += 1) {
                                                u = l.element("tr");
                                                for (let e = 1; a >= e; e += 1)
                                                    (m = l.element("td")),
                                                        f || (f = m),
                                                        (0, p.css)(
                                                            m,
                                                            "width",
                                                            (100 / a).toFixed(
                                                                4
                                                            ) + "%"
                                                        ),
                                                        m.appendChild(
                                                            l.element("br")
                                                        ),
                                                        u.appendChild(
                                                            l.text("\n")
                                                        ),
                                                        u.appendChild(
                                                            l.text("\t")
                                                        ),
                                                        u.appendChild(m);
                                                c.appendChild(l.text("\n")),
                                                    c.appendChild(u);
                                            }
                                            (0, p.$$)(
                                                "input[type=checkbox]:checked",
                                                h
                                            ).forEach((e) => {
                                                e.value
                                                    .split(/[\s]+/)
                                                    .forEach((e) => {
                                                        d.classList.add(e);
                                                    });
                                            }),
                                                e.editor.firstChild &&
                                                    e.s.insertNode(
                                                        l.text("\n"),
                                                        !1,
                                                        !1
                                                    ),
                                                e.s.insertNode(d, !1),
                                                f &&
                                                    (e.s.setCursorIn(f),
                                                    (0,
                                                    p.scrollIntoViewIfNeeded)(
                                                        f,
                                                        e.editor,
                                                        e.ed
                                                    )),
                                                s();
                                        }),
                                    o && o.parentElement)
                                ) {
                                    for (let t = 0; r > t; t += 1) {
                                        const i = e.c.div();
                                        for (let e = 0; n > e; e += 1)
                                            i.appendChild(u[t * n + e]);
                                        d.appendChild(i);
                                    }
                                    u[0] && (u[0].className = "hovered");
                                }
                                return a;
                            },
                            tooltip: "Insert table",
                        }),
                        f.pw.add("table", (e) => {
                            e.registerButton({
                                name: "table",
                                group: "insert",
                            });
                        });
                    var di = i(38683);
                    f.pw.add("tableKeyboardNavigation", (e) => {
                        e.e
                            .off(".tableKeyboardNavigation")
                            .on("keydown.tableKeyboardNavigation", (t) => {
                                let i, s;
                                if (
                                    t.key !== h.KEY_TAB &&
                                    t.key !== h.KEY_LEFT &&
                                    t.key !== h.KEY_RIGHT &&
                                    t.key !== h.KEY_UP &&
                                    t.key !== h.KEY_DOWN
                                )
                                    return;
                                {
                                    if (
                                        ((i = e.s.current()),
                                        (s = le.i.up(
                                            i,
                                            (e) =>
                                                e &&
                                                e.nodeName &&
                                                /^td|th$/i.test(e.nodeName),
                                            e.editor
                                        )),
                                        !s)
                                    )
                                        return;
                                    const o = e.s.range;
                                    if (
                                        t.key !== h.KEY_TAB &&
                                        i !== s &&
                                        (((t.key === h.KEY_LEFT ||
                                            t.key === h.KEY_UP) &&
                                            (le.i.prev(
                                                i,
                                                (e) =>
                                                    t.key === h.KEY_UP
                                                        ? le.i.isTag(e, "br")
                                                        : !!e,
                                                s
                                            ) ||
                                                (t.key !== h.KEY_UP &&
                                                    le.i.isText(i) &&
                                                    0 !== o.startOffset))) ||
                                            ((t.key === h.KEY_RIGHT ||
                                                t.key === h.KEY_DOWN) &&
                                                (le.i.next(
                                                    i,
                                                    (e) =>
                                                        t.key === h.KEY_DOWN
                                                            ? le.i.isTag(
                                                                  e,
                                                                  "br"
                                                              )
                                                            : !!e,
                                                    s
                                                ) ||
                                                    (t.key !== h.KEY_DOWN &&
                                                        le.i.isText(i) &&
                                                        i.nodeValue &&
                                                        o.startOffset !==
                                                            i.nodeValue
                                                                .length))))
                                    )
                                        return;
                                }
                                const o = le.i.up(
                                    s,
                                    (e) => e && /^table$/i.test(e.nodeName),
                                    e.editor
                                );
                                let r = null;
                                switch (t.key) {
                                    case h.KEY_TAB:
                                    case h.KEY_LEFT: {
                                        const i =
                                            t.key === h.KEY_LEFT || t.shiftKey
                                                ? "prev"
                                                : "next";
                                        (r = le.i[i](
                                            s,
                                            (e) =>
                                                e && /^td|th$/i.test(e.tagName),
                                            o
                                        )),
                                            r ||
                                                (di.i.appendRow(
                                                    o,
                                                    "next" !== i &&
                                                        o.querySelector("tr"),
                                                    "next" === i,
                                                    e.createInside
                                                ),
                                                (r = le.i[i](
                                                    s,
                                                    le.i.isCell,
                                                    o
                                                )));
                                        break;
                                    }
                                    case h.KEY_UP:
                                    case h.KEY_DOWN: {
                                        let e = 0,
                                            i = 0;
                                        const n = di.i.formalMatrix(
                                            o,
                                            (t, o, r) => {
                                                t === s && ((e = o), (i = r));
                                            }
                                        );
                                        t.key === h.KEY_UP
                                            ? void 0 !== n[e - 1] &&
                                              (r = n[e - 1][i])
                                            : void 0 !== n[e + 1] &&
                                              (r = n[e + 1][i]);
                                    }
                                }
                                if (r) {
                                    if (r.firstChild)
                                        t.key === h.KEY_TAB
                                            ? e.s.select(r, !0)
                                            : e.s.setCursorIn(
                                                  r,
                                                  t.key === h.KEY_RIGHT ||
                                                      t.key === h.KEY_DOWN
                                              );
                                    else {
                                        const t = e.createInside.element("br");
                                        r.appendChild(t),
                                            e.s.setCursorBefore(t);
                                    }
                                    return !1;
                                }
                            });
                    }),
                        te.J.set("video", i(78606)),
                        (d.D.prototype.controls.video = {
                            popup(e, t, i, s) {
                                const o = new yt.x4(e, [
                                        new yt.eC(e, [
                                            new yt.u3(e, {
                                                name: "url",
                                                required: !0,
                                                label: "URL",
                                                placeholder: "https://",
                                                validators: ["url"],
                                            }),
                                        ]),
                                        new yt.eC(e, [
                                            (0, st.zx)(
                                                e,
                                                "",
                                                "Insert",
                                                "primary"
                                            ).onAction(() => o.submit()),
                                        ]),
                                    ]),
                                    r = new yt.x4(e, [
                                        new yt.eC(e, [
                                            new yt.GJ(e, {
                                                name: "code",
                                                required: !0,
                                                label: "Embed code",
                                            }),
                                        ]),
                                        new yt.eC(e, [
                                            (0, st.zx)(
                                                e,
                                                "",
                                                "Insert",
                                                "primary"
                                            ).onAction(() => r.submit()),
                                        ]),
                                    ]),
                                    n = [],
                                    a = (t) => {
                                        e.s.restore(), e.s.insertHTML(t), s();
                                    };
                                return (
                                    e.s.save(),
                                    n.push(
                                        {
                                            icon: "link",
                                            name: "Link",
                                            content: o.container,
                                        },
                                        {
                                            icon: "source",
                                            name: "Code",
                                            content: r.container,
                                        }
                                    ),
                                    o.onSubmit((e) => {
                                        a(
                                            (0, p.convertMediaUrlToVideoEmbed)(
                                                e.url
                                            )
                                        );
                                    }),
                                    r.onSubmit((e) => {
                                        a(e.code);
                                    }),
                                    (0, Ne.IL)(e, n)
                                );
                            },
                            tags: ["iframe"],
                            tooltip: "Insert youtube/vimeo video",
                        }),
                        f.pw.add("video", (e) => {
                            e.registerButton({ name: "video", group: "media" });
                        }),
                        (d.D.prototype.wrapNodes = {
                            exclude: ["hr", "style", "br"],
                            emptyBlockAfterInit: !0,
                        });
                    class hi extends re.S {
                        constructor() {
                            super(...arguments),
                                (this.isSuitableStart = (e) =>
                                    (ne.i.isText(e) &&
                                        (0, Ce.H)(e.nodeValue) &&
                                        /[^\s]/.test(e.nodeValue)) ||
                                    (this.isNotClosed(e) &&
                                        !ne.i.isTemporary(e))),
                                (this.isSuitable = (e) =>
                                    ne.i.isText(e) || this.isNotClosed(e)),
                                (this.isNotClosed = (e) =>
                                    ne.i.isElement(e) &&
                                    !(
                                        ne.i.isBlock(e) ||
                                        ne.i.isTag(
                                            e,
                                            this.j.o.wrapNodes.exclude
                                        )
                                    ));
                        }
                        afterInit(e) {
                            "br" !== e.o.enter.toLowerCase() &&
                                e.e
                                    .on(
                                        "drop.wtn focus.wtn keydown.wtn mousedown.wtn afterInit.wtn",
                                        this.preprocessInput,
                                        { top: !0 }
                                    )
                                    .on(
                                        "afterInit.wtn postProcessSetEditorValue.wtn",
                                        this.postProcessSetEditorValue
                                    );
                        }
                        beforeDestruct(e) {
                            e.e.off(".wtn");
                        }
                        postProcessSetEditorValue() {
                            const { jodit: e } = this;
                            if (!e.isEditorMode()) return;
                            let t = e.editor.firstChild,
                                i = !1;
                            for (; t; ) {
                                if (
                                    ((t = this.checkAloneListLeaf(t, e)),
                                    this.isSuitableStart(t))
                                ) {
                                    i || e.s.save(), (i = !0);
                                    const s = e.createInside.element(e.o.enter);
                                    for (
                                        ne.i.before(t, s);
                                        t && this.isSuitable(t);

                                    ) {
                                        const e = t.nextSibling;
                                        s.appendChild(t), (t = e);
                                    }
                                    s.normalize(), (t = s);
                                }
                                t = t && t.nextSibling;
                            }
                            i &&
                                (e.s.restore(),
                                "afterInit" === e.e.current &&
                                    e.e.fire("internalChange"));
                        }
                        checkAloneListLeaf(e, t) {
                            let i = e,
                                s = e;
                            do {
                                if (
                                    !ne.i.isElement(s) ||
                                    !ne.i.isTag(s, "li") ||
                                    ne.i.isTag(s.parentElement, ["ul", "ol"])
                                )
                                    break;
                                {
                                    const e = ne.i.findNotEmptySibling(s, !1);
                                    ne.i.isTag(i, "ul")
                                        ? i.appendChild(s)
                                        : (i = ne.i.wrap(
                                              s,
                                              "ul",
                                              t.createInside
                                          )),
                                        (s = e);
                                }
                            } while (s);
                            return i;
                        }
                        preprocessInput() {
                            const { jodit: e } = this,
                                t = "afterInit" === e.e.current;
                            if (
                                !e.isEditorMode() ||
                                e.editor.firstChild ||
                                (!e.o.wrapNodes.emptyBlockAfterInit && t)
                            )
                                return;
                            const i = e.createInside.element(e.o.enter),
                                s = e.createInside.element("br");
                            ne.i.append(i, s),
                                ne.i.append(e.editor, i),
                                e.s.isFocused() && e.s.setCursorBefore(s),
                                e.e.fire("internalChange");
                        }
                    }
                    (0, c.gn)(
                        [g.autobind],
                        hi.prototype,
                        "postProcessSetEditorValue",
                        null
                    ),
                        (0, c.gn)(
                            [g.autobind],
                            hi.prototype,
                            "preprocessInput",
                            null
                        ),
                        f.pw.add("wrapNodes", hi);
                    var ui = i(12692);
                    function pi(e, t) {
                        if (
                            (le.i.isFragment(t) && (t = t.firstChild),
                            e.o.dtd.checkBlockNesting && le.i.isBlock(t))
                        ) {
                            const t = le.i.furthest(
                                e.s.current(),
                                le.i.isBlock,
                                e.editor
                            );
                            t &&
                                !e.o.dtd.blockLimits[t.tagName.toLowerCase()] &&
                                (e.s.setCursorAfter(t),
                                le.i.isEmpty(t) && le.i.safeRemove(t));
                        }
                    }
                    function mi(e, t) {
                        if (!e.o.dtd.removeExtraBr || le.i.isTag(t, "br"))
                            return;
                        const i = le.i.furthest(t, le.i.isBlock, e.editor);
                        if (
                            i &&
                            !le.i.isTag(i, [
                                "table",
                                "pre",
                                "blockquote",
                                "code",
                            ])
                        ) {
                            const i = le.i.isTag(t, "br")
                                ? t
                                : le.i.findNotEmptySibling(t, !1);
                            if (!le.i.isTag(i, "br")) return;
                            e.s.setCursorBefore(i), le.i.safeRemove(i);
                        }
                    }
                    d.D.prototype.dtd = {
                        removeExtraBr: !0,
                        checkBlockNesting: !0,
                        blockLimits: {
                            article: 1,
                            aside: 1,
                            audio: 1,
                            body: 1,
                            caption: 1,
                            details: 1,
                            dir: 1,
                            div: 1,
                            dl: 1,
                            fieldset: 1,
                            figcaption: 1,
                            figure: 1,
                            footer: 1,
                            form: 1,
                            header: 1,
                            hgroup: 1,
                            main: 1,
                            menu: 1,
                            nav: 1,
                            ol: 1,
                            section: 1,
                            table: 1,
                            td: 1,
                            th: 1,
                            tr: 1,
                            ul: 1,
                            video: 1,
                        },
                    };
                    class fi extends re.S {
                        afterInit(e) {}
                        beforeDestruct(e) {}
                        __onBeforeInsertNode(e) {
                            Object.keys(r).forEach((t) => {
                                r[t](this.j, e);
                            });
                        }
                        __onAfterInsertNode(e) {
                            Object.keys(n).forEach((t) => {
                                n[t](this.j, e);
                            });
                        }
                    }
                    (0, c.gn)(
                        [(0, ui.YP)(":beforeInsertNode")],
                        fi.prototype,
                        "__onBeforeInsertNode",
                        null
                    ),
                        (0, c.gn)(
                            [(0, ui.YP)(":afterInsertNode")],
                            fi.prototype,
                            "__onAfterInsertNode",
                            null
                        ),
                        f.pw.add("dtd", fi);
                    var gi = i(28338);
                    (d.D.prototype.showXPathInStatusbar = !0),
                        f.pw.add(
                            "xpath",
                            class vi extends re.S {
                                constructor() {
                                    super(...arguments),
                                        (this.onContext = (e, t) => (
                                            this.menu ||
                                                (this.menu = new gi.x(this.j)),
                                            this.menu.show(
                                                t.clientX,
                                                t.clientY,
                                                [
                                                    {
                                                        icon: "bin",
                                                        title:
                                                            e === this.j.editor
                                                                ? "Clear"
                                                                : "Remove",
                                                        exec: () => {
                                                            e !== this.j.editor
                                                                ? ne.i.safeRemove(
                                                                      e
                                                                  )
                                                                : (this.j.value =
                                                                      ""),
                                                                this.j.synchronizeValues();
                                                        },
                                                    },
                                                    {
                                                        icon: "select-all",
                                                        title: "Select",
                                                        exec: () => {
                                                            this.j.s.select(e);
                                                        },
                                                    },
                                                ]
                                            ),
                                            !1
                                        )),
                                        (this.onSelectPath = (e, t) => {
                                            this.j.s.focus();
                                            const i =
                                                (0, p.attr)(
                                                    t.target,
                                                    "-path"
                                                ) || "/";
                                            if ("/" === i)
                                                return (
                                                    this.j.execCommand(
                                                        "selectall"
                                                    ),
                                                    !1
                                                );
                                            try {
                                                const e = this.j.ed
                                                    .evaluate(
                                                        i,
                                                        this.j.editor,
                                                        null,
                                                        XPathResult.ANY_TYPE,
                                                        null
                                                    )
                                                    .iterateNext();
                                                if (e)
                                                    return (
                                                        this.j.s.select(e), !1
                                                    );
                                            } catch (e) {}
                                            return this.j.s.select(e), !1;
                                        }),
                                        (this.tpl = (e, t, i, s) => {
                                            const o = this.j.c.fromHTML(
                                                    `<span class="jodit-xpath__item"><a role="button" data-path="${t}" title="${s}" tabindex="-1"'>${(0,
                                                    p.trim)(i)}</a></span>`
                                                ),
                                                r = o.firstChild;
                                            return (
                                                this.j.e
                                                    .on(
                                                        r,
                                                        "click",
                                                        this.onSelectPath.bind(
                                                            this,
                                                            e
                                                        )
                                                    )
                                                    .on(
                                                        r,
                                                        "contextmenu",
                                                        this.onContext.bind(
                                                            this,
                                                            e
                                                        )
                                                    ),
                                                o
                                            );
                                        }),
                                        (this.removeSelectAll = () => {
                                            this.selectAllButton &&
                                                (this.selectAllButton.destruct(),
                                                delete this.selectAllButton);
                                        }),
                                        (this.appendSelectAll = () => {
                                            this.removeSelectAll(),
                                                (this.selectAllButton = (0,
                                                ht.g)(this.j, {
                                                    name: "selectall",
                                                    ...this.j.o.controls
                                                        .selectall,
                                                })),
                                                (this.selectAllButton.state.size =
                                                    "tiny"),
                                                this.container &&
                                                    this.container.insertBefore(
                                                        this.selectAllButton
                                                            .container,
                                                        this.container
                                                            .firstChild
                                                    );
                                        }),
                                        (this.calcPathImd = () => {
                                            if (this.isDestructed) return;
                                            const e = this.j.s.current();
                                            if (
                                                (this.container &&
                                                    (this.container.innerHTML =
                                                        h.INVISIBLE_SPACE),
                                                e)
                                            ) {
                                                let t, i, s;
                                                ne.i.up(
                                                    e,
                                                    (e) => {
                                                        e &&
                                                            this.j.editor !==
                                                                e &&
                                                            !ne.i.isText(e) &&
                                                            ((t =
                                                                e.nodeName.toLowerCase()),
                                                            (i = (0,
                                                            p.getXPathByElement)(
                                                                e,
                                                                this.j.editor
                                                            ).replace(
                                                                /^\//,
                                                                ""
                                                            )),
                                                            (s = this.tpl(
                                                                e,
                                                                i,
                                                                t,
                                                                this.j.i18n(
                                                                    "Select %s",
                                                                    t
                                                                )
                                                            )),
                                                            this.container &&
                                                                this.container.insertBefore(
                                                                    s,
                                                                    this
                                                                        .container
                                                                        .firstChild
                                                                ));
                                                    },
                                                    this.j.editor
                                                );
                                            }
                                            this.appendSelectAll();
                                        }),
                                        (this.calcPath = this.j.async.debounce(
                                            this.calcPathImd,
                                            2 * this.j.defaultTimeout
                                        ));
                                }
                                afterInit() {
                                    this.j.o.showXPathInStatusbar &&
                                        ((this.container =
                                            this.j.c.div("jodit-xpath")),
                                        this.j.e
                                            .off(".xpath")
                                            .on(
                                                "mouseup.xpath change.xpath keydown.xpath changeSelection.xpath",
                                                this.calcPath
                                            )
                                            .on(
                                                "afterSetMode.xpath afterInit.xpath changePlace.xpath",
                                                () => {
                                                    this.j.o
                                                        .showXPathInStatusbar &&
                                                        this.container &&
                                                        (this.j.statusbar.append(
                                                            this.container
                                                        ),
                                                        this.j.getRealMode() ===
                                                        h.MODE_WYSIWYG
                                                            ? this.calcPath()
                                                            : (this.container &&
                                                                  (this.container.innerHTML =
                                                                      h.INVISIBLE_SPACE),
                                                              this.appendSelectAll()));
                                                }
                                            ),
                                        this.calcPath());
                                }
                                beforeDestruct() {
                                    this.j &&
                                        this.j.events &&
                                        this.j.e.off(".xpath"),
                                        this.removeSelectAll(),
                                        this.menu && this.menu.destruct(),
                                        ne.i.safeRemove(this.container),
                                        delete this.menu,
                                        delete this.container;
                                }
                            }
                        ),
                        Object.keys(h).forEach((e) => {
                            Jodit[e] = h[e];
                        });
                    const bi = (e) => "__esModule" !== e;
                    Object.keys(s)
                        .filter(bi)
                        .forEach((e) => {
                            u.Icon.set(e.replace("_", "-"), s[e]);
                        }),
                        Object.keys(u)
                            .filter(bi)
                            .forEach((e) => {
                                Jodit.modules[e] = u[e];
                            }),
                        Object.keys(g)
                            .filter(bi)
                            .forEach((e) => {
                                Jodit.decorators[e] = g[e];
                            }),
                        ["Confirm", "Alert", "Prompt"].forEach((e) => {
                            Jodit[e] = u[e];
                        }),
                        Object.keys(j)
                            .filter(bi)
                            .forEach((e) => {
                                Jodit.lang[e] = j[e];
                            }),
                        (d.D.prototype.controls.font.list = {
                            "andale mono,monospace": "Andale Mono",
                            "arial,helvetica,sans-serif": "Arial",
                            "arial black,sans-serif": "Arial Black",
                            "book antiqua,palatino,serif": "Book Antiqua",
                            "comic sans ms,sans-serif": "Comic Sans MS",
                            "courier new,courier,monospace": "Courier New",
                            "georgia,palatino,serif": "Georgia",
                            "helvetica,arial,sans-serif": "Helvetica",
                            "impact,charcoal,sans-serif": "Impact",
                            "symbol,sans-serif": "Symbol",
                            "tahoma,arial,helvetica,sans-serif": "Tahoma",
                            "terminal,monaco,monospace": "Terminal",
                            "times new roman,times,serif": "Times New Roman",
                            "trebuchet ms,geneva,sans-serif": "Trebuchet MS",
                            "verdana,geneva,sans-serif": "Verdana",
                            webdings: "Webdings",
                            "wingdings,zapf dingbats": "Wingdings",
                        });
                    class yi extends Jodit {
                        beforeInitHook() {
                            return (0, me.appendScriptAsync)(
                                this,
                                this.basePath + "config.js"
                            );
                        }
                        async afterInitHook() {
                            if (
                                "normal" !== (await this.e.fire("checkReserve"))
                            ) {
                                if (this.isInDestruct) return;
                                const e = this.c.div("", "");
                                (0, me.css)(e, {
                                    position: "absolute",
                                    color: "red",
                                    right: 10,
                                    bottom: 10,
                                }),
                                    this.addDisclaimer(e);
                            }
                            super.afterInitHook();
                        }
                        getVersion() {
                            return "PRO 1.3.38";
                        }
                    }
                    yi.fatMode = !1;
                    var wi = i(85475);
                    function ki() {}
                    Object.keys(a).forEach((e) => yi.plugins.add(e, a[e]));
                    const Ci = yi;
                },
                85475(e, t, i) {
                    "use strict";
                    i.d(t, {
                        V() {
                            return a;
                        },
                    });
                    var s = i(10818),
                        o = i(6293),
                        r = i(47643),
                        n = i(11777);
                    class a extends s.S {
                        static make(e) {
                            return new a(e);
                        }
                        afterInit(e) {
                            this.j.e.on("checkReserve", async () => {
                                const e = this.j.o.license,
                                    t = location.host;
                                let i = (0, n.sx)(e, t);
                                return (
                                    !i &&
                                        e[12] > "A" &&
                                        (i = await this.validateLicenseRemote(
                                            e,
                                            t
                                        )),
                                    i ? "normal" : ""
                                );
                            });
                        }
                        beforeDestruct(e) {}
                        async validateLicenseRemote(e, t) {
                            const i = "validateJoditLicenseRemote",
                                s = this.j.storage.get(i);
                            if (s && (0, n.sx)(s, t)) return !0;
                            const a = document.createElement("script");
                            return (
                                (a.src = `https://xdsoft.net/jodit/pro/api/licenses/validate/?code=${encodeURIComponent(
                                    e
                                )}&host=${encodeURIComponent(t)}`),
                                document.body.appendChild(a),
                                new Promise((e) => {
                                    (window.onJoditResolveKeyCode = (s) => {
                                        try {
                                            if ((0, r.isBoolean)(s))
                                                return e(s);
                                            (0, n.sx)(s, t)
                                                ? (this.j.storage.set(i, s),
                                                  e(!0))
                                                : e(!1);
                                        } finally {
                                            o.Dom.safeRemove(a);
                                        }
                                    }),
                                        setTimeout(() => {
                                            e(!1), o.Dom.safeRemove(a);
                                        }, 3e3);
                                })
                            );
                        }
                    }
                },
                11777(e) {
                    e.exports.sx = function e(t, i) {
                        if (
                            ((e) =>
                                /[A-Z0-9][013456][A-P0-9]{2}[ABC]-([0-3])[ELPDF][E-L4-8]{2}\1-[A-D][R0][J-P5-6]{3}-[DPGHYE][GFPOD]{3}[A-SX-Z]/.test(
                                    e
                                ))(t)
                        )
                            return !0;
                        const s = ((e) => {
                                const t = e.split(".");
                                return t
                                    .map((e) =>
                                        e[0] && e[0].charCodeAt(0)
                                            ? String.fromCharCode(
                                                  e[0].charCodeAt(0) + 1
                                              )
                                            : e[0]
                                    )
                                    .concat(
                                        t.map((e) =>
                                            e[e.length - 1] &&
                                            e[e.length - 1].charCodeAt(0)
                                                ? String.fromCharCode(
                                                      e[
                                                          e.length - 1
                                                      ].charCodeAt(0) - 1
                                                  )
                                                : e[e.length - 1]
                                        )
                                    );
                            })(i),
                            o = [
                                "[A-F013456][A-F0-9]{3}{part}",
                                "([0-3]){part}[E-L4-8]{2}\\1",
                                "[A-D]{part}[J-P5-6]{3}",
                                "{part}[A-R0-9]{3}[X-Z]",
                            ].map((e, t) =>
                                e.replace("{part}", s[t] || "[R-T]")
                            ),
                            r = RegExp(`^${o.join("-")}$`, "i"),
                            n = t.substring(12, 13),
                            a = r.test(t);
                        if (!a && n === (typeof !i).toUpperCase()[5]) {
                            const s = i.split(".");
                            return s.shift(), !!s.length && e(t, s.join("."));
                        }
                        return a;
                    };
                },
                89091(e) {
                    e.exports.default = [
                        "إبدأ في الكتابة...",
                        "حول جوديت",
                        "محرر جوديت",
                        "دليل مستخدم جوديت",
                        "يحتوي على مساعدة مفصلة للاستخدام",
                        "للحصول على معلومات حول الترخيص، يرجى الذهاب لموقعنا:",
                        "شراء النسخة الكاملة",
                        "حقوق الطبع والنشر © XDSoft.net - Chupurnov Valeriy. كل الحقوق محفوظة.",
                        "مِرْساة",
                        "فتح في نافذة جديدة",
                        "فتح المحرر في الحجم الكامل",
                        "مسح التنسيق",
                        "ملء اللون أو تعيين لون النص",
                        "إعادة",
                        "تراجع",
                        "عريض",
                        "مائل",
                        "إدراج قائمة غير مرتبة",
                        "إدراج قائمة مرتبة",
                        "محاذاة للوسط",
                        "محاذاة مثبتة",
                        "محاذاة لليسار",
                        "محاذاة لليمين",
                        "إدراج خط أفقي",
                        "إدراج صورة",
                        "ادخال الملف",
                        "إدراج فيديو يوتيوب/فيميو ",
                        "إدراج رابط",
                        "حجم الخط",
                        "نوع الخط",
                        "إدراج كتلة تنسيق",
                        "عادي",
                        "عنوان 1",
                        "عنوان 2",
                        "عنوان 3",
                        "عنوان 4",
                        "إقتباس",
                        "كود",
                        "إدراج",
                        "إدراج جدول",
                        "تقليل المسافة البادئة",
                        "زيادة المسافة البادئة",
                        "تحديد أحرف خاصة",
                        "إدراج حرف خاص",
                        "تنسيق الرسم",
                        "تغيير الوضع",
                        "هوامش",
                        "أعلى",
                        "يمين",
                        "أسفل",
                        "يسار",
                        "الأنماط",
                        "الطبقات",
                        "محاذاة",
                        "اليمين",
                        "الوسط",
                        "اليسار",
                        "--غير مضبوط--",
                        "Src",
                        "العنوان",
                        "العنوان البديل",
                        "الرابط",
                        "افتح الرابط في نافذة جديدة",
                        "الصورة",
                        "ملف",
                        "متقدم",
                        "خصائص الصورة",
                        "إلغاء",
                        "حسنا",
                        "متصفح الملفات",
                        "حدث خطأ في تحميل القائمة ",
                        "حدث خطأ في تحميل المجلدات",
                        "هل أنت واثق؟",
                        "أدخل اسم المجلد",
                        "إنشاء مجلد",
                        "أكتب إسم",
                        "إسقاط صورة",
                        "إسقاط الملف",
                        "أو أنقر",
                        "النص البديل",
                        "رفع",
                        "تصفح",
                        "الخلفية",
                        "نص",
                        "أعلى",
                        "الوسط",
                        "الأسفل",
                        "إدراج عمود قبل",
                        "إدراج عمود بعد",
                        "إدراج صف أعلى",
                        "إدراج صف أسفل",
                        "حذف الجدول",
                        "حذف الصف",
                        "حذف العمود",
                        "خلية فارغة",
                        "%d حرف",
                        "%d كلام",
                        "اضرب من خلال",
                        "أكد",
                        "حرف فوقي",
                        "مخطوطة",
                        "قطع الاختيار",
                        "اختر الكل",
                        "استراحة",
                        "البحث عن",
                        "استبدل ب",
                        "محل",
                        "معجون",
                        "اختر محتوى للصق",
                        "مصدر",
                        "بالخط العريض",
                        "مائل",
                        "شغل",
                        "صلة",
                        "إلغاء",
                        "كرر",
                        "طاولة",
                        "صورة",
                        "نظيف",
                        "فقرة",
                        "حجم الخط",
                        "فيديو",
                        "الخط",
                        "حول المحرر",
                        "طباعة",
                        "أكد",
                        "شطب",
                        "المسافة البادئة",
                        "نتوء",
                        "ملء الشاشة",
                        "الحجم التقليدي",
                        "الخط",
                        "قائمة",
                        "قائمة مرقمة",
                        "قطع",
                        "اختر الكل",
                        "قانون",
                        "فتح الرابط",
                        "تعديل الرابط",
                        "سمة Nofollow",
                        "إزالة الرابط",
                        "تحديث",
                        "لتحرير",
                        "مراجعة",
                        "URL",
                        "تحرير",
                        "محاذاة أفقية",
                        "فلتر",
                        "عن طريق التغيير",
                        "بالاسم",
                        "حسب الحجم",
                        "إضافة مجلد",
                        "إعادة",
                        "احتفظ",
                        "حفظ باسم",
                        "تغيير الحجم",
                        "حجم القطع",
                        "عرض",
                        "ارتفاع",
                        "حافظ على النسب",
                        "أن",
                        "لا",
                        "حذف",
                        "تميز",
                        "تميز %s",
                        "محاذاة عمودية",
                        "انشق، مزق",
                        "اذهب",
                        "أضف العمود",
                        "اضف سطر",
                        "رخصة %s",
                        "حذف",
                        "انقسام عمودي",
                        "تقسيم أفقي",
                        "الحدود",
                        "يشبه الكود الخاص بك HTML. تبقي كما HTML؟",
                        "الصق ك HTML",
                        "احتفظ",
                        "إدراج كنص",
                        "إدراج النص فقط",
                        "يمكنك فقط تحرير صورك الخاصة. تحميل هذه الصورة على المضيف؟",
                        "تم تحميل الصورة بنجاح على الخادم!",
                        "لوحة",
                        "لا توجد ملفات في هذا الدليل.",
                        "إعادة تسمية",
                        "أدخل اسم جديد",
                        "معاينة",
                        "تحميل",
                        "لصق من الحافظة",
                        "متصفحك لا يدعم إمكانية الوصول المباشر إلى الحافظة.",
                        "نسخ التحديد",
                        "نسخ",
                        "دائرة نصف قطرها الحدود",
                        "عرض كل",
                        "تطبيق",
                        "يرجى ملء هذا المجال",
                        "يرجى إدخال عنوان ويب",
                        "الافتراضي",
                        "دائرة",
                        "نقطة",
                        "المربعة",
                        "البحث",
                        "تجد السابقة",
                        "تجد التالي",
                        "للصق المحتوى قادم من Microsoft Word/Excel الوثيقة. هل تريد أن تبقي شكل أو تنظيفه ؟ ",
                        "كلمة لصق الكشف عن",
                        "نظيفة",
                        "أدخل اسم الفصل",
                        "اضغط البديل لتغيير حجم مخصص",
                    ];
                },
                61124(e) {
                    e.exports.default = [
                        "Napiš něco",
                        "O Jodit",
                        "Editor Jodit",
                        "Jodit Uživatelská příručka",
                        "obsahuje detailní nápovědu",
                        "Pro informace o licenci, prosím, přejděte na naši stránku:",
                        "Koupit plnou verzi",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Všechna práva vyhrazena.",
                        "Anchor",
                        "Otevřít v nové záložce",
                        "Otevřít v celoobrazovkovém režimu",
                        "Vyčistit formátování",
                        "Barva výplně a písma",
                        "Vpřed",
                        "Zpět",
                        "Tučné",
                        "Kurzíva",
                        "Odrážky",
                        "Číslovaný seznam",
                        "Zarovnat na střed",
                        "Zarovnat do bloku",
                        "Zarovnat vlevo",
                        "Zarovnat vpravo",
                        "Vložit horizontální linku",
                        "Vložit obrázek",
                        "Vložit soubor",
                        "Vložit video (YT/Vimeo)",
                        "Vložit odkaz",
                        "Velikost písma",
                        "Typ písma",
                        "Formátovat blok",
                        "Normální text",
                        "Nadpis 1",
                        "Nadpis 2",
                        "Nadpis 3",
                        "Nadpis 4",
                        "Citát",
                        "Kód",
                        "Vložit",
                        "Vložit tabulku",
                        "Zmenšit odsazení",
                        "Zvětšit odsazení",
                        "Vybrat speciální symbol",
                        "Vložit speciální symbol",
                        "Použít formát",
                        "Změnit mód",
                        "Okraje",
                        "horní",
                        "pravý",
                        "spodní",
                        "levý",
                        "Styly",
                        "Třídy",
                        "Zarovnání",
                        "Vpravo",
                        "Na střed",
                        "Vlevo",
                        "--nenastaveno--",
                        "src",
                        "Titulek",
                        "Alternativní text (alt)",
                        "Link",
                        "Otevřít link v nové záložce",
                        "Obrázek",
                        "soubor",
                        "Rozšířené",
                        "Vlastnosti obrázku",
                        "Zpět",
                        "Ok",
                        "Prohlížeč souborů",
                        "Chyba při načítání seznamu souborů",
                        "Chyba při načítání složek",
                        "Jste si jistý(á)?",
                        "Název složky",
                        "Vytvořit složku",
                        "název",
                        "Přetáhněte sem obrázek",
                        "Přetáhněte sem soubor",
                        "nebo klikněte",
                        "Alternativní text",
                        "Nahrát",
                        "Server",
                        "Pozadí",
                        "Text",
                        "Nahoru",
                        "Na střed",
                        "Dolu",
                        "Vložit sloupec před",
                        "Vložit sloupec za",
                        "Vložit řádek nad",
                        "Vložit řádek pod",
                        "Vymazat tabulku",
                        "Vymazat řádku",
                        "Vymazat sloupec",
                        "Vyčistit buňku",
                        "Znaky: %d",
                        "Slova: %d",
                        "Přeškrtnuto",
                        "Podtrženo",
                        "Horní index",
                        "Dolní index",
                        "Vyjmout označené",
                        "Označit vše",
                        "Zalomení",
                        "Najdi",
                        "Nahradit za",
                        "Vyměňte",
                        "Vložit",
                        "Vyber obsah pro vložení",
                        "HTML",
                        "tučně",
                        "kurzíva",
                        "štětec",
                        "odkaz",
                        "zpět",
                        "vpřed",
                        "tabulka",
                        "obrázek",
                        "guma",
                        "odstavec",
                        "velikost písma",
                        "video",
                        "písmo",
                        "о editoru",
                        "tisk",
                        "podtrženo",
                        "přeškrtnuto",
                        "zvětšit odsazení",
                        "zmenšit odsazení",
                        "celoobrazovkový režim",
                        "smrsknout",
                        "Linka",
                        "Odrážka",
                        "Číslovaný seznam",
                        "Vyjmout",
                        "Označit vše",
                        "Kód",
                        "Otevřít odkaz",
                        "Upravit odkaz",
                        "Atribut no-follow",
                        "Odstranit odkaz",
                        "Aktualizovat",
                        "Chcete-li upravit",
                        "Zobrazit",
                        "URL",
                        "Editovat",
                        "Horizontální zarovnání",
                        "Filtr",
                        "Dle poslední změny",
                        "Dle názvu",
                        "Dle velikosti",
                        "Přidat složku",
                        "Reset",
                        "Uložit",
                        "Uložit jako...",
                        "Změnit rozměr",
                        "Ořezat",
                        "Šířka",
                        "Výška",
                        "Ponechat poměr",
                        "Ano",
                        "Ne",
                        "Vyjmout",
                        "Označit",
                        "Označit %s",
                        "Vertikální zarovnání",
                        "Rozdělit",
                        "Spojit",
                        "Přidat sloupec",
                        "Přidat řádek",
                        "Licence: %s",
                        "Vymazat",
                        "Rozdělit vertikálně",
                        "Rozdělit horizontálně",
                        "Okraj",
                        "Váš text se podobá HTML. Vložit ho jako HTML?",
                        "Vložit jako HTML",
                        "Ponechat originál",
                        "Vložit jako TEXT",
                        "Vložit pouze TEXT",
                        "Můžete upravovat pouze své obrázky. Načíst obrázek?",
                        "Obrázek byl úspěšně nahrán!",
                        "paleta",
                        "V tomto adresáři nejsou žádné soubory.",
                        "přejmenovat",
                        "Zadejte nový název",
                        "náhled",
                        "Stažení",
                        "Vložit ze schránky",
                        "Váš prohlížeč nepodporuje přímý přístup do schránky.",
                        "Kopírovat výběr",
                        "kopírování",
                        "Border radius",
                        "Zobrazit všechny",
                        "Platí",
                        "Prosím, vyplňte toto pole",
                        "Prosím, zadejte webovou adresu",
                        "Výchozí",
                        "Kruh",
                        "Dot",
                        "Quadrate",
                        "Najít",
                        "Najít Předchozí",
                        "Najít Další",
                        "Obsah, který vkládáte, je pravděpodobně z Microsoft Word / Excel. Chcete ponechat formát nebo vložit pouze text?",
                        "Detekován fragment z Wordu nebo Excelu",
                        "Vyčistit",
                        "Vložte název třídy",
                        "Stiskněte Alt pro vlastní změnu velikosti",
                    ];
                },
                34554(e) {
                    e.exports.default = [
                        "Bitte geben Sie einen Text ein",
                        "Über Jodit",
                        "Jodit Editor",
                        "Das Jodit Benutzerhandbuch",
                        "beinhaltet ausführliche Informationen wie Sie den Editor verwenden können.",
                        "Für Informationen zur Lizenz, besuchen Sie bitte unsere Web-Präsenz:",
                        "Vollversion kaufen",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Alle Rechte vorbehalten.",
                        "Anker",
                        "In neuer Registerkarte öffnen",
                        "Editor in voller Größe öffnen",
                        "Formatierung löschen",
                        "Füllfarbe oder Textfarbe ändern",
                        "Wiederholen",
                        "Rückgängig machen",
                        "Fett",
                        "Kursiv",
                        "Unsortierte Liste einfügen",
                        "Nummerierte Liste einfügen",
                        "Mittig ausrichten",
                        "Blocksatz",
                        "Links ausrichten",
                        "Rechts ausrichten",
                        "Horizontale Linie einfügen",
                        "Bild einfügen",
                        "Datei einfügen",
                        "Youtube/vimeo Video einfügen",
                        "Link einfügen",
                        "Schriftgröße",
                        "Schriftfamilie",
                        "Formatblock einfügen",
                        "Normal",
                        "Überschrift 1",
                        "Überschrift 2",
                        "Überschrift 3",
                        "Überschrift 4",
                        "Zitat",
                        "Code",
                        "Einfügen",
                        "Tabelle einfügen",
                        "Einzug verkleinern",
                        "Einzug vergrößern",
                        "Sonderzeichen auswählen",
                        "Sonderzeichen einfügen",
                        "Format kopieren",
                        "Änderungsmodus",
                        "Ränder",
                        "Oben",
                        "Rechts",
                        "Unten",
                        "Links",
                        "CSS Stil",
                        "CSS Klassen",
                        "Ausrichtung",
                        "Rechts",
                        "Zentriert",
                        "Links",
                        "Keine",
                        "Pfad",
                        "Titel",
                        "Alternativer Text",
                        "Link",
                        "Link in neuem Tab öffnen",
                        "Bild",
                        "Datei",
                        "Fortgeschritten",
                        "Bildeigenschaften",
                        "Abbrechen",
                        "OK",
                        "Dateibrowser",
                        "Fehler beim Laden der Liste",
                        "Fehler beim Laden der Ordner",
                        "Sind Sie sicher?",
                        "Geben Sie den Verzeichnisnamen ein",
                        "Verzeichnis erstellen",
                        "Typname",
                        "Bild hier hinziehen",
                        "Datei löschen",
                        "oder hier klicken",
                        "Alternativtext",
                        "Hochladen",
                        "Auswählen",
                        "Hintergrund",
                        "Text",
                        "Oben",
                        "Mittig",
                        "Unten",
                        "Spalte davor einfügen",
                        "Spalte danach einfügen",
                        "Zeile oberhalb einfügen",
                        "Zeile unterhalb einfügen",
                        "Tabelle löschen",
                        "Zeile löschen",
                        "Spalte löschen",
                        "Zelle leeren",
                        "Zeichen: %d",
                        "Wörter: %d",
                        "Durchstreichen",
                        "Unterstreichen",
                        "Hochstellen",
                        "Tiefstellen",
                        "Auswahl ausschneiden",
                        "Alles markieren",
                        "Pause",
                        "Suche nach",
                        "Ersetzen durch",
                        "Ersetzen",
                        "Einfügen",
                        "Wählen Sie den Inhalt zum Einfügen aus",
                        "HTML",
                        "Fett gedruckt",
                        "Kursiv",
                        "Bürste",
                        "Verknüpfung",
                        "Rückgängig machen",
                        "Wiederholen",
                        "Tabelle",
                        "Bild",
                        "Radiergummi",
                        "Absatz",
                        "Schriftgröße",
                        "Video",
                        "Schriftart",
                        "Über",
                        "Drucken",
                        "Unterstreichen",
                        "Durchstreichen",
                        "Einzug",
                        "Herausstellen",
                        "Vollgröße",
                        "Schrumpfen",
                        "die Linie",
                        "Liste von",
                        "Nummerierte Liste",
                        "Schneiden",
                        "Wählen Sie Alle aus",
                        "Code einbetten",
                        "Link öffnen",
                        "Link bearbeiten",
                        "Nofollow-Attribut",
                        "Link entfernen",
                        "Aktualisieren",
                        "Bearbeiten",
                        "Ansehen",
                        "URL",
                        "Bearbeiten",
                        "Horizontale Ausrichtung",
                        "Filter",
                        "Sortieren nach geändert",
                        "Nach Name sortieren",
                        "Nach Größe sortiert",
                        "Ordner hinzufügen",
                        "Wiederherstellen",
                        "Speichern",
                        "Speichern als",
                        "Größe ändern",
                        "Größe anpassen",
                        "Breite",
                        "Höhe",
                        "Seitenverhältnis beibehalten",
                        "Ja",
                        "Nein",
                        "Entfernen",
                        "Markieren",
                        "Markieren: %s",
                        "Vertikale Ausrichtung",
                        "Unterteilen",
                        "Vereinen",
                        "Spalte hinzufügen",
                        "Zeile hinzufügen",
                        null,
                        "Löschen",
                        "Vertikal unterteilen",
                        "Horizontal unterteilen",
                        "Rand",
                        "Ihr Text ähnelt HTML-Code. Als HTML beibehalten?",
                        "Als HTML einfügen?",
                        "Original speichern",
                        "Als Text einfügen",
                        "Nur Text einfügen",
                        "Sie können nur Ihre eigenen Bilder bearbeiten. Dieses Bild auf den Host herunterladen?",
                        "Das Bild wurde erfolgreich auf den Server hochgeladen!",
                        "Palette",
                        "In diesem Verzeichnis befinden sich keine Dateien.",
                        "Umbenennen",
                        "Geben Sie einen neuen Namen ein",
                        "Vorschau",
                        "Herunterladen",
                        "Aus Zwischenablage einfügen",
                        "Ihr Browser unterstützt keinen direkten Zugriff auf die Zwischenablage.",
                        "Auswahl kopieren",
                        "Kopieren",
                        "Radius für abgerundete Ecken",
                        "Alle anzeigen",
                        "Anwenden",
                        "Bitte füllen Sie dieses Feld aus",
                        "Bitte geben Sie eine Web-Adresse ein",
                        "Standard",
                        "Kreis",
                        "Punkte",
                        "Quadrate",
                        "Suchen",
                        "Suche vorherige",
                        "Weitersuchen",
                        "Der Inhalt, den Sie einfügen, stammt aus einem Microsoft Word / Excel-Dokument. Möchten Sie das Format erhalten oder bereinigen?",
                        "In Word formatierter Text erkannt",
                        "Säubern",
                        "className (CSS) einfügen",
                        "Drücken Sie Alt für benutzerdefinierte Größenanpassung",
                    ];
                },
                57889(e) {
                    e.exports.default = {
                        "Type something": "Start writing...",
                        pencil: "Edit",
                        Quadrate: "Square",
                    };
                },
                88716(e) {
                    e.exports.default = [
                        "Escriba algo...",
                        "Acerca de Jodit",
                        "Jodit Editor",
                        "Guía de usuario Jodit",
                        "contiene ayuda detallada para el uso.",
                        "Para información sobre la licencia, por favor visite nuestro sitio:",
                        "Compre la versión completa",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Todos los derechos reservados.",
                        "Anclar",
                        "Abrir en nueva pestaña",
                        "Abrir editor en pantalla completa",
                        "Limpiar formato",
                        "Color de relleno o de letra",
                        "Rehacer",
                        "Deshacer",
                        "Negrita",
                        "Cursiva",
                        "Insertar lista no ordenada",
                        "Insertar lista ordenada",
                        "Alinear Centrado",
                        "Alinear Justificado",
                        "Alinear Izquierda",
                        "Alinear Derecha",
                        "Insertar línea horizontal",
                        "Insertar imagen",
                        "Insertar archivo",
                        "Insertar video de Youtube/vimeo",
                        "Insertar vínculo",
                        "Tamaño de letra",
                        "Familia de letra",
                        "Insertar bloque",
                        "Normal",
                        "Encabezado 1",
                        "Encabezado 2",
                        "Encabezado 3",
                        "Encabezado 4",
                        "Cita",
                        "Código",
                        "Insertar",
                        "Insertar tabla",
                        "Disminuir sangría",
                        "Aumentar sangría",
                        "Seleccionar caracter especial",
                        "Insertar caracter especial",
                        "Copiar formato",
                        "Cambiar modo",
                        "Márgenes",
                        "arriba",
                        "derecha",
                        "abajo",
                        "izquierda",
                        "Estilos CSS",
                        "Clases CSS",
                        "Alinear",
                        "Derecha",
                        "Centrado",
                        "Izquierda",
                        "--No Establecido--",
                        "Fuente",
                        "Título",
                        "Texto Alternativo",
                        "Vínculo",
                        "Abrir vínculo en nueva pestaña",
                        "Imagen",
                        "Archivo",
                        "Avanzado",
                        "Propiedades de imagen",
                        "Cancelar",
                        "Aceptar",
                        "Buscar archivo",
                        "Error al cargar la lista",
                        "Error al cargar las carpetas",
                        "¿Está seguro?",
                        "Entre nombre de carpeta",
                        "Crear carpeta",
                        "Entre el nombre",
                        "Soltar imagen",
                        "Soltar archivo",
                        "o click",
                        "Texto alternativo",
                        "Subir",
                        "Buscar",
                        "Fondo",
                        "Texto",
                        "Arriba",
                        "Centro",
                        "Abajo",
                        "Insertar columna antes",
                        "Interar columna después",
                        "Insertar fila arriba",
                        "Insertar fila debajo",
                        "Borrar tabla",
                        "Borrar fila",
                        "Borrar columna",
                        "Vaciar celda",
                        "Caracteres: %d",
                        "Palabras: %d",
                        "Tachado",
                        "Subrayado",
                        "superíndice",
                        "subíndice",
                        "Cortar selección",
                        "Seleccionar todo",
                        "Pausa",
                        "Buscar",
                        "Reemplazar con",
                        "Reemplazar",
                        "Pegar",
                        "Seleccionar contenido para pegar",
                        "HTML",
                        "negrita",
                        "cursiva",
                        "Brocha",
                        "Vínculo",
                        "deshacer",
                        "rehacer",
                        "Tabla",
                        "Imagen",
                        "Borrar",
                        "Párrafo",
                        "Tamaño de letra",
                        "Video",
                        "Letra",
                        "Acerca de",
                        "Imprimir",
                        "subrayar",
                        "tachar",
                        "sangría",
                        "quitar sangría",
                        "Tamaño completo",
                        "encoger",
                        "línea horizontal",
                        "lista sin ordenar",
                        "lista ordenada",
                        "Cortar",
                        "Seleccionar todo",
                        "Incluir código",
                        "Abrir vínculo",
                        "Editar vínculo",
                        "No seguir",
                        "Desvincular",
                        "Actualizar",
                        "Para editar",
                        "Ver",
                        "URL",
                        "Editar",
                        "Alineación horizontal",
                        "Filtrar",
                        "Ordenar por fecha modificación",
                        "Ordenar por nombre",
                        "Ordenar por tamaño",
                        "Agregar carpeta",
                        "Resetear",
                        "Guardar",
                        "Guardar como...",
                        "Redimensionar",
                        "Recortar",
                        "Ancho",
                        "Alto",
                        "Mantener relación de aspecto",
                        "Si",
                        "No",
                        "Quitar",
                        "Seleccionar",
                        "Seleccionar: %s",
                        "Alineación vertical",
                        "Dividir",
                        "Mezclar",
                        "Agregar columna",
                        "Agregar fila",
                        null,
                        "Borrar",
                        "Dividir vertical",
                        "Dividir horizontal",
                        "Borde",
                        "El código es similar a HTML. ¿Mantener como HTML?",
                        "Pegar como HTML?",
                        "Mantener",
                        "Insertar como texto",
                        "Insertar solo texto",
                        "Solo puedes editar tus propias imágenes. ¿Descargar esta imagen en el servidor?",
                        "¡La imagen se ha subido correctamente al servidor!",
                        "paleta",
                        "No hay archivos en este directorio.",
                        "renombrar",
                        "Ingresa un nuevo nombre",
                        "avance",
                        "Descargar",
                        "Pegar desde el portapapeles",
                        "Su navegador no soporta el acceso directo en el portapapeles.",
                        "Selección de copia",
                        "copia",
                        "Radio frontera",
                        "Mostrar todos los",
                        "Aplicar",
                        "Por favor, rellene este campo",
                        "Por favor, introduzca una dirección web",
                        "Predeterminado",
                        "Círculo",
                        "Punto",
                        "Cuadro",
                        "Encontrar",
                        "Buscar Anterior",
                        "Buscar Siguiente",
                        "El contenido pegado proviene de un documento de Microsoft Word/Excel. ¿Desea mantener el formato o limpiarlo?",
                        "Pegado desde Word detectado",
                        "Limpiar",
                        "Insertar nombre de clase",
                        "Presione Alt para cambiar el tamaño personalizado",
                    ];
                },
                72632(e) {
                    e.exports.default = [
                        "Ecrivez ici",
                        "A propos de Jodit",
                        "Editeur Jodit",
                        "Guide de l'utilisateur",
                        "Aide détaillée à l'utilisation",
                        "Consulter la licence sur notre site web:",
                        "Acheter la version complète",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Tous droits réservés.",
                        "Ancre",
                        "Ouvrir dans un nouvel onglet",
                        "Ouvrir l'éditeur en pleine page",
                        "Supprimer le formattage",
                        "Modifier la couleur du fond ou du texte",
                        "Refaire",
                        "Défaire",
                        "Gras",
                        "Italique",
                        "Liste non ordonnée",
                        "Liste ordonnée",
                        "Centrer",
                        "Justifier",
                        "Aligner à gauche ",
                        "Aligner à droite",
                        "Insérer une ligne horizontale",
                        "Insérer une image",
                        "Insérer un fichier",
                        "Insérer une vidéo",
                        "Insérer un lien",
                        "Taille des caractères",
                        "Famille des caractères",
                        "Bloc formatté",
                        "Normal",
                        "Titre 1",
                        "Titre 2",
                        "Titre 3",
                        "Titre 4",
                        "Citation",
                        "Code",
                        "Insérer",
                        "Insérer un tableau",
                        "Diminuer le retrait",
                        "Retrait plus",
                        "Sélectionnez un caractère spécial",
                        "Insérer un caractère spécial",
                        "Cloner le format",
                        "Mode wysiwyg <-> code html",
                        "Marges",
                        "haut",
                        "droite",
                        "Bas",
                        "gauche",
                        "Styles",
                        "Classes",
                        "Alignement",
                        "Droite",
                        "Centre",
                        "Gauche",
                        "--Non disponible--",
                        "Source",
                        "Titre",
                        "Alternative",
                        "Lien",
                        "Ouvrir le lien dans un nouvel onglet",
                        "Image",
                        "fichier",
                        "Avancé",
                        "Propriétés de l'image",
                        "Annuler",
                        "OK",
                        "Explorateur de fichiers",
                        "Erreur de liste de chargement",
                        "Erreur de dossier de chargement",
                        "Etes-vous sûrs ?",
                        "Entrer le nom de dossier",
                        "Créer un dossier",
                        "type de fichier",
                        "Coller une image",
                        "Déposer un fichier",
                        "ou cliquer",
                        "Texte de remplacemement",
                        "Charger",
                        "Chercher",
                        "Arrière-plan",
                        "Texte",
                        "Haut",
                        "Milieu",
                        "Bas",
                        "Insérer une colonne avant",
                        "Insérer une colonne après",
                        "Insérer une ligne au dessus",
                        "Insérer une ligne en dessous",
                        "Supprimer le tableau",
                        "Supprimer la ligne",
                        "Supprimer la colonne",
                        "Vider la cellule",
                        "Symboles: %d",
                        "Mots: %d",
                        "Barrer",
                        "Souligner",
                        "exposant",
                        "indice",
                        "Couper la sélection",
                        "Tout sélectionner",
                        "Pause",
                        "Rechercher",
                        "Remplacer par",
                        "Remplacer",
                        "Coller",
                        "Choisissez le contenu à coller",
                        "la source",
                        "gras",
                        "italique",
                        "pinceau",
                        "lien",
                        "annuler",
                        "refaire",
                        "tableau",
                        "image",
                        "gomme",
                        "clause",
                        "taille de police",
                        "Video",
                        "police",
                        "à propos de l'éditeur",
                        "impression",
                        "souligné",
                        "barré",
                        "indentation",
                        "retrait",
                        "taille réelle",
                        "taille conventionnelle",
                        "la ligne",
                        "Liste",
                        "Liste numérotée",
                        "Couper",
                        "Sélectionner tout",
                        null,
                        "Ouvrir le lien",
                        "Modifier le lien",
                        "Attribut Nofollow",
                        "Supprimer le lien",
                        "Mettre à jour",
                        "Pour éditer",
                        "Voir",
                        "URL",
                        null,
                        "Alignement horizontal",
                        "Filtre",
                        "Trier par modification",
                        "Trier par nom",
                        "Trier par taille",
                        "Créer le dossier",
                        "Restaurer",
                        "Sauvegarder",
                        "Enregistrer sous",
                        "Changer la taille",
                        "Taille de garniture",
                        "Largeur",
                        "Hauteur",
                        "Garder les proportions",
                        "Oui",
                        "Non",
                        "Supprimer",
                        "Mettre en évidence",
                        "Mettre en évidence: %s",
                        "Alignement vertical",
                        "Split",
                        "aller",
                        "Ajouter une colonne",
                        "Ajouter une rangée",
                        null,
                        "Effacer",
                        "Split vertical",
                        "Split horizontal",
                        "Bordure",
                        "Votre texte que vous essayez de coller est similaire au HTML. Collez-le en HTML?",
                        "Coller en HTML?",
                        "Sauvegarder l'original",
                        "Coller en tant que texte",
                        "Coller le texte seulement",
                        "Vous ne pouvez éditer que vos propres images. Téléchargez cette image sur l'hôte?",
                        "L'image a été téléchargée avec succès sur le serveur!",
                        "Palette",
                        "Il n'y a aucun fichier dans ce répertoire.",
                        "renommer",
                        "Entrez un nouveau nom",
                        "Aperçu",
                        "Télécharger",
                        "Coller à partir du presse-papiers",
                        "Votre navigateur ne prend pas en charge l'accès direct au presse-papiers.",
                        "Copier la sélection",
                        "copie",
                        "Rayon des bordures",
                        "Afficher tous",
                        "Appliquer",
                        "Veuillez remplir ce champ",
                        "Veuillez entrer une adresse web",
                        "Par défaut",
                        "Cercle",
                        "Point",
                        "Quadratique",
                        "Trouver",
                        "Précédent",
                        "Suivant",
                        "Le contenu que vous insérez provient d'un document Microsoft Word / Excel. Voulez-vous enregistrer le format ou l'effacer?",
                        "C'est peut-être un fragment de Word ou Excel",
                        "Nettoyer",
                        "Insérer un nom de classe",
                        "Appuyez sur Alt pour un redimensionnement personnalisé",
                    ];
                },
                46524(e) {
                    e.exports.default = [
                        "הקלד משהו...",
                        "About Jodit",
                        "Jodit Editor",
                        "Jodit User's Guide",
                        "contains detailed help for using.",
                        "For information about the license, please go to our website:",
                        "Buy full version",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.",
                        "מקום עיגון",
                        "פתח בכרטיסיה חדשה",
                        "פתח את העורך בחלון חדש",
                        "נקה עיצוב",
                        "שנה צבע טקסט או רקע",
                        "בצע שוב",
                        "בטל",
                        "מודגש",
                        "נטוי",
                        "הכנס רשימת תבליטים",
                        "הכנס רשימה ממוספרת",
                        "מרכז",
                        "ישר ",
                        "ישר לשמאל",
                        "ישר לימין",
                        "הכנס קו אופקי",
                        "הכנס תמונה",
                        "הכנס קובץ",
                        "הכנס סרטון וידאו מYouTube/Vimeo",
                        "הכנס קישור",
                        "גודל גופן",
                        "גופן",
                        "מעוצב מראש",
                        "רגיל",
                        "כותרת 1",
                        "כותרת 2",
                        "כותרת 3",
                        "כותרת 4",
                        "ציטוט",
                        "קוד",
                        "הכנס",
                        "הכנס טבלה",
                        "הקטן כניסה",
                        "הגדל כניסה",
                        "בחר תו מיוחד",
                        "הכנס תו מיוחד",
                        "העתק עיצוב",
                        "החלף מצב",
                        "ריווח",
                        "עליון",
                        "ימין",
                        "תחתון",
                        "שמאל",
                        "עיצוב CSS",
                        "מחלקת CSS",
                        "יישור",
                        "ימין",
                        "מרכז",
                        "שמאל",
                        "--לא נקבע--",
                        "מקור",
                        "כותרת",
                        "כיתוב חלופי",
                        "קישור",
                        "פתח בכרטיסיה חדשה",
                        "תמונה",
                        "קובץ",
                        "מתקדם",
                        "מאפייני תמונה",
                        "ביטול",
                        "אישור",
                        "סייר הקבצים",
                        "שגיאה  בזמן טעינת רשימה",
                        "שגיאה בזמן טעינת תקיות",
                        "האם אתה בטוח?",
                        "הכנס שם תקיה",
                        "צור תקיה",
                        "סוג הקובץ",
                        "הסר תמונה",
                        "הסר קובץ",
                        "או לחץ",
                        "כיתוב חלופי",
                        "העלה",
                        "סייר",
                        "רקע",
                        "טקסט",
                        "עליון",
                        "מרכז",
                        "תחתון",
                        "הכנס עמודה לפני",
                        "הכנס עמודה אחרי",
                        "הכנס שורה מעל",
                        "הכנס שורה מתחת",
                        "מחק טבלה",
                        "מחק שורה",
                        "מחק עמודה",
                        "רוקן תא",
                        "תווים: %d",
                        "מילים: %d",
                        "קו חוצה",
                        "קו תחתון",
                        "superscript",
                        "subscript",
                        "גזור בחירה",
                        "בחר הכל",
                        "שבירת שורה",
                        "חפש",
                        "החלף ב",
                        "להחליף",
                        "הדבק",
                        "בחר תוכן להדבקה",
                        "HTML",
                        "מודגש",
                        "נטוי",
                        "מברשת",
                        "קישור",
                        "בטל",
                        "בצע שוב",
                        "טבלה",
                        "תמונה",
                        "מחק",
                        "פסקה",
                        "גודל גופן",
                        "וידאו",
                        "גופן",
                        "עלינו",
                        "הדפס",
                        "קו תחתון",
                        "קו חוצה",
                        "הגדל כניסה",
                        "הקטן כניסה",
                        "גודל מלא",
                        "כווץ",
                        "קו אופקי",
                        "רשימת תבליטים",
                        "רשימה ממוספרת",
                        "חתוך",
                        "בחר הכל",
                        "הוסף קוד",
                        "פתח קישור",
                        "ערוך קישור",
                        "ללא מעקב",
                        "בטל קישור",
                        "עדכן",
                        "כדי לערוך",
                        "הצג",
                        "כתובת",
                        "ערוך",
                        "יישור אופקי",
                        "סנן",
                        "מין לפי שינוי",
                        "מיין לפי שם",
                        "מיין לפי גודל",
                        "הוסף תקייה",
                        "אפס",
                        "שמור",
                        "שמור בשם...",
                        "שנה גודל",
                        "חתוך",
                        "רוחב",
                        "גובה",
                        "שמור יחס",
                        "כן",
                        "לא",
                        "הסר",
                        "בחר",
                        "נבחר: %s",
                        "יישור אנכי",
                        "פיצול",
                        "מזג",
                        "הוסף עמודה",
                        "הוסף שורה",
                        null,
                        "מחק",
                        "פיצול אנכי",
                        "פיצול אופקי",
                        "מסגרת",
                        "הקוד דומה לHTML, האם להשאיר כHTML",
                        "הדבק כHTML",
                        "השאר",
                        "הכנס כטקסט",
                        "הכנס טקסט בלבד",
                        "רק קבצים המשוייכים שלך ניתנים לעריכה. האם להוריד את הקובץ?",
                        "התמונה עלתה בהצלחה!",
                        "לוח",
                        "אין קבצים בספריה זו.",
                        "הונגרית",
                        "הזן שם חדש",
                        "תצוגה מקדימה",
                        "הורד",
                        "להדביק מהלוח",
                        "הדפדפן שלך לא תומך גישה ישירה ללוח.",
                        "העתק בחירה",
                        "העתק",
                        "רדיוס הגבול",
                        "הצג את כל",
                        "החל",
                        "נא למלא שדה זה",
                        "אנא הזן כתובת אינטרנט",
                        "ברירת המחדל",
                        "מעגל",
                        "נקודה",
                        "הריבוע הזה",
                        "למצוא",
                        "מצא את הקודם",
                        "חפש את הבא",
                        "התוכן המודבק מגיע ממסמך וורד/אקסל. האם ברצונך להשאיר את העיצוב או לנקותו",
                        'זוהתה הדבקה מ"וורד"',
                        "נקה",
                        "הכנס את שם הכיתה",
                        "לחץ על אלט לשינוי גודל מותאם אישית",
                    ];
                },
                32920(e) {
                    e.exports.default = [
                        "Írjon be valamit",
                        "Joditról",
                        "Jodit Editor",
                        "Jodit útmutató",
                        "további segítséget tartalmaz",
                        "További licence információkért látogassa meg a weboldalunkat:",
                        "Teljes verzió megvásárlása",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Minden jog fenntartva.",
                        "Horgony",
                        "Megnyitás új lapon",
                        "Megnyitás teljes méretben",
                        "Formázás törlése",
                        "Háttér/szöveg szín",
                        "Újra",
                        "Visszavon",
                        "Félkövér",
                        "Dőlt",
                        "Pontozott lista",
                        "Számozott lista",
                        "Középre zárt",
                        "Sorkizárt",
                        "Balra zárt",
                        "Jobbra zárt",
                        "Vízszintes vonal beszúrása",
                        "Kép beszúrás",
                        "Fájl beszúrás",
                        "Youtube videó beszúrása",
                        "Link beszúrás",
                        "Betűméret",
                        "Betűtípus",
                        "Formázott blokk beszúrása",
                        "Normál",
                        "Fejléc 1",
                        "Fejléc 2",
                        "Fejléc 3",
                        "Fejléc 4",
                        "Idézet",
                        "Kód",
                        "Beszúr",
                        "Táblázat beszúrása",
                        "Behúzás csökkentése",
                        "Behúzás növelése",
                        "Speciális karakter kiválasztása",
                        "Speciális karakter beszúrása",
                        "Kép formázása",
                        "Nézet váltása",
                        "Szegélyek",
                        "felső",
                        "jobb",
                        "alsó",
                        "bal",
                        "CSS stílusok",
                        "CSS osztályok",
                        "Igazítás",
                        "Jobbra",
                        "Középre",
                        "Balra",
                        "Nincs",
                        "Forrás",
                        "Cím",
                        "Helyettesítő szöveg",
                        "Link",
                        "Link megnyitása új lapon",
                        "Kép",
                        "Fájl",
                        "Haladó",
                        "Kép tulajdonságai",
                        "Mégsem",
                        "OK",
                        "Fájl tallózó",
                        "Hiba a lista betöltése közben",
                        "Hiba a mappák betöltése közben",
                        "Biztosan ezt szeretné?",
                        "Írjon be egy mappanevet",
                        "Mappa létrehozása",
                        "írjon be bevet",
                        "Húzza ide a képet",
                        "Húzza ide a fájlt",
                        "vagy kattintson",
                        "Helyettesítő szöveg",
                        "Feltölt",
                        "Tallóz",
                        "Háttér",
                        "Szöveg",
                        "Fent",
                        "Középen",
                        "Lent",
                        "Oszlop beszúrás elé",
                        "Oszlop beszúrás utána",
                        "Sor beszúrás fölé",
                        "Sor beszúrás alá",
                        "Táblázat törlése",
                        "Sor törlése",
                        "Oszlop törlése",
                        "Cella tartalmának törlése",
                        "Karakterek száma: %d",
                        "Szavak száma: %d",
                        "Áthúzott",
                        "Aláhúzott",
                        "Felső index",
                        "Alsó index",
                        "Kivágás",
                        "Összes kijelölése",
                        "Szünet",
                        "Keresés",
                        "Csere erre",
                        "Cserélje ki",
                        "Beillesztés",
                        "Válasszon tartalmat a beillesztéshez",
                        "HTML",
                        "Félkövér",
                        "Dőlt",
                        "Ecset",
                        "Link",
                        "Visszavon",
                        "Újra",
                        "Táblázat",
                        "Kép",
                        "Törlés",
                        "Paragráfus",
                        "Betűméret",
                        "Videó",
                        "Betű",
                        "Rólunk",
                        "Nyomtat",
                        "Aláhúzott",
                        "Áthúzott",
                        "Behúzás",
                        "Aussenseiter",
                        "Teljes méret",
                        "Összenyom",
                        "Egyenes vonal",
                        "Lista",
                        "Számozott lista",
                        "Kivág",
                        "Összes kijelölése",
                        "Beágyazott kód",
                        "Link megnyitása",
                        "Link szerkesztése",
                        "Nincs követés",
                        "Link leválasztása",
                        "Frissít",
                        "Szerkesztés",
                        "felülvizsgálat",
                        "URL",
                        "Szerkeszt",
                        "Vízszintes igazítás",
                        "Szűrő",
                        "Rendezés módosítás szerint",
                        "Rendezés név szerint",
                        "Rendezés méret szerint",
                        "Mappa hozzáadás",
                        "Visszaállít",
                        "Mentés",
                        "Mentés másként...",
                        "Átméretezés",
                        "Kivág",
                        "Szélesség",
                        "Magasság",
                        "Képarány megtartása",
                        "Igen",
                        "Nem",
                        "Eltávolít",
                        "Kijelöl",
                        "Kijelöl: %s",
                        "Függőleges igazítás",
                        "Felosztás",
                        "Összevonás",
                        "Oszlop hozzáadás",
                        "Sor hozzáadás",
                        null,
                        "Törlés",
                        "Függőleges felosztás",
                        "Vízszintes felosztás",
                        "Szegély",
                        "A beillesztett szöveg HTML-nek tűnik. Megtartsuk HTML-ként?",
                        "Beszúrás HTML-ként",
                        "Megtartás",
                        "Beszúrás szövegként",
                        "Csak szöveg beillesztése",
                        "Csak a saját képeit tudja szerkeszteni. Letölti ezt a képet?",
                        "Kép sikeresen feltöltve!",
                        "Palette",
                        "Er zijn geen bestanden in deze map.",
                        "átnevezés",
                        "Adja meg az új nevet",
                        "előnézet",
                        "Letöltés",
                        "Illessze be a vágólap",
                        "A böngésző nem támogatja a közvetlen hozzáférést biztosít a vágólapra.",
                        "Másolás kiválasztása",
                        "másolás",
                        "Határ sugár",
                        "Összes",
                        "Alkalmazni",
                        "Kérjük, töltse ki ezt a mezőt,",
                        "Kérjük, írja be a webcímet",
                        "Alapértelmezett",
                        "Kör",
                        "Pont",
                        "Quadrate",
                        "Találni",
                        "Megtalálja Előző",
                        "Következő Keresése",
                        "A beillesztett tartalom Microsoft Word/Excel dokumentumból származik. Meg szeretné tartani a formátumát?",
                        "Word-ből másolt szöveg",
                        "Elvetés",
                        "Helyezze be az osztály nevét",
                        "Nyomja meg az Alt egyéni átméretezés",
                    ];
                },
                53946(e) {
                    e.exports.default = [
                        "Ketik sesuatu",
                        "Tentang Jodit",
                        "Editor Jodit",
                        "Panduan Pengguna Jodit",
                        "mencakup detail bantuan penggunaan",
                        "Untuk informasi tentang lisensi, silakan kunjungi website:",
                        "Beli versi lengkap",
                        "Hak Cipta © XDSoft.net - Chupurnov Valeriy. Hak cipta dilindungi undang-undang.",
                        "Tautan",
                        "Buka di tab baru",
                        "Buka editor dalam ukuran penuh",
                        "Hapus Pemformatan",
                        "Isi warna atau atur warna teks",
                        "Ulangi",
                        "Batalkan",
                        "Tebal",
                        "Miring",
                        "Sisipkan Daftar Tidak Berurut",
                        "Sisipkan Daftar Berurut",
                        "Tengah",
                        "Penuh",
                        "Kiri",
                        "Kanan",
                        "Sisipkan Garis Horizontal",
                        "Sisipkan Gambar",
                        "Sisipkan Berkas",
                        "Sisipkan video youtube/vimeo",
                        "Sisipkan tautan",
                        "Ukuran font",
                        "Keluarga font",
                        "Sisipkan blok format",
                        "Normal",
                        "Heading 1",
                        "Heading 2",
                        "Heading 3",
                        "Heading 4",
                        "Kutip",
                        "Kode",
                        "Sisipkan",
                        "Sisipkan tabel",
                        "Kurangi Indentasi",
                        "Tambah Indentasi",
                        "Pilih Karakter Spesial",
                        "Sisipkan Karakter Spesial",
                        "Formar warna",
                        "Ubah mode",
                        "Batas",
                        "atas",
                        "kanan",
                        "bawah",
                        "kiri",
                        "Gaya",
                        "Class",
                        "Rata",
                        "Kanan",
                        "Tengah",
                        "Kiri",
                        "--Tidak diset--",
                        "Src",
                        "Judul",
                        "Teks alternatif",
                        "Tautan",
                        "Buka tautan di tab baru",
                        "Gambar",
                        "berkas",
                        "Lanjutan",
                        "Properti gambar",
                        "Batal",
                        "Ya",
                        "Penjelajah Berkas",
                        "Error ketika memuat list",
                        "Error ketika memuat folder",
                        "Apakah Anda yakin?",
                        "Masukkan nama Direktori",
                        "Buat direktori",
                        "ketik nama",
                        "Letakkan gambar",
                        "Letakkan berkas",
                        "atau klik",
                        "Teks alternatif",
                        "Unggah",
                        "Jelajahi",
                        "Latar Belakang",
                        "Teks",
                        "Atas",
                        "Tengah",
                        "Bawah",
                        "Sisipkan kolom sebelumnya",
                        "Sisipkan kolom setelahnya",
                        "Sisipkan baris di atasnya",
                        "Sisipkan baris di bawahnya",
                        "Hapus tabel",
                        "Hapus baris",
                        "Hapus kolom",
                        "Kosongkan cell",
                        "Karakter: %d",
                        "Kata: %d",
                        "Coret",
                        "Garis Bawah",
                        "Superskrip",
                        "Subskrip",
                        "Potong pilihan",
                        "Pilih semua",
                        "Berhenti",
                        "Mencari",
                        "Ganti dengan",
                        "Mengganti",
                        "Paste",
                        "Pilih konten untuk dipaste",
                        "sumber",
                        "tebal",
                        "miring",
                        "sikat",
                        "tautan",
                        "batalkan",
                        "ulangi",
                        "tabel",
                        "gambar",
                        "penghapus",
                        "paragraf",
                        "ukuran font",
                        "video",
                        "font",
                        "tentang",
                        "cetak",
                        "garis bawah",
                        "coret",
                        "menjorok ke dalam",
                        "menjorok ke luar",
                        "ukuran penuh",
                        "menyusut",
                        "hr",
                        "ul",
                        "ol",
                        "potong",
                        "Pilih semua",
                        "Kode embed",
                        "Buka tautan",
                        "Edit tautan",
                        "No follow",
                        "Hapus tautan",
                        "Perbarui",
                        "pensil",
                        "Mata",
                        "URL",
                        "Edit",
                        "Perataan horizontal",
                        "Filter",
                        "Urutkan berdasarkan perubahan",
                        "Urutkan berdasarkan nama",
                        "Urutkan berdasarkan ukuran",
                        "Tambah folder",
                        "Reset",
                        "Simpan",
                        "Simpan sebagai...",
                        "Ubah ukuran",
                        "Crop",
                        "Lebar",
                        "Tinggi",
                        "Jaga aspek rasio",
                        "Ya",
                        "Tidak",
                        "Copot",
                        "Pilih",
                        "Pilih %s",
                        "Rata vertikal",
                        "Bagi",
                        "Gabungkan",
                        "Tambah kolom",
                        "tambah baris",
                        "Lisensi: %s",
                        "Hapus",
                        "Bagi secara vertikal",
                        "Bagi secara horizontal",
                        "Bingkai",
                        "Kode Anda cenderung ke HTML. Biarkan sebagai HTML?",
                        "Paste sebagai HTML",
                        "Jaga",
                        "Sisipkan sebagai teks",
                        "Sisipkan hanya teks",
                        "Anda hanya dapat mengedit gambar Anda sendiri. Unduh gambar ini di host?",
                        "Gambar telah sukses diunggah ke host!",
                        "palet",
                        "Tidak ada berkas",
                        "ganti nama",
                        "Masukkan nama baru",
                        "pratinjau",
                        "Unduh",
                        "Paste dari clipboard",
                        "Browser anda tidak mendukung akses langsung ke clipboard.",
                        "Copy seleksi",
                        "copy",
                        "Border radius",
                        "Tampilkan semua",
                        "Menerapkan",
                        "Silahkan mengisi kolom ini",
                        "Silahkan masukkan alamat web",
                        "Default",
                        "Lingkaran",
                        "Dot",
                        "Kuadrat",
                        "Menemukan",
                        "Menemukan Sebelumnya",
                        "Menemukan Berikutnya",
                        "Konten dipaste dari dokumen Microsoft Word/Excel. Apakah Anda ingin tetap menjaga format atau membersihkannya?",
                        "Terdeteksi paste dari Word",
                        "Bersih",
                        "Masukkan nama kelas",
                        "Tekan Alt untuk mengubah ukuran kustom",
                    ];
                },
                90069(e) {
                    e.exports.default = [
                        "Scrivi qualcosa...",
                        "A proposito di Jodit",
                        "Jodit Editor",
                        "Guida utente di Jodit",
                        "contiene una guida dettagliata per l'uso.",
                        "Per informazioni sulla licenza, si prega di visitare il nostro sito:",
                        "Acquista la versione completa",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Alle Rechte vorbehalten.",
                        "Ancora",
                        "Apri in una nuova scheda",
                        "Apri l'editor a schermo intero",
                        "Formato chiaro",
                        "Riempi colore o lettera",
                        "Ripristina",
                        "Annulla",
                        "Grassetto",
                        "Corsivo",
                        "Inserisci lista non ordinata",
                        "Inserisci l'elenco ordinato",
                        "Allinea Centra",
                        "Allineare Giustificato",
                        "Allinea a Sinistra",
                        "Allinea a Destra",
                        "Inserisci la linea orizzontale",
                        "Inserisci immagine",
                        "Inserisci un file",
                        "Inserisci video Youtube/Vimeo",
                        "Inserisci il link",
                        "Dimensione del carattere",
                        "Tipo di font",
                        "Inserisci blocco",
                        "Normale",
                        "Heading 1",
                        "Heading 2",
                        "Heading 3",
                        "Heading 4",
                        "Citazione",
                        "Codice",
                        "Inserisci",
                        "Inserisci tabella",
                        "Riduci il rientro",
                        "Aumenta il rientro",
                        "Seleziona una funzione speciale",
                        "Inserisci un carattere speciale",
                        "Copia formato",
                        "Cambia modo",
                        "Margini",
                        "su",
                        "destra",
                        "giù",
                        "sinistra",
                        "Stili CSS",
                        "Classi CSS",
                        "Allinea",
                        "Destra",
                        "Centro",
                        "Sinistra",
                        "--Non Impostato--",
                        "Fonte",
                        "Titolo",
                        "Testo Alternativo",
                        "Link",
                        "Apri il link in una nuova scheda",
                        "Immagine",
                        "Archivio",
                        "Avanzato",
                        "Proprietà dell'immagine",
                        "Annulla",
                        "Accetta",
                        "Cerca il file",
                        "Errore durante il caricamento dell'elenco",
                        "Errore durante il caricamento delle cartelle",
                        "Sei sicuro?",
                        "Inserisci il nome della cartella",
                        "Crea cartella",
                        "Entre el nombre",
                        "Rilascia l'immagine",
                        "Rilascia file",
                        "o click",
                        "Testo alternativo",
                        "Carica",
                        "Sfoglia",
                        "Sfondo",
                        "Testo",
                        "Su",
                        "Centro",
                        "Sotto",
                        "Inserisci prima la colonna",
                        "Inserisci colonna dopo",
                        "Inserisci la riga sopra",
                        "Inserisci la riga sotto",
                        "Elimina tabella",
                        "Elimina riga",
                        "Elimina colonna",
                        "Cella vuota",
                        "Caratteri: %d",
                        "Parole: %d",
                        "Barrato",
                        "Sottolineato",
                        "indice",
                        "deponente",
                        "Taglia la selezione",
                        "Seleziona tutto",
                        "Pausa",
                        "Cerca",
                        "Sostituisci con",
                        "Sostituire",
                        "Incolla",
                        "Seleziona il contenuto da incollare",
                        "HTML",
                        "Grassetto",
                        "Corsivo",
                        "Pennello",
                        "Link",
                        "Annulla",
                        "Ripristina",
                        "Tabella",
                        "Immagine",
                        "Gomma",
                        "Paragrafo",
                        "Dimensione del carattere",
                        "Video",
                        "Font",
                        "Approposito di",
                        "Stampa",
                        "Sottolineato",
                        "Barrato",
                        "trattino",
                        "annulla rientro",
                        "A grandezza normale",
                        "comprimere",
                        "linea orizzontale",
                        "lista non ordinata",
                        "lista ordinata",
                        "Taglia",
                        "Seleziona tutto",
                        "Includi codice",
                        "Apri link",
                        "Modifica link",
                        "Non seguire",
                        "Togli link",
                        "Aggiornare",
                        "Per modificare",
                        "Recensione",
                        " URL",
                        "Modifica",
                        "Allineamento orizzontale",
                        "Filtro",
                        "Ordina per data di modifica",
                        "Ordina per nome",
                        "Ordina per dimensione",
                        "Aggiungi cartella",
                        "Reset",
                        "Salva",
                        "Salva con nome...",
                        "Ridimensiona",
                        "Tagliare",
                        "Larghezza",
                        "Altezza",
                        "Mantenere le proporzioni",
                        "Si",
                        "No",
                        "Rimuovere",
                        "Seleziona",
                        "Seleziona: %s",
                        "Allineamento verticala",
                        "Dividere",
                        "Fondi",
                        "Aggiungi colonna",
                        "Aggiungi riga",
                        null,
                        "Cancella",
                        "Dividere verticalmente",
                        "Diviso orizzontale",
                        "Bordo",
                        "Il codice è simile all'HTML. Mantieni come HTML?",
                        "Incolla come HTML?",
                        "Mantieni",
                        "Inserisci come testo",
                        "Inserisci solo il testo",
                        "Puoi modificare solo le tue immagini. Scarica questa immagine sul server?",
                        "L'immagine è stata caricata con successo sul server!",
                        "tavolozza",
                        "Non ci sono file in questa directory.",
                        "ungherese",
                        "Inserisci un nuovo nome",
                        "anteprima",
                        "Scaricare",
                        "Incolla dagli appunti",
                        "Il tuo browser non supporta l'accesso diretto agli appunti.",
                        "Selezione di copia",
                        "copia",
                        "Border radius",
                        "Mostra tutti",
                        "Applicare",
                        "Si prega di compilare questo campo",
                        "Si prega di inserire un indirizzo web",
                        "Di Default",
                        "Cerchio",
                        "Dot",
                        "Quadrate",
                        "Trovare",
                        "Trova Precedente",
                        "Trova Successivo",
                        "Il contenuto incollato proviene da un documento Microsoft Word / Excel. Vuoi mantenere il formato o pulirlo?",
                        "Incollato da Word rilevato",
                        "Pulisci",
                        "Inserisci il nome della classe",
                        "Premere Alt per il ridimensionamento personalizzato",
                    ];
                },
                53283(e) {
                    e.exports.default = [
                        "なにかタイプしてください",
                        "Joditについて",
                        "Jodit Editor",
                        "Jodit ユーザーズ・ガイド",
                        "詳しい使い方",
                        "ライセンス詳細についてはJodit Webサイトを確認ください：",
                        "フルバージョンを購入",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.",
                        "Anchor",
                        "新しいタブで開く",
                        "エディターのサイズ（フル/ノーマル）",
                        "書式をクリア",
                        "テキストの色",
                        "やり直し",
                        "元に戻す",
                        "太字",
                        "斜体",
                        "箇条書き",
                        "番号付きリスト",
                        "中央揃え",
                        "両端揃え",
                        "左揃え",
                        "右揃え",
                        "区切り線を挿入",
                        "画像を挿入",
                        "ファイルを挿入",
                        "Youtube/Vimeo 動画",
                        "リンクを挿入",
                        "フォントサイズ",
                        "フォント",
                        "テキストのスタイル",
                        "指定なし",
                        "タイトル1",
                        "タイトル2",
                        "タイトル3",
                        "タイトル4",
                        "引用",
                        "コード",
                        "挿入",
                        "表を挿入",
                        "インデント減",
                        "インデント増",
                        "特殊文字を選択",
                        "特殊文字を挿入",
                        "書式を貼付け",
                        "編集モード切替え",
                        "マージン",
                        "上",
                        "右",
                        "下",
                        "左",
                        "スタイル",
                        "クラス",
                        "配置",
                        "右寄せ",
                        "中央寄せ",
                        "左寄せ",
                        "指定なし",
                        "ソース",
                        "タイトル",
                        "代替テキスト",
                        "リンク",
                        "新しいタブで開く",
                        "画像",
                        "ファイル",
                        "高度な設定",
                        "画像のプロパティー",
                        "キャンセル",
                        "確定",
                        "File Browser",
                        "Error on load list",
                        "Error on load folders",
                        "Are you sure?",
                        "Enter Directory name",
                        "Create directory",
                        "type name",
                        "ここに画像をドロップ",
                        "ここにファイルをドロップ",
                        "or クリック",
                        "代替テキスト",
                        "アップロード",
                        "ブラウズ",
                        "背景",
                        "文字",
                        "上",
                        "中央",
                        "下",
                        "左に列を挿入",
                        "右に列を挿入",
                        "上に行を挿入",
                        "下に行を挿入",
                        "表を削除",
                        "行を削除",
                        "列を削除",
                        "セルを空にする",
                        "文字数: %d",
                        "単語数: %d",
                        "取り消し線",
                        "下線",
                        "上付き文字",
                        "下付き文字",
                        "切り取り",
                        "すべて選択",
                        "Pause",
                        "検索",
                        "置換",
                        "交換",
                        "貼付け",
                        "選択した内容を貼付け",
                        "source",
                        "bold",
                        "italic",
                        "brush",
                        "link",
                        "undo",
                        "redo",
                        "table",
                        "image",
                        "eraser",
                        "paragraph",
                        "fontsize",
                        "video",
                        "font",
                        "about",
                        "print",
                        "underline",
                        "strikethrough",
                        "indent",
                        "outdent",
                        "fullsize",
                        "shrink",
                        "分割線",
                        "箇条書き",
                        "番号付きリスト",
                        "切り取り",
                        "すべて選択",
                        "埋め込みコード",
                        "リンクを開く",
                        "リンクを編集",
                        "No follow",
                        "リンク解除",
                        "更新",
                        "鉛筆",
                        "サイトを確認",
                        "URL",
                        "編集",
                        "水平方向の配置",
                        "Filter",
                        "Sort by changed",
                        "Sort by name",
                        "Sort by size",
                        "Add folder",
                        "リセット",
                        "保存",
                        "Save as ...",
                        "リサイズ",
                        "Crop",
                        "幅",
                        "高さ",
                        "縦横比を保持",
                        "はい",
                        "いいえ",
                        "移除",
                        "選択",
                        "選択: %s",
                        "垂直方向の配置",
                        "分割",
                        "セルの結合",
                        "列を追加",
                        "行を追加",
                        null,
                        "削除",
                        "セルの分割（垂直方向）",
                        "セルの分割（水平方向）",
                        "境界線",
                        "HTMLコードを保持しますか？",
                        "HTMLで貼付け",
                        "HTMLを保持",
                        "HTMLをテキストにする",
                        "テキストだけ",
                        "You can only edit your own images. Download this image on the host?",
                        "The image has been successfully uploaded to the host!",
                        "パレット",
                        "There are no files",
                        "Rename",
                        "Enter new name",
                        "プレビュー",
                        "ダウンロード",
                        "貼り付け",
                        "お使いのブラウザはクリップボードを使用できません",
                        "コピー",
                        "copy",
                        "角の丸み",
                        "全て表示",
                        "適用",
                        "まだこの分野",
                        "を入力してくださいウェブアドレス",
                        "デフォルト",
                        "白丸",
                        "黒丸",
                        "四角",
                        "見",
                        "探前",
                        "由来",
                        "The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?",
                        "Word Paste Detected",
                        "Clean",
                        "クラス名を挿入",
                        "カスタムサイズ変更のためのAltキーを押します",
                    ];
                },
                73725(e) {
                    e.exports.default = [
                        "Type something",
                        "About Jodit",
                        "Jodit Editor",
                        "Jodit User's Guide",
                        "contains detailed help for using",
                        "For information about the license, please go to our website:",
                        "Buy full version",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.",
                        "Anchor",
                        "Open in new tab",
                        "Open in fullsize",
                        "Clear Formatting",
                        "Fill color or set the text color",
                        "Redo",
                        "Undo",
                        "Bold",
                        "Italic",
                        "Insert Unordered List",
                        "Insert Ordered List",
                        "Align Center",
                        "Align Justify",
                        "Align Left",
                        "Align Right",
                        "Insert Horizontal Line",
                        "Insert Image",
                        "Insert file",
                        "Insert youtube/vimeo video",
                        "Insert link",
                        "Font size",
                        "Font family",
                        "Insert format block",
                        "Normal",
                        "Heading 1",
                        "Heading 2",
                        "Heading 3",
                        "Heading 4",
                        "Quote",
                        "Code",
                        "Insert",
                        "Insert table",
                        "Decrease Indent",
                        "Increase Indent",
                        "Select Special Character",
                        "Insert Special Character",
                        "Paint format",
                        "Change mode",
                        "Margins",
                        "top",
                        "right",
                        "bottom",
                        "left",
                        "Styles",
                        "Classes",
                        "Align",
                        "Right",
                        "Center",
                        "Left",
                        "--Not Set--",
                        "Src",
                        "Title",
                        "Alternative",
                        "Link",
                        "Open link in new tab",
                        "Image",
                        "file",
                        "Advanced",
                        "Image properties",
                        "Cancel",
                        "Ok",
                        "File Browser",
                        "Error on load list",
                        "Error on load folders",
                        "Are you sure?",
                        "Enter Directory name",
                        "Create directory",
                        "type name",
                        "Drop image",
                        "Drop file",
                        "or click",
                        "Alternative text",
                        "Upload",
                        "Browse",
                        "Background",
                        "Text",
                        "Top",
                        "Middle",
                        "Bottom",
                        "Insert column before",
                        "Insert column after",
                        "Insert row above",
                        "Insert row below",
                        "Delete table",
                        "Delete row",
                        "Delete column",
                        "Empty cell",
                        "Chars: %d",
                        "Words: %d",
                        "Strike through",
                        "Underline",
                        "superscript",
                        "subscript",
                        "Cut selection",
                        "Select all",
                        "Break",
                        "Search for",
                        "Replace with",
                        "Replace",
                        "Paste",
                        "Choose Content to Paste",
                        "source",
                        "bold",
                        "italic",
                        "brush",
                        "link",
                        "undo",
                        "redo",
                        "table",
                        "image",
                        "eraser",
                        "paragraph",
                        "fontsize",
                        "video",
                        "font",
                        "about",
                        "print",
                        "underline",
                        "strikethrough",
                        "indent",
                        "outdent",
                        "fullsize",
                        "shrink",
                        "hr",
                        "ul",
                        "ol",
                        "cut",
                        "selectall",
                        "Embed code",
                        "Open link",
                        "Edit link",
                        "No follow",
                        "Unlink",
                        "Update",
                        "pencil",
                        "Eye",
                        " URL",
                        "Edit",
                        "Horizontal align",
                        "Filter",
                        "Sort by changed",
                        "Sort by name",
                        "Sort by size",
                        "Add folder",
                        "Reset",
                        "Save",
                        "Save as ...",
                        "Resize",
                        "Crop",
                        "Width",
                        "Height",
                        "Keep Aspect Ratio",
                        "Yes",
                        "No",
                        "Remove",
                        "Select",
                        "Select %s",
                        "Vertical align",
                        "Split",
                        "Merge",
                        "Add column",
                        "Add row",
                        "License: %s",
                        "Delete",
                        "Split vertical",
                        "Split horizontal",
                        "Border",
                        "Your code is similar to HTML. Keep as HTML?",
                        "Paste as HTML",
                        "Keep",
                        "Insert as Text",
                        "Insert only Text",
                        "You can only edit your own images. Download this image on the host?",
                        "The image has been successfully uploaded to the host!",
                        "palette",
                        "There are no files",
                        "Rename",
                        "Enter new name",
                        "preview",
                        "download",
                        "Paste from clipboard",
                        "Your browser doesn't support direct access to the clipboard.",
                        "Copy selection",
                        "copy",
                        "Border radius",
                        "Show all",
                        "Apply",
                        "Please fill out this field",
                        "Please enter a web address",
                        "Default",
                        "Circle",
                        "Dot",
                        "Quadrate",
                        "Find",
                        "Find Previous",
                        "Find Next",
                        "The pasted content is coming from a Microsoft Word/Excel document. Do you want to keep the format or clean it up?",
                        "Word Paste Detected",
                        "Clean",
                        "Insert className",
                        "Press Alt for custom resizing",
                    ];
                },
                87409(e) {
                    e.exports.default = [
                        "무엇이든 입력하세요",
                        "Jodit에 대하여",
                        "Jodit Editor",
                        "Jodit 사용자 안내서",
                        "자세한 도움말이 들어있어요",
                        "라이센스에 관해서는 Jodit 웹 사이트를 방문해주세요：",
                        "풀 버전 구입하기",
                        "© XDSoft.net - Chupurnov Valeriy. 에게 저작권과 모든 권리가 있습니다.",
                        "Anchor",
                        "새 탭에서 열기",
                        "전체 크기로 보기",
                        "서식 지우기",
                        "글씨 색상",
                        "재실행",
                        "실행 취소",
                        "굵게",
                        "기울임",
                        "글머리 목록",
                        "번호 목록",
                        "가운데 정렬",
                        "양쪽 정렬",
                        "왼쪽 정렬",
                        "오른쪽 정렬",
                        "수평 구분선 넣기",
                        "이미지 넣기",
                        "파일 넣기",
                        "Youtube/Vimeo 동영상",
                        "링크 넣기",
                        "글꼴 크기",
                        "글꼴",
                        "블록 요소 넣기",
                        "일반 텍스트",
                        "제목 1",
                        "제목 2",
                        "제목 3",
                        "제목 4",
                        "인용",
                        "코드",
                        "붙여 넣기",
                        "테이블",
                        "들여쓰기 감소",
                        "들여쓰기 증가",
                        "특수문자 선택",
                        "특수문자 입력",
                        "페인트 형식",
                        "편집모드 변경",
                        "마진",
                        "위",
                        "오른쪽",
                        "아래",
                        "왼쪽",
                        "스타일",
                        "클래스",
                        "정렬",
                        "오른쪽으로",
                        "가운데로",
                        "왼쪽으로",
                        "--지정 안 함--",
                        "경로(src)",
                        "제목",
                        "대체 텍스트(alt)",
                        "링크",
                        "새 탭에서 열기",
                        null,
                        "파일",
                        "고급",
                        "이미지 속성",
                        "취소",
                        "확인",
                        "파일 탐색기",
                        "목록 불러오기 에러",
                        "폴더 불러오기",
                        "정말 진행할까요?",
                        "디렉토리 이름 입력",
                        "디렉토리 생성",
                        "이름 입력",
                        "이미지 드래그",
                        "파일 드래그",
                        "혹은 클릭",
                        "대체 텍스트",
                        "업로드",
                        "탐색",
                        "배경",
                        "텍스트",
                        "위",
                        "중앙",
                        "아래",
                        "이전 열에 삽입",
                        "다음 열에 삽입",
                        "위 행에 삽입",
                        "아래 행에 삽입",
                        "테이블 삭제",
                        "행 삭제",
                        "열 삭제",
                        "빈 셀",
                        "문자수: %d",
                        "단어수: %d",
                        "취소선",
                        "밑줄",
                        "윗첨자",
                        "아래첨자",
                        "선택 잘라내기",
                        "모두 선택",
                        "구분자",
                        "검색",
                        "대체하기",
                        "대체",
                        "붙여넣기",
                        "붙여넣을 내용 선택",
                        "HTML 소스",
                        "볼드",
                        "이탤릭",
                        "브러시",
                        "링크",
                        "실행 취소",
                        "재실행",
                        "테이블",
                        "이미지",
                        "지우개",
                        "문단",
                        "글꼴 크기",
                        "비디오",
                        "글꼴",
                        "편집기 정보",
                        "프린트",
                        "밑줄",
                        "취소선",
                        "들여쓰기",
                        "내어쓰기",
                        "전체 화면",
                        "일반 화면",
                        "구분선",
                        "글머리 목록",
                        "번호 목록",
                        "잘라내기",
                        "모두 선택",
                        "Embed 코드",
                        "링크 열기",
                        "링크 편집",
                        "No follow",
                        "링크 제거",
                        "갱신",
                        "연필",
                        "사이트 확인",
                        "URL",
                        "편집",
                        "수평 정렬",
                        "필터",
                        "변경일 정렬",
                        "이름 정렬",
                        "크기 정렬",
                        "새 폴더",
                        "초기화",
                        "저장",
                        "새로 저장하기 ...",
                        "리사이즈",
                        "크롭",
                        "가로 길이",
                        "세로 높이",
                        "비율 유지하기",
                        "네",
                        "아니오",
                        "제거",
                        "선택",
                        "선택: %s",
                        "수직 정렬",
                        "분할",
                        "셀 병합",
                        "열 추가",
                        "행 추가",
                        "라이센스: %s",
                        "삭제",
                        "세로 셀 분할",
                        "가로 셀 분할",
                        "외곽선",
                        "HTML 코드로 감지했어요. 코드인채로 붙여넣을까요?",
                        "HTML로 붙여넣기",
                        "원본 유지",
                        "텍스트로 넣기",
                        "텍스트만 넣기",
                        "외부 이미지는 편집할 수 없어요. 외부 이미지를 다운로드 할까요?",
                        "이미지를 무사히 업로드 했어요!",
                        "팔레트",
                        "파일이 없어요",
                        "이름 변경",
                        "새 이름 입력",
                        "미리보기",
                        "다운로드",
                        "클립보드 붙여넣기",
                        "사용중인 브라우저가 클립보드 접근을 지원하지 않아요.",
                        "선택 복사",
                        "복사",
                        "둥근 테두리",
                        "모두 보기",
                        "적용",
                        "이 항목을 입력해주세요!",
                        "웹 URL을 입력해주세요.",
                        "기본",
                        "원",
                        "점",
                        "정사각형",
                        "찾기",
                        "이전 찾기",
                        "다음 찾기",
                        "Microsoft Word/Excel 문서로 감지했어요. 서식을 유지한채로 붙여넣을까요?",
                        "Word 붙여넣기 감지",
                        "지우기",
                        "className 입력",
                        "사용자 지정 크기 조정에 대 한 고도 누르십시오",
                    ];
                },
                134(e) {
                    e.exports.default = [
                        "Begin met typen..",
                        "Over Jodit",
                        "Jodit Editor",
                        "Jodit gebruikershandleiding",
                        "bevat gedetailleerde informatie voor gebruik.",
                        "Voor informatie over de licentie, ga naar onze website:",
                        "Volledige versie kopen",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Alle rechten voorbehouden.",
                        "Anker",
                        "Open in nieuwe tab",
                        "Editor in volledig scherm openen",
                        "Opmaak verwijderen",
                        "Vulkleur of tekstkleur aanpassen",
                        "Opnieuw",
                        "Ongedaan maken",
                        "Vet",
                        "Cursief",
                        "Geordende list invoegen",
                        "Ongeordende lijst invoegen",
                        "Centreren",
                        "Uitlijnen op volledige breedte",
                        "Links uitlijnen",
                        "Rechts uitlijnen",
                        "Horizontale lijn invoegen",
                        "Afbeelding invoegen",
                        "Bestand invoegen",
                        "Youtube/Vimeo video invoegen",
                        "Link toevoegen",
                        "Tekstgrootte",
                        "Lettertype",
                        "Format blok invoegen",
                        "Normaal",
                        "Koptekst 1",
                        "Koptekst 2",
                        "Koptekst 3",
                        "Koptekst 4",
                        "Citaat",
                        "Code",
                        "Invoegen",
                        "Tabel invoegen",
                        "Inspringing verkleinen",
                        "Inspringing vergroten",
                        "Symbool selecteren",
                        "Symbool invoegen",
                        "Opmaak kopieren",
                        "Modus veranderen",
                        "Marges",
                        "Boven",
                        "Rechts",
                        "Onder",
                        "Links",
                        "CSS styles",
                        "CSS classes",
                        "Uitlijning",
                        "Rechts",
                        "Gecentreerd",
                        "Links",
                        "--Leeg--",
                        "Src",
                        "Titel",
                        "Alternatieve tekst",
                        "Link",
                        "Link in nieuwe tab openen",
                        "Afbeelding",
                        "Bestand",
                        "Geavanceerd",
                        "Afbeeldingseigenschappen",
                        "Annuleren",
                        "OK",
                        "Bestandsbrowser",
                        "Fout bij het laden van de lijst",
                        "Fout bij het laden van de mappenlijst",
                        "Weet je het zeker?",
                        "Geef de map een naam",
                        "Map aanmaken",
                        "Type naam",
                        "Sleep hier een afbeelding naartoe",
                        "Sleep hier een bestand naartoe",
                        "of klik",
                        "Alternatieve tekst",
                        "Uploaden",
                        "Bladeren",
                        "Achtergrond",
                        "Tekst",
                        "Boven",
                        "Midden",
                        "Onder",
                        "Kolom invoegen (voor)",
                        "Kolom invoegen (na)",
                        "Rij invoegen (boven)",
                        "Rij invoegen (onder)",
                        "Tabel verwijderen",
                        "Rij verwijderen",
                        "Kolom verwijderen",
                        "Cel leegmaken",
                        "Tekens: %d",
                        "Woorden: %d",
                        "Doorstrepen",
                        "Onderstrepen",
                        "Superscript",
                        "Subscript",
                        "Selectie knippen",
                        "Selecteer alles",
                        "Enter",
                        "Zoek naar",
                        "Vervangen door",
                        "Vervangen",
                        "Plakken",
                        "Kies content om te plakken",
                        "Broncode",
                        "vet",
                        "cursief",
                        "kwast",
                        "link",
                        "ongedaan maken",
                        "opnieuw",
                        "tabel",
                        "afbeelding",
                        "gum",
                        "paragraaf",
                        "lettergrootte",
                        "video",
                        "lettertype",
                        "over",
                        "afdrukken",
                        "onderstreept",
                        "doorgestreept",
                        "inspringen",
                        "minder inspringen",
                        "volledige grootte",
                        "kleiner maken",
                        "horizontale lijn",
                        "lijst",
                        "genummerde lijst",
                        "knip",
                        "alles selecteren",
                        "Embed code",
                        "link openen",
                        "link aanpassen",
                        "niet volgen",
                        "link verwijderen",
                        "Updaten",
                        "Om te bewerken",
                        "Recensie",
                        " URL",
                        "Bewerken",
                        "Horizontaal uitlijnen",
                        "Filteren",
                        "Sorteren op wijzigingsdatum",
                        "Sorteren op naam",
                        "Sorteren op grootte",
                        "Map toevoegen",
                        "Herstellen",
                        "Opslaan",
                        "Opslaan als ...",
                        "Grootte aanpassen",
                        "Bijknippen",
                        "Breedte",
                        "Hoogte",
                        "Verhouding behouden",
                        "Ja",
                        "Nee",
                        "Verwijderen",
                        "Selecteren",
                        "Selecteer: %s",
                        "Verticaal uitlijnen",
                        "Splitsen",
                        "Samenvoegen",
                        "Kolom toevoegen",
                        "Rij toevoegen",
                        null,
                        "Verwijderen",
                        "Verticaal splitsen",
                        "Horizontaal splitsen",
                        "Rand",
                        "Deze code lijkt op HTML. Als HTML behouden?",
                        "Invoegen als HTML",
                        "Origineel behouden",
                        "Als tekst invoegen",
                        "Als onopgemaakte tekst invoegen",
                        "Je kunt alleen je eigen afbeeldingen aanpassen. Deze afbeelding downloaden?",
                        "De afbeelding is succesvol geüploadet!",
                        "Palette",
                        "Er zijn geen bestanden in deze map.",
                        "Hongaars",
                        "Voer een nieuwe naam in",
                        "voorvertoning",
                        "Download",
                        "Plakken van klembord",
                        "Uw browser ondersteunt geen directe toegang tot het klembord.",
                        "Selectie kopiëren",
                        "kopiëren",
                        "Border radius",
                        "Toon alle",
                        "Toepassing",
                        "Vul dit veld",
                        "Voer een webadres",
                        "Standaard",
                        "Cirkel",
                        "Dot",
                        "Quadrate",
                        "Zoeken",
                        "Vorige Zoeken",
                        "Volgende Zoeken",
                        "De geplakte tekst is afkomstig van een Microsoft Word/Excel document. Wil je de opmaak behouden of opschonen?",
                        "Word-tekst gedetecteerd",
                        "Opschonen",
                        "Voeg de klassenaam in",
                        "Druk op Alt voor aangepaste grootte",
                    ];
                },
                65296(e) {
                    e.exports.default = [
                        "Napisz coś",
                        "O Jodit",
                        "Edytor Jodit",
                        "Instrukcja Jodit",
                        "zawiera szczegółowe informacje dotyczące użytkowania.",
                        "Odwiedź naszą stronę, aby uzyskać więcej informacji na temat licencji:",
                        "Zakup pełnej wersji",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Wszystkie prawa zastrzeżone.",
                        "Kotwica",
                        "Otwórz w nowej zakładce",
                        "Otwórz edytor w pełnym rozmiarze",
                        "Wyczyść formatowanie",
                        "Kolor wypełnienia lub ustaw kolor tekstu",
                        "Ponów",
                        "Cofnij",
                        "Pogrubienie",
                        "Kursywa",
                        "Wstaw listę wypunktowaną",
                        "Wstaw listę numeryczną",
                        "Wyśrodkuj",
                        "Wyjustuj",
                        "Wyrównaj do lewej",
                        "Wyrównaj do prawej",
                        "Wstaw linię poziomą",
                        "Wstaw grafikę",
                        "Wstaw plik",
                        "Wstaw film Youtube/vimeo",
                        "Wstaw link",
                        "Rozmiar tekstu",
                        "Krój czcionki",
                        "Wstaw formatowanie",
                        "Normalne",
                        "Nagłówek 1",
                        "Nagłówek 2",
                        "Nagłówek 3",
                        "Nagłówek 4",
                        "Cytat",
                        "Kod",
                        "Wstaw",
                        "Wstaw tabelę",
                        "Zmniejsz wcięcie",
                        "Zwiększ wcięcie",
                        "Wybierz znak specjalny",
                        "Wstaw znak specjalny",
                        "Malarz formatów",
                        "Zmień tryb",
                        "Marginesy",
                        "Górny",
                        "Prawy",
                        "Dolny",
                        "Levy",
                        "Style CSS",
                        "Klasy CSS",
                        "Wyrównanie",
                        "Prawa",
                        "środek",
                        "Lewa",
                        "brak",
                        "Źródło",
                        "Tytuł",
                        "Tekst alternatywny",
                        "Link",
                        "Otwórz w nowej zakładce",
                        "Grafika",
                        "Plik",
                        "Zaawansowane",
                        "Właściwości grafiki",
                        "Anuluj",
                        "OK",
                        "Przeglądarka plików",
                        "Błąd ładowania listy plików",
                        "Błąd ładowania folderów",
                        "Czy jesteś pewien?",
                        "Wprowadź nazwę folderu",
                        "Utwórz folder",
                        "wprowadź nazwę",
                        "Upuść plik graficzny",
                        "Upuść plik",
                        "lub kliknij tu",
                        "Tekst alternatywny",
                        "Wczytaj",
                        "Przeglądaj",
                        "Tło",
                        "Treść",
                        "Góra",
                        "Środek",
                        "Dół",
                        "Wstaw kolumnę przed",
                        "Wstaw kolumnę po",
                        "Wstaw wiersz przed",
                        "Wstaw wiersz po",
                        "Usuń tabelę",
                        "Usuń wiersz",
                        "Usuń kolumnę",
                        "Wyczyść komórkę",
                        "Znaki: %d",
                        "Słowa: %d",
                        "Przekreślenie",
                        "Podkreślenie",
                        "indeks górny",
                        "index dolny",
                        "Wytnij zaznaczenie",
                        "Wybierz wszystko",
                        "Przerwa",
                        "Szukaj",
                        "Zamień na",
                        "Wymienić",
                        "Wklej",
                        "Wybierz zawartość do wklejenia",
                        "HTML",
                        "pogrubienie",
                        "kursywa",
                        "pędzel",
                        "link",
                        "cofnij",
                        "ponów",
                        "tabela",
                        "grafika",
                        "wyczyść",
                        "akapit",
                        "rozmiar czcionki",
                        "wideo",
                        "czcionka",
                        "O programie",
                        "drukuj",
                        "podkreślenie",
                        "przekreślenie",
                        "wcięcie",
                        "wycięcie",
                        "pełen rozmiar",
                        "przytnij",
                        "linia pozioma",
                        "lista",
                        "lista numerowana",
                        "wytnij",
                        "zaznacz wszystko",
                        "Wstaw kod",
                        "otwórz link",
                        "edytuj link",
                        "Atrybut no-follow",
                        "Usuń link",
                        "Aktualizuj",
                        "edytuj",
                        "szukaj",
                        "URL",
                        "Edytuj",
                        "Wyrównywanie w poziomie",
                        "Filtruj",
                        "Sortuj wg zmiany",
                        "Sortuj wg nazwy",
                        "Sortuj wg rozmiaru",
                        "Dodaj folder",
                        "wyczyść",
                        "zapisz",
                        "zapisz jako",
                        "Zmień rozmiar",
                        "Przytnij",
                        "Szerokość",
                        "Wysokość",
                        "Zachowaj proporcje",
                        "Tak",
                        "Nie",
                        "Usuń",
                        "Wybierz",
                        "Wybierz: %s",
                        "Wyrównywanie w pionie",
                        "Podziel",
                        "Scal",
                        "Dodaj kolumnę",
                        "Dodaj wiersz",
                        null,
                        "Usuń",
                        "Podziel w pionie",
                        "Podziel w poziomie",
                        "Obramowanie",
                        "Twój kod wygląda jak HTML. Zachować HTML?",
                        "Wkleić jako HTML?",
                        "Oryginalny tekst",
                        "Wstaw jako tekst",
                        "Wstaw tylko treść",
                        "Możesz edytować tylko swoje grafiki. Czy chcesz pobrać tą grafikę?",
                        "Grafika została pomyślnienie dodana na serwer",
                        "Paleta",
                        "Brak plików.",
                        "zmień nazwę",
                        "Wprowadź nową nazwę",
                        "podgląd",
                        "pobierz",
                        "Wklej ze schowka",
                        "Twoja przeglądarka nie obsługuje schowka",
                        "Kopiuj zaznaczenie",
                        "kopiuj",
                        "Zaokrąglenie krawędzi",
                        "Pokaż wszystkie",
                        "Zastosuj",
                        "Proszę wypełnić to pole",
                        "Proszę, wpisz adres sieci web",
                        "Domyślnie",
                        "Koło",
                        "Punkt",
                        "Kwadrat",
                        "Znaleźć",
                        "Znaleźć Poprzednie",
                        "Znajdź Dalej",
                        "Wklejany tekst pochodzi z dokumentu Microsoft Word/Excel. Chcesz zachować ten format czy wyczyścić go? ",
                        "Wykryto tekst w formacie Word",
                        "Wyczyść",
                        "Wstaw nazwę zajęć",
                        "Naciśnij Alt, aby zmienić rozmiar",
                    ];
                },
                31130(e) {
                    e.exports.default = [
                        "Escreva algo...",
                        "Sobre o Jodit",
                        "Editor Jodit",
                        "Guia de usuário Jodit",
                        "contém ajuda detalhada para o uso.",
                        "Para informação sobre a licença, por favor visite nosso site:",
                        "Compre a versão completa",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Todos os direitos reservados.",
                        "Link",
                        "Abrir em nova aba",
                        "Abrir editor em tela cheia",
                        "Limpar formatação",
                        "Cor de preenchimento ou cor do texto",
                        "Refazer",
                        "Desfazer",
                        "Negrito",
                        "Itálico",
                        "Inserir lista não ordenada",
                        "Inserir lista ordenada",
                        "Centralizar",
                        "Justificar",
                        "Alinhar à Esquerda",
                        "Alinhar à Direita",
                        "Inserir linha horizontal",
                        "Inserir imagem",
                        "Inserir arquivo",
                        "Inserir vídeo do Youtube/vimeo",
                        "Inserir link",
                        "Tamanho da letra",
                        "Fonte",
                        "Inserir bloco",
                        "Normal",
                        "Cabeçalho 1",
                        "Cabeçalho 2",
                        "Cabeçalho 3",
                        "Cabeçalho 4",
                        "Citação",
                        "Código",
                        "Inserir",
                        "Inserir tabela",
                        "Diminuir recuo",
                        "Aumentar recuo",
                        "Selecionar caractere especial",
                        "Inserir caractere especial",
                        "Copiar formato",
                        "Mudar modo",
                        "Margens",
                        "cima",
                        "direta",
                        "baixo",
                        "esquerda",
                        "Estilos CSS",
                        "Classes CSS",
                        "Alinhamento",
                        "Direita",
                        "Centro",
                        "Esquerda",
                        "--Não Estabelecido--",
                        "Fonte",
                        "Título",
                        "Texto Alternativo",
                        "Link",
                        "Abrir link em nova aba",
                        "Imagem",
                        "Arquivo",
                        "Avançado",
                        "Propriedades da imagem",
                        "Cancelar",
                        "Ok",
                        "Procurar arquivo",
                        "Erro ao carregar a lista",
                        "Erro ao carregar as pastas",
                        "Você tem certeza?",
                        "Escreva o nome da pasta",
                        "Criar pasta",
                        "Escreva seu nome",
                        "Soltar imagem",
                        "Soltar arquivo",
                        "ou clique",
                        "Texto alternativo",
                        "Upload",
                        "Explorar",
                        "Fundo",
                        "Texto",
                        "Cima",
                        "Meio",
                        "Baixo",
                        "Inserir coluna antes",
                        "Inserir coluna depois",
                        "Inserir linha acima",
                        "Inserir linha abaixo",
                        "Excluir tabela",
                        "Excluir linha",
                        "Excluir coluna",
                        "Limpar célula",
                        "Caracteres: %d",
                        "Palavras: %d",
                        "Tachado",
                        "Sublinhar",
                        "sobrescrito",
                        "subscrito",
                        "Cortar seleção",
                        "Selecionar tudo",
                        "Pausa",
                        "Procurar por",
                        "Substituir com",
                        "Substituir",
                        "Colar",
                        "Escolher conteúdo para colar",
                        "HTML",
                        "negrito",
                        "itálico",
                        "pincel",
                        "link",
                        "desfazer",
                        "refazer",
                        "tabela",
                        "imagem",
                        "apagar",
                        "parágrafo",
                        "tamanho da letra",
                        "vídeo",
                        "fonte",
                        "Sobre de",
                        "Imprimir",
                        "sublinhar",
                        "tachado",
                        "recuar",
                        "diminuir recuo",
                        "Tamanho completo",
                        "diminuir",
                        "linha horizontal",
                        "lista não ordenada",
                        "lista ordenada",
                        "Cortar",
                        "Selecionar tudo",
                        "Incluir código",
                        "Abrir link",
                        "Editar link",
                        "Não siga",
                        "Remover link",
                        "Atualizar",
                        "Editar",
                        "Visualizar",
                        "URL",
                        "Editar",
                        "Alinhamento horizontal",
                        "filtrar",
                        "Ordenar por modificação",
                        "Ordenar por nome",
                        "Ordenar por tamanho",
                        "Adicionar pasta",
                        "Resetar",
                        "Salvar",
                        "Salvar como...",
                        "Redimensionar",
                        "Recortar",
                        "Largura",
                        "Altura",
                        "Manter a proporção",
                        "Sim",
                        "Não",
                        "Remover",
                        "Selecionar",
                        "Selecionar: %s",
                        "Alinhamento vertical",
                        "Dividir",
                        "Mesclar",
                        "Adicionar coluna",
                        "Adicionar linha",
                        null,
                        "Excluir",
                        "Dividir vertical",
                        "Dividir horizontal",
                        "Borda",
                        "Seu código é similar ao HTML. Manter como HTML?",
                        "Colar como HTML?",
                        "Manter",
                        "Inserir como Texto",
                        "Inserir somente o Texto",
                        "Você só pode editar suas próprias imagens. Baixar essa imagem pro servidor?",
                        "A imagem foi enviada com sucesso para o servidor!",
                        "Palette",
                        "Não há arquivos nesse diretório.",
                        "Húngara",
                        "Digite um novo nome",
                        "preview",
                        "Baixar",
                        "Colar da área de transferência",
                        "O seu navegador não oferece suporte a acesso direto para a área de transferência.",
                        "Selecção de cópia",
                        "cópia",
                        "Border radius",
                        "Mostrar todos os",
                        "Aplicar",
                        "Por favor, preencha este campo",
                        "Por favor introduza um endereço web",
                        "Padrão",
                        "Círculo",
                        "Ponto",
                        "Quadro",
                        "Encontrar",
                        "Encontrar Anteriores",
                        "Localizar Próxima",
                        "O conteúdo colado veio de um documento Microsoft Word/Excel. Você deseja manter o formato ou limpa-lo?",
                        "Colado do Word Detectado",
                        "Limpar",
                        "Insira o nome da classe",
                        "Pressione Alt para redimensionamento personalizado",
                    ];
                },
                65453(e) {
                    e.exports.default = [
                        "Напишите что-либо",
                        "О Jodit",
                        "Редактор Jodit",
                        "Jodit Руководство пользователя",
                        "содержит детальную информацию по использованию",
                        "Для получения сведений о лицензии , пожалуйста, перейдите на наш сайт:",
                        "Купить полную версию",
                        "Авторские права © XDSoft.net - Чупурнов Валерий. Все права защищены.",
                        "Анкор",
                        "Открывать ссылку в новой вкладке",
                        "Открыть редактор в полном размере",
                        "Очистить форматирование",
                        "Цвет заливки или цвет текста",
                        "Повтор",
                        "Отмена",
                        "Жирный",
                        "Наклонный",
                        "Вставка маркированного списка",
                        "Вставить нумерованный список",
                        "Выровнять по центру",
                        "Выровнять по ширине",
                        "Выровнять по левому краю",
                        "Выровнять по правому краю",
                        "Вставить горизонтальную линию",
                        "Вставить изображение",
                        "Вставить файл",
                        "Вставьте видео",
                        "Вставить ссылку",
                        "Размер шрифта",
                        "Шрифт",
                        "Вставить блочный элемент",
                        "Нормальный текст",
                        "Заголовок 1",
                        "Заголовок 2",
                        "Заголовок 3",
                        "Заголовок 4",
                        "Цитата",
                        "Код",
                        "Вставить",
                        "Вставить таблицу",
                        "Уменьшить отступ",
                        "Увеличить отступ",
                        "Выберите специальный символ",
                        "Вставить специальный символ",
                        "Формат краски",
                        "Источник",
                        "Отступы",
                        "сверху",
                        "справа",
                        "снизу",
                        "слева",
                        "Стили",
                        "Классы",
                        "Выравнивание",
                        "По правому краю",
                        "По центру",
                        "По левому краю",
                        "--не устанавливать--",
                        "src",
                        "Заголовок",
                        "Альтернативный текст (alt)",
                        "Ссылка",
                        "Открывать ссылку в новом окне",
                        null,
                        "Файл",
                        "Расширенные",
                        "Свойства изображения",
                        "Отмена",
                        "Ок",
                        "Браузер файлов",
                        "Ошибка при загрузке списка изображений",
                        "Ошибка при загрузке списка директорий",
                        "Вы уверены?",
                        "Введите название директории",
                        "Создать директорию",
                        "введите название",
                        "Перетащите сюда изображение",
                        "Перетащите сюда файл",
                        "или нажмите",
                        "Альтернативный текст",
                        "Загрузка",
                        "Сервер",
                        "Фон",
                        "Текст",
                        " К верху",
                        "По середине",
                        "К низу",
                        "Вставить столбец до",
                        "Вставить столбец после",
                        "Вставить ряд выше",
                        "Вставить ряд ниже",
                        "Удалить таблицу",
                        "Удалять ряд",
                        "Удалить столбец",
                        "Очистить ячейку",
                        "Символов: %d",
                        "Слов: %d",
                        "Перечеркнуть",
                        "Подчеркивание",
                        "верхний индекс",
                        "индекс",
                        "Вырезать",
                        "Выделить все",
                        "Разделитель",
                        "Найти",
                        "Заменить на",
                        "Заменить",
                        "Вставить",
                        "Выбрать контент для вставки",
                        "HTML",
                        "жирный",
                        "курсив",
                        "заливка",
                        "ссылка",
                        "отменить",
                        "повторить",
                        "таблица",
                        "Изображение",
                        "очистить",
                        "параграф",
                        "размер шрифта",
                        "видео",
                        "шрифт",
                        "о редакторе",
                        "печать",
                        "подчеркнутый",
                        "перечеркнутый",
                        "отступ",
                        "выступ",
                        "во весь экран",
                        "обычный размер",
                        "линия",
                        "Список",
                        "Нумерованный список",
                        "Вырезать",
                        "Выделить все",
                        "Код",
                        "Открыть ссылку",
                        "Редактировать ссылку",
                        "Атрибут nofollow",
                        "Убрать ссылку",
                        "Обновить",
                        "Редактировать",
                        "Просмотр",
                        "URL",
                        "Редактировать",
                        "Горизонтальное выравнивание",
                        "Фильтр",
                        "По изменению",
                        "По имени",
                        "По размеру",
                        "Добавить папку",
                        "Восстановить",
                        "Сохранить",
                        "Сохранить как",
                        "Изменить размер",
                        "Обрезать размер",
                        "Ширина",
                        "Высота",
                        "Сохранять пропорции",
                        "Да",
                        "Нет",
                        "Удалить",
                        "Выделить",
                        "Выделить: %s",
                        "Вертикальное выравнивание",
                        "Разделить",
                        "Объединить в одну",
                        "Добавить столбец",
                        "Добавить строку",
                        "Лицензия: %s",
                        "Удалить",
                        "Разделить по вертикали",
                        "Разделить по горизонтали",
                        "Рамка",
                        "Ваш текст, который вы пытаетесь вставить похож на HTML. Вставить его как HTML?",
                        "Вставить как HTML?",
                        "Сохранить оригинал",
                        "Вставить как текст",
                        "Вставить только текст",
                        "Вы можете редактировать только свои собственные изображения. Загрузить это изображение на ваш сервер?",
                        "Изображение успешно загружено на сервер!",
                        "палитра",
                        "В данном каталоге нет файлов",
                        "Переименовать",
                        "Введите новое имя",
                        "Предпросмотр",
                        "Скачать",
                        "Вставить из буфера обмена",
                        "Ваш браузер не поддерживает прямой доступ к буферу обмена.",
                        "Скопировать выделенное",
                        "копия",
                        "Радиус границы",
                        "Показать все",
                        "Применить",
                        "Пожалуйста, заполните это поле",
                        "Пожалуйста, введите веб-адрес",
                        "По умолчанию",
                        "Круг",
                        "Точка",
                        "Квадрат",
                        "Найти",
                        "Найти Предыдущие",
                        "Найти Далее",
                        "Контент который вы вставляете поступает из документа Microsoft Word / Excel. Вы хотите сохранить формат или очистить его?",
                        "Возможно это фрагмент Word или Excel",
                        "Почистить",
                        "Вставить название класса",
                        "Нажмите Alt для изменения пользовательского размера",
                    ];
                },
                10676(e) {
                    e.exports.default = [
                        "Bir şeyler yaz",
                        "Jodit Hakkında",
                        "Jodit Editor",
                        "Jodit Kullanım Kılavuzu",
                        "kullanım için detaylı bilgiler içerir",
                        "Lisans hakkında bilgi için lütfen web sitemize gidin:",
                        "Tam versiyonunu satın al",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. Tüm hakları saklıdır.",
                        "Bağlantı",
                        "Yeni sekmede aç",
                        "Editörü tam ekranda aç",
                        "Stili temizle",
                        "Renk doldur veya yazı rengi seç",
                        "Yinele",
                        "Geri Al",
                        "Kalın",
                        "İtalik",
                        "Sırasız Liste Ekle",
                        "Sıralı Liste Ekle",
                        "Ortala",
                        "Kenarlara Yasla",
                        "Sola Yasla",
                        "Sağa Yasla",
                        "Yatay Çizgi Ekle",
                        "Resim Ekle",
                        "Dosya Ekle",
                        "Youtube/Vimeo Videosu Ekle",
                        "Bağlantı Ekle",
                        "Font Boyutu",
                        "Font Ailesi",
                        "Blok Ekle",
                        "Normal",
                        "Başlık 1",
                        "Başlık 2",
                        "Başlık 3",
                        "Başlık 4",
                        "Alıntı",
                        "Kod",
                        "Ekle",
                        "Tablo Ekle",
                        "Girintiyi Azalt",
                        "Girintiyi Arttır",
                        "Özel Karakter Seç",
                        "Özel Karakter Ekle",
                        "Resim Biçimi",
                        "Mod Değiştir",
                        "Boşluklar",
                        "Üst",
                        "Sağ",
                        "Alt",
                        "Sol",
                        "CSS Stilleri",
                        "CSS Sınıfları",
                        "Hizalama",
                        "Sağ",
                        "Ortalı",
                        "Sol",
                        "Belirsiz",
                        "Kaynak",
                        "Başlık",
                        "Alternatif Yazı",
                        "Link",
                        "Bağlantıyı yeni sekmede aç",
                        "Resim",
                        "Dosya",
                        "Gelişmiş",
                        "Resim özellikleri",
                        "İptal",
                        "Tamam",
                        "Dosya Listeleyici",
                        "Liste yüklenirken hata oluştu",
                        "Klasörler yüklenirken hata oluştur",
                        "Emin misiniz?",
                        "Dizin yolu giriniz",
                        "Dizin oluştur",
                        "İsim yaz",
                        "Resim bırak",
                        "Dosya bırak",
                        "veya tıkla",
                        "Alternatif yazı",
                        "Yükle",
                        "Gözat",
                        "Arka plan",
                        "Yazı",
                        "Üst",
                        "Orta",
                        "Aşağı",
                        "Öncesine kolon ekle",
                        "Sonrasına kolon ekle",
                        "Üstüne satır ekle",
                        "Altına satır ekle",
                        "Tabloyu sil",
                        "Satırı sil",
                        "Kolonu sil",
                        "Hücreyi temizle",
                        "Harfler: %d",
                        "Kelimeler: %d",
                        "Üstü çizili",
                        "Alt çizgi",
                        "Üst yazı",
                        "Alt yazı",
                        "Seçilimi kes",
                        "Tümünü seç",
                        "Satır sonu",
                        "Ara",
                        "Şununla değiştir",
                        "Değiştir",
                        "Yapıştır",
                        "Yapıştırılacak içerik seç",
                        "Kaynak",
                        "Kalın",
                        "italik",
                        "Fırça",
                        "Bağlantı",
                        "Geri al",
                        "Yinele",
                        "Tablo",
                        "Resim",
                        "Silgi",
                        "Paragraf",
                        "Font boyutu",
                        "Video",
                        "Font",
                        "Hakkında",
                        "Yazdır",
                        "Alt çizgi",
                        "Üstü çizili",
                        "Girinti",
                        "Çıkıntı",
                        "Tam ekran",
                        "Küçült",
                        "Ayraç",
                        "Sırasız liste",
                        "Sıralı liste",
                        "Kes",
                        "Tümünü seç",
                        "Kod ekle",
                        "Bağlantıyı aç",
                        "Bağlantıyı düzenle",
                        "Nofollow özelliği",
                        "Bağlantıyı kaldır",
                        "Güncelle",
                        "Düzenlemek için",
                        "Yorumu",
                        "URL",
                        "Düzenle",
                        "Yatay hizala",
                        "Filtre",
                        "Değişime göre sırala",
                        "İsme göre sırala",
                        "Boyuta göre sırala",
                        "Klasör ekle",
                        "Sıfırla",
                        "Kaydet",
                        "Farklı kaydet",
                        "Boyutlandır",
                        "Kırp",
                        "Genişlik",
                        "Yükseklik",
                        "En boy oranını koru",
                        "Evet",
                        "Hayır",
                        "Sil",
                        "Seç",
                        "Seç: %s",
                        "Dikey hizala",
                        "Ayır",
                        "Birleştir",
                        "Kolon ekle",
                        "Satır ekle",
                        null,
                        "Sil",
                        "Dikey ayır",
                        "Yatay ayır",
                        "Kenarlık",
                        "Kodunuz HTML koduna benziyor. HTML olarak devam etmek ister misiniz?",
                        "HTML olarak yapıştır",
                        "Sakla",
                        "Yazı olarak ekle",
                        "Sadece yazıyı ekle",
                        "Sadece kendi resimlerinizi düzenleyebilirsiniz. Bu görseli kendi hostunuza indirmek ister misiniz?",
                        "Görsel başarıyla hostunuza yüklendi",
                        "Palet",
                        "Bu dizinde dosya yok",
                        "Yeniden isimlendir",
                        "Yeni isim girin",
                        "Ön izleme",
                        "İndir",
                        "Panodan yapıştır ",
                        "Tarayıcınız panoya doğrudan erişimi desteklemiyor.",
                        "Seçimi kopyala",
                        "Kopyala",
                        "Sınır yarıçapı",
                        "Tümünü Göster",
                        "Uygula",
                        "Lütfen bu alanı doldurun",
                        "Lütfen bir web adresi girin",
                        "Varsayılan",
                        "Daire",
                        "Nokta",
                        "Kare",
                        "Bul",
                        "Öncekini Bul",
                        "Sonrakini Bul",
                        "Der Inhalt, den Sie einfügen, stammt aus einem Microsoft Word / Excel-Dokument. Möchten Sie das Format erhalten oder löschen?",
                        "Word biçiminde yapıştırma algılandı",
                        "Temizle",
                        "Sınıf adı girin",
                        "Özel yeniden boyutlandırma için Alt tuşuna basın",
                    ];
                },
                38039(e) {
                    e.exports.default = [
                        "输入一些内容",
                        "关于Jodit",
                        "Jodit Editor",
                        "开发者指南",
                        "使用帮助",
                        "有关许可证的信息，请访问我们的网站：",
                        "购买完整版本",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. 版权所有",
                        "Anchor",
                        "在新窗口打开",
                        "全屏编辑",
                        "清除样式",
                        "颜色",
                        "重做",
                        "撤销",
                        "粗体",
                        "斜体",
                        "符号列表",
                        "编号",
                        "居中",
                        "对齐文本",
                        "左对齐",
                        "右对齐",
                        "分割线",
                        "图片",
                        "文件",
                        "视频",
                        "链接",
                        "字号",
                        "字体",
                        "格式块",
                        "默认",
                        "标题1",
                        "标题2",
                        "标题3",
                        "标题4",
                        "引用",
                        "代码",
                        "插入",
                        "表格",
                        "减少缩进",
                        "增加缩进",
                        "选择特殊符号",
                        "特殊符号",
                        "格式复制",
                        "改变模式",
                        "外边距（Margins）",
                        "top",
                        "right",
                        "bottom",
                        "left",
                        "样式",
                        "Classes",
                        "对齐方式",
                        "居右",
                        "居中",
                        "居左",
                        "无",
                        "Src",
                        "Title",
                        "Alternative",
                        "Link",
                        "在新窗口打开链接",
                        "图片",
                        "file",
                        "高级",
                        "图片属性",
                        "取消",
                        "确定",
                        "文件管理",
                        "加载list错误",
                        "加载folders错误",
                        "你确定吗？",
                        "输入路径",
                        "创建路径",
                        "type name",
                        "拖动图片到此",
                        "拖动文件到此",
                        "或点击",
                        "Alternative text",
                        "上传",
                        "浏览",
                        "背景色",
                        "文字",
                        "顶部",
                        "中间",
                        "底部",
                        "在之前插入列",
                        "在之后插入列",
                        "在之前插入行",
                        "在之后插入行",
                        "删除表格",
                        "删除行",
                        "删除列",
                        "清除内容",
                        "字符数: %d",
                        "单词数: %d",
                        "删除线",
                        "下划线",
                        "上标",
                        "下标",
                        "剪切",
                        "全选",
                        "Break",
                        "查找",
                        "替换为",
                        "替换",
                        "粘贴",
                        "选择内容并粘贴",
                        "源码",
                        "粗体",
                        "斜体",
                        "颜色",
                        "链接",
                        "撤销",
                        "重做",
                        "表格",
                        "图片",
                        "橡皮擦",
                        "段落",
                        "字号",
                        "视频",
                        "字体",
                        "关于",
                        "打印",
                        "下划线",
                        "上出现",
                        "增加缩进",
                        "减少缩进",
                        "全屏",
                        "收缩",
                        "分割线",
                        "无序列表",
                        "顺序列表",
                        "剪切",
                        "全选",
                        "嵌入代码",
                        "打开链接",
                        "编辑链接",
                        "No follow",
                        "取消链接",
                        "更新",
                        "铅笔",
                        "预览",
                        "URL",
                        "编辑",
                        "水平对齐",
                        "筛选",
                        "修改时间排序",
                        "名称排序",
                        "大小排序",
                        "新建文件夹",
                        "重置",
                        "保存",
                        "保存为",
                        "调整大小",
                        "剪切",
                        "宽",
                        "高",
                        "保持长宽比",
                        "是",
                        "不",
                        "移除",
                        "选择",
                        "选择: %s",
                        "垂直对齐",
                        "拆分",
                        "合并",
                        "添加列",
                        "添加行",
                        null,
                        "删除",
                        "垂直拆分",
                        "水平拆分",
                        "边框",
                        "你粘贴的文本是一段html代码，是否保留源格式",
                        "html粘贴",
                        "保留源格式",
                        "把html代码视为普通文本",
                        "只保留文本",
                        "你只能编辑你自己的图片。Download this image on the host?",
                        "图片上传成功",
                        "调色板",
                        "此目录中沒有文件。",
                        "重命名",
                        "输入新名称",
                        "预览",
                        "下载",
                        "粘贴从剪贴板",
                        "你浏览器不支持直接访问的剪贴板。",
                        "复制选中内容",
                        "复制",
                        "边界半径",
                        "显示所有",
                        "应用",
                        "请填写这个字段",
                        "请输入一个网址",
                        "默认",
                        "圆圈",
                        "点",
                        "方形",
                        "搜索",
                        "查找上一个",
                        "查找下一个",
                        "正在粘贴 Word/Excel 的文本，是否保留源格式？",
                        "文本粘贴",
                        "匹配目标格式",
                        "插入班级名称",
                        "按Alt自定义调整大小",
                    ];
                },
                17046(e) {
                    e.exports.default = [
                        "輸入一些內容",
                        "關於Jodit",
                        "Jodit Editor",
                        "開發者指南",
                        "使用幫助",
                        "有關許可證的信息，請訪問我們的網站：",
                        "購買完整版本",
                        "Copyright © XDSoft.net - Chupurnov Valeriy. All rights reserved.",
                        "Anchor",
                        "在新窗口打開",
                        "全屏編輯",
                        "清除樣式",
                        "顏色",
                        "重做",
                        "撤銷",
                        "粗體",
                        "斜體",
                        "符號列表",
                        "編號",
                        "居中",
                        "對齊文本",
                        "左對齊",
                        "右對齊",
                        "分割線",
                        "圖片",
                        "文件",
                        "youtube/vimeo 影片",
                        "鏈接",
                        "字號",
                        "字體",
                        "格式塊",
                        "文本",
                        "標題1",
                        "標題2",
                        "標題3",
                        "標題4",
                        "引用",
                        "代碼",
                        "插入",
                        "表格",
                        "減少縮進",
                        "增加縮進",
                        "選擇特殊符號",
                        "特殊符號",
                        "格式複製",
                        "改變模式",
                        "外邊距（Margins）",
                        "top",
                        "right",
                        "bottom",
                        "left",
                        "樣式",
                        "Classes",
                        "對齊方式",
                        "居右",
                        "居中",
                        "居左",
                        "無",
                        "Src",
                        "Title",
                        "替代",
                        "Link",
                        "在新窗口打開鏈接",
                        "圖片",
                        "file",
                        "高級",
                        "圖片屬性",
                        "取消",
                        "確定",
                        "文件管理",
                        "加載list錯誤",
                        "加載folders錯誤",
                        "你確定嗎？",
                        "輸入路徑",
                        "創建路徑",
                        "type name",
                        "拖動圖片到此",
                        "拖動文件到此",
                        "或點擊",
                        "替代文字",
                        "上傳",
                        "瀏覽",
                        "背景色",
                        "文字",
                        "頂部",
                        "中間",
                        "底部",
                        "在之前插入列",
                        "在之後插入列",
                        "在之前插入行",
                        "在之後插入行",
                        "刪除表格",
                        "刪除行",
                        "刪除列",
                        "清除內容",
                        "字符數: %d",
                        "單詞數: %d",
                        "刪除線",
                        "下劃線",
                        "上標",
                        "下標",
                        "剪切",
                        "全選",
                        "Pause",
                        "查找",
                        "替換為",
                        "แทนที่",
                        "黏貼",
                        "選擇內容並黏貼",
                        "源碼",
                        "粗體",
                        "斜體",
                        "顏色",
                        "鏈接",
                        "撤銷",
                        "重做",
                        "表格",
                        "圖片",
                        "橡皮擦",
                        "段落",
                        "字號",
                        "影片",
                        "字體",
                        "關於",
                        "打印",
                        "下劃線",
                        "上出現",
                        "增加縮進",
                        "減少縮進",
                        "全屏",
                        "收縮",
                        "分割線",
                        "無序列表",
                        "順序列表",
                        "剪切",
                        "全選",
                        "嵌入代碼",
                        "打開鏈接",
                        "編輯鏈接",
                        "No follow",
                        "取消連結",
                        "更新",
                        "鉛筆",
                        "回顧",
                        "URL",
                        null,
                        "水平對齊",
                        "篩選",
                        "修改時間排序",
                        "名稱排序",
                        "大小排序",
                        "新建文件夾",
                        "重置",
                        "保存",
                        "保存為",
                        "調整大小",
                        "Crop",
                        "寬",
                        "高",
                        "保存長寬比",
                        "是",
                        "不",
                        "移除",
                        "選擇",
                        "選擇: %s",
                        "垂直對齊",
                        "拆分",
                        "合併",
                        "添加列",
                        "添加行",
                        null,
                        "刪除",
                        "垂直拆分",
                        "水平拆分",
                        "邊框",
                        "你黏貼的文本是一段html代碼，是否保留源格式",
                        "html黏貼",
                        "保留源格式",
                        "把html代碼視為普通文本",
                        "只保留文本",
                        "你只能編輯你自己的圖片。是否下載此圖片到本地?",
                        "圖片上傳成功",
                        "調色板",
                        "此目錄中沒有文件。",
                        "重命名",
                        "輸入新名稱",
                        "預覽",
                        "下載",
                        "從剪貼板貼上",
                        "瀏覽器無法存取剪贴板。",
                        "複製已選取項目",
                        "複製",
                        "邊框圓角",
                        "顯示所有",
                        "應用",
                        "ได้โปรดกรอกช่องข้อมูลนี้",
                        "โปรดเติมที่อยู่บนเว็บ",
                        "ค่าปริยาย",
                        "วงกลม",
                        "จุด",
                        "Quadrate",
                        "ค้นหา",
                        "ค้นหาก่อนหน้านี้",
                        "ค้นหาถัดไป",
                        "正在黏貼 Word/Excel 的文本，是否保留源格式？",
                        "文本黏貼",
                        "匹配目標格式",
                        "ใส่ชื่อคลาส",
                        "กดอัลท์สำหรับการปรับขนาดที่กำหนดเอง",
                    ];
                },
                41563(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M621 1280h595v-595zm-45-45l595-595h-595v595zm1152 77v192q0 14-9 23t-23 9h-224v224q0 14-9 23t-23 9h-192q-14 0-23-9t-9-23v-224h-864q-14 0-23-9t-9-23v-864h-224q-14 0-23-9t-9-23v-192q0-14 9-23t23-9h224v-224q0-14 9-23t23-9h192q14 0 23 9t9 23v224h851l246-247q10-9 23-9t23 9q9 10 9 23t-9 23l-247 246v851h224q14 0 23 9t9 23z"/> </svg>';
                },
                88391(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 24 24"> <g transform="translate(-251.000000, -443.000000)"> <g transform="translate(215.000000, 119.000000)"/> <path d="M252,448 L256,448 L256,444 L252,444 L252,448 Z M257,448 L269,448 L269,446 L257,446 L257,448 Z M257,464 L269,464 L269,462 L257,462 L257,464 Z M270,444 L270,448 L274,448 L274,444 L270,444 Z M252,462 L252,466 L256,466 L256,462 L252,462 Z M270,462 L270,466 L274,466 L274,462 L270,462 Z M254,461 L256,461 L256,449 L254,449 L254,461 Z M270,461 L272,461 L272,449 L270,449 L270,461 Z"/> </g> </svg>';
                },
                81762(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' x="0px" y="0px" viewBox="0 0 459 459"> <g> <path d="M229.5,0C102,0,0,102,0,229.5S102,459,229.5,459c20.4,0,38.25-17.85,38.25-38.25c0-10.2-2.55-17.85-10.2-25.5 c-5.1-7.65-10.2-15.3-10.2-25.5c0-20.4,17.851-38.25,38.25-38.25h45.9c71.4,0,127.5-56.1,127.5-127.5C459,91.8,357,0,229.5,0z M89.25,229.5c-20.4,0-38.25-17.85-38.25-38.25S68.85,153,89.25,153s38.25,17.85,38.25,38.25S109.65,229.5,89.25,229.5z M165.75,127.5c-20.4,0-38.25-17.85-38.25-38.25S145.35,51,165.75,51S204,68.85,204,89.25S186.15,127.5,165.75,127.5z M293.25,127.5c-20.4,0-38.25-17.85-38.25-38.25S272.85,51,293.25,51s38.25,17.85,38.25,38.25S313.65,127.5,293.25,127.5z M369.75,229.5c-20.4,0-38.25-17.85-38.25-38.25S349.35,153,369.75,153S408,170.85,408,191.25S390.15,229.5,369.75,229.5z" /> </g> </svg>';
                },
                61515(e) {
                    e.exports =
                        '<svg viewBox="0 0 1792 1792" xmlns="http://www.w3.org/2000/svg"> <path d="M1088 1256v240q0 16-12 28t-28 12h-240q-16 0-28-12t-12-28v-240q0-16 12-28t28-12h240q16 0 28 12t12 28zm316-600q0 54-15.5 101t-35 76.5-55 59.5-57.5 43.5-61 35.5q-41 23-68.5 65t-27.5 67q0 17-12 32.5t-28 15.5h-240q-15 0-25.5-18.5t-10.5-37.5v-45q0-83 65-156.5t143-108.5q59-27 84-56t25-76q0-42-46.5-74t-107.5-32q-65 0-108 29-35 25-107 115-13 16-31 16-12 0-25-8l-164-125q-13-10-15.5-25t5.5-28q160-266 464-266 80 0 161 31t146 83 106 127.5 41 158.5z"/> </svg>';
                },
                49663(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 128 128" xml:space="preserve"> <polygon points="112.4560547,23.3203125 112.4560547,75.8154297 31.4853516,75.8154297 31.4853516,61.953125 16.0131836,72.6357422 0.5410156,83.3164063 16.0131836,93.9990234 31.4853516,104.6796875 31.4853516,90.8183594 112.4560547,90.8183594 112.4560547,90.8339844 127.4589844,90.8339844 127.4589844,23.3203125"/> </svg>';
                },
                76958(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M747 1521q74 32 140 32 376 0 376-335 0-114-41-180-27-44-61.5-74t-67.5-46.5-80.5-25-84-10.5-94.5-2q-73 0-101 10 0 53-.5 159t-.5 158q0 8-1 67.5t-.5 96.5 4.5 83.5 12 66.5zm-14-746q42 7 109 7 82 0 143-13t110-44.5 74.5-89.5 25.5-142q0-70-29-122.5t-79-82-108-43.5-124-14q-50 0-130 13 0 50 4 151t4 152q0 27-.5 80t-.5 79q0 46 1 69zm-541 889l2-94q15-4 85-16t106-27q7-12 12.5-27t8.5-33.5 5.5-32.5 3-37.5.5-34v-65.5q0-982-22-1025-4-8-22-14.5t-44.5-11-49.5-7-48.5-4.5-30.5-3l-4-83q98-2 340-11.5t373-9.5q23 0 68.5.5t67.5.5q70 0 136.5 13t128.5 42 108 71 74 104.5 28 137.5q0 52-16.5 95.5t-39 72-64.5 57.5-73 45-84 40q154 35 256.5 134t102.5 248q0 100-35 179.5t-93.5 130.5-138 85.5-163.5 48.5-176 14q-44 0-132-3t-132-3q-106 0-307 11t-231 12z"/> </svg>';
                },
                49914(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M384 1662l17-85q6-2 81.5-21.5t111.5-37.5q28-35 41-101 1-7 62-289t114-543.5 52-296.5v-25q-24-13-54.5-18.5t-69.5-8-58-5.5l19-103q33 2 120 6.5t149.5 7 120.5 2.5q48 0 98.5-2.5t121-7 98.5-6.5q-5 39-19 89-30 10-101.5 28.5t-108.5 33.5q-8 19-14 42.5t-9 40-7.5 45.5-6.5 42q-27 148-87.5 419.5t-77.5 355.5q-2 9-13 58t-20 90-16 83.5-6 57.5l1 18q17 4 185 31-3 44-16 99-11 0-32.5 1.5t-32.5 1.5q-29 0-87-10t-86-10q-138-2-206-2-51 0-143 9t-121 11z"/> </svg>';
                },
                10946(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1760 896q14 0 23 9t9 23v64q0 14-9 23t-23 9h-1728q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h1728zm-1277-64q-28-35-51-80-48-97-48-188 0-181 134-309 133-127 393-127 50 0 167 19 66 12 177 48 10 38 21 118 14 123 14 183 0 18-5 45l-12 3-84-6-14-2q-50-149-103-205-88-91-210-91-114 0-182 59-67 58-67 146 0 73 66 140t279 129q69 20 173 66 58 28 95 52h-743zm507 256h411q7 39 7 92 0 111-41 212-23 55-71 104-37 35-109 81-80 48-153 66-80 21-203 21-114 0-195-23l-140-40q-57-16-72-28-8-8-8-22v-13q0-108-2-156-1-30 0-68l2-37v-44l102-2q15 34 30 71t22.5 56 12.5 27q35 57 80 94 43 36 105 57 59 22 132 22 64 0 139-27 77-26 122-86 47-61 47-129 0-84-81-157-34-29-137-71z"/> </svg>';
                },
                61228(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1025 1369v167h-248l-159-252-24-42q-8-9-11-21h-3l-9 21q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zm639 217v206h-514l-4-27q-3-45-3-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 80-65 188-65 110 0 178 59.5t68 158.5q0 66-34.5 118.5t-84 86-99.5 62.5-87 63-41 73h232v-80h126z"/> </svg>';
                },
                56095(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1025 1369v167h-248l-159-252-24-42q-8-9-11-21h-3l-9 21q-10 20-25 44l-155 250h-258v-167h128l197-291-185-272h-137v-168h276l139 228q2 4 23 42 8 9 11 21h3q3-9 11-21l25-42 140-228h257v168h-125l-184 267 204 296h109zm637-679v206h-514l-3-27q-4-28-4-46 0-64 26-117t65-86.5 84-65 84-54.5 65-54 26-64q0-38-29.5-62.5t-70.5-24.5q-51 0-97 39-14 11-36 38l-105-92q26-37 63-66 83-65 188-65 110 0 178 59.5t68 158.5q0 56-24.5 103t-62 76.5-81.5 58.5-82 50.5-65.5 51.5-30.5 63h232v-80h126z"/> </svg>';
                },
                95347(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M176 223q-37-2-45-4l-3-88q13-1 40-1 60 0 112 4 132 7 166 7 86 0 168-3 116-4 146-5 56 0 86-2l-1 14 2 64v9q-60 9-124 9-60 0-79 25-13 14-13 132 0 13 .5 32.5t.5 25.5l1 229 14 280q6 124 51 202 35 59 96 92 88 47 177 47 104 0 191-28 56-18 99-51 48-36 65-64 36-56 53-114 21-73 21-229 0-79-3.5-128t-11-122.5-13.5-159.5l-4-59q-5-67-24-88-34-35-77-34l-100 2-14-3 2-86h84l205 10q76 3 196-10l18 2q6 38 6 51 0 7-4 31-45 12-84 13-73 11-79 17-15 15-15 41 0 7 1.5 27t1.5 31q8 19 22 396 6 195-15 304-15 76-41 122-38 65-112 123-75 57-182 89-109 33-255 33-167 0-284-46-119-47-179-122-61-76-83-195-16-80-16-237v-333q0-188-17-213-25-36-147-39zm1488 1409v-64q0-14-9-23t-23-9h-1472q-14 0-23 9t-9 23v64q0 14 9 23t23 9h1472q14 0 23-9t9-23z"/> </svg>';
                },
                54(e) {
                    e.exports =
                        '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"> <path d="M36 4h-24c-2.21 0-4 1.79-4 4v32c0 2.21 1.79 4 4 4h24c2.21 0 4-1.79 4-4v-32c0-2.21-1.79-4-4-4zm-24 4h10v16l-5-3-5 3v-16z"/> </svg>';
                },
                2113(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M832 1408l336-384h-768l-336 384h768zm1013-1077q15 34 9.5 71.5t-30.5 65.5l-896 1024q-38 44-96 44h-768q-38 0-69.5-20.5t-47.5-54.5q-15-34-9.5-71.5t30.5-65.5l896-1024q38-44 96-44h768q38 0 69.5 20.5t47.5 54.5z"/> </svg>';
                },
                41567(e) {
                    e.exports =
                        '<svg viewBox="0 0 32 32" xmlns="http://www.w3.org/2000/svg"> <path d="M24.89,6.61H22.31V4.47A2.47,2.47,0,0,0,19.84,2H6.78A2.47,2.47,0,0,0,4.31,4.47V22.92a2.47,2.47,0,0,0,2.47,2.47H9.69V27.2a2.8,2.8,0,0,0,2.8,2.8h12.4a2.8,2.8,0,0,0,2.8-2.8V9.41A2.8,2.8,0,0,0,24.89,6.61ZM6.78,23.52a.61.61,0,0,1-.61-.6V4.47a.61.61,0,0,1,.61-.6H19.84a.61.61,0,0,1,.61.6V6.61h-8a2.8,2.8,0,0,0-2.8,2.8V23.52Zm19,3.68a.94.94,0,0,1-.94.93H12.49a.94.94,0,0,1-.94-.93V9.41a.94.94,0,0,1,.94-.93h12.4a.94.94,0,0,1,.94.93Z"/> <path d="M23.49,13.53h-9.6a.94.94,0,1,0,0,1.87h9.6a.94.94,0,1,0,0-1.87Z"/> <path d="M23.49,17.37h-9.6a.94.94,0,1,0,0,1.87h9.6a.94.94,0,1,0,0-1.87Z"/> <path d="M23.49,21.22h-9.6a.93.93,0,1,0,0,1.86h9.6a.93.93,0,1,0,0-1.86Z"/> </svg>';
                },
                29129(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M960 896q26 0 45 19t19 45-19 45-45 19-45-19-19-45 19-45 45-19zm300 64l507 398q28 20 25 56-5 35-35 51l-128 64q-13 7-29 7-17 0-31-8l-690-387-110 66q-8 4-12 5 14 49 10 97-7 77-56 147.5t-132 123.5q-132 84-277 84-136 0-222-78-90-84-79-207 7-76 56-147t131-124q132-84 278-84 83 0 151 31 9-13 22-22l122-73-122-73q-13-9-22-22-68 31-151 31-146 0-278-84-82-53-131-124t-56-147q-5-59 15.5-113t63.5-93q85-79 222-79 145 0 277 84 83 52 132 123t56 148q4 48-10 97 4 1 12 5l110 66 690-387q14-8 31-8 16 0 29 7l128 64q30 16 35 51 3 36-25 56zm-681-260q46-42 21-108t-106-117q-92-59-192-59-74 0-113 36-46 42-21 108t106 117q92 59 192 59 74 0 113-36zm-85 745q81-51 106-117t-21-108q-39-36-113-36-100 0-192 59-81 51-106 117t21 108q39 36 113 36 100 0 192-59zm178-613l96 58v-11q0-36 33-56l14-8-79-47-26 26q-3 3-10 11t-12 12q-2 2-4 3.5t-3 2.5zm224 224l96 32 736-576-128-64-768 431v113l-160 96 9 8q2 2 7 6 4 4 11 12t11 12l26 26zm704 416l128-64-520-408-177 138q-2 3-13 7z"/> </svg>';
                },
                1307(e) {
                    e.exports =
                        '<svg viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg"> <path stroke-width="0" d="M10.5 20H2a2 2 0 0 1-2-2V6c0-1.1.9-2 2-2h1V3l2.03-.4a3 3 0 0 1 5.94 0L13 3v1h1a2 2 0 0 1 2 2v1h-2V6h-1v1H3V6H2v12h5v2h3.5zM8 4a1 1 0 1 0 0-2 1 1 0 0 0 0 2zm2 4h8a2 2 0 0 1 2 2v8a2 2 0 0 1-2 2h-8a2 2 0 0 1-2-2v-8c0-1.1.9-2 2-2zm0 2v8h8v-8h-8z"/> </svg>';
                },
                58939(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 18 18"> <g fill-rule="evenodd" stroke="none" stroke-width="1"> <g transform="translate(-381.000000, -381.000000)"> <g transform="translate(381.000000, 381.000000)"> <path d="M0,2 L2,2 L2,0 C0.9,0 0,0.9 0,2 L0,2 Z M0,10 L2,10 L2,8 L0,8 L0,10 L0,10 Z M4,18 L6,18 L6,16 L4,16 L4,18 L4,18 Z M0,6 L2,6 L2,4 L0,4 L0,6 L0,6 Z M10,0 L8,0 L8,2 L10,2 L10,0 L10,0 Z M16,0 L16,2 L18,2 C18,0.9 17.1,0 16,0 L16,0 Z M2,18 L2,16 L0,16 C0,17.1 0.9,18 2,18 L2,18 Z M0,14 L2,14 L2,12 L0,12 L0,14 L0,14 Z M6,0 L4,0 L4,2 L6,2 L6,0 L6,0 Z M8,18 L10,18 L10,16 L8,16 L8,18 L8,18 Z M16,10 L18,10 L18,8 L16,8 L16,10 L16,10 Z M16,18 C17.1,18 18,17.1 18,16 L16,16 L16,18 L16,18 Z M16,6 L18,6 L18,4 L16,4 L16,6 L16,6 Z M16,14 L18,14 L18,12 L16,12 L16,14 L16,14 Z M12,18 L14,18 L14,16 L12,16 L12,18 L12,18 Z M12,2 L14,2 L14,0 L12,0 L12,2 L12,2 Z M4,14 L14,14 L14,4 L4,4 L4,14 L4,14 Z M6,6 L12,6 L12,12 L6,12 L6,6 L6,6 Z"/> </g> </g> </g> </svg>';
                },
                23129(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M896 1152q0-36-20-69-1-1-15.5-22.5t-25.5-38-25-44-21-50.5q-4-16-21-16t-21 16q-7 23-21 50.5t-25 44-25.5 38-15.5 22.5q-20 33-20 69 0 53 37.5 90.5t90.5 37.5 90.5-37.5 37.5-90.5zm512-128q0 212-150 362t-362 150-362-150-150-362q0-145 81-275 6-9 62.5-90.5t101-151 99.5-178 83-201.5q9-30 34-47t51-17 51.5 17 33.5 47q28 93 83 201.5t99.5 178 101 151 62.5 90.5q81 127 81 275z"/> </svg>';
                },
                70209(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 16 16"> <path stroke-width="0" d="M16 9v-6h-3v-1c0-0.55-0.45-1-1-1h-11c-0.55 0-1 0.45-1 1v3c0 0.55 0.45 1 1 1h11c0.55 0 1-0.45 1-1v-1h2v4h-9v2h-0.5c-0.276 0-0.5 0.224-0.5 0.5v5c0 0.276 0.224 0.5 0.5 0.5h2c0.276 0 0.5-0.224 0.5-0.5v-5c0-0.276-0.224-0.5-0.5-0.5h-0.5v-1h9zM12 3h-11v-1h11v1z"/> </svg>';
                },
                54050(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M789 559l-170 450q33 0 136.5 2t160.5 2q19 0 57-2-87-253-184-452zm-725 1105l2-79q23-7 56-12.5t57-10.5 49.5-14.5 44.5-29 31-50.5l237-616 280-724h128q8 14 11 21l205 480q33 78 106 257.5t114 274.5q15 34 58 144.5t72 168.5q20 45 35 57 19 15 88 29.5t84 20.5q6 38 6 57 0 4-.5 13t-.5 13q-63 0-190-8t-191-8q-76 0-215 7t-178 8q0-43 4-78l131-28q1 0 12.5-2.5t15.5-3.5 14.5-4.5 15-6.5 11-8 9-11 2.5-14q0-16-31-96.5t-72-177.5-42-100l-450-2q-26 58-76.5 195.5t-50.5 162.5q0 22 14 37.5t43.5 24.5 48.5 13.5 57 8.5 41 4q1 19 1 58 0 9-2 27-58 0-174.5-10t-174.5-10q-8 0-26.5 4t-21.5 4q-80 14-188 14z"/> </svg>';
                },
                76901(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1744 1408q33 0 42 18.5t-11 44.5l-126 162q-20 26-49 26t-49-26l-126-162q-20-26-11-44.5t42-18.5h80v-1024h-80q-33 0-42-18.5t11-44.5l126-162q20-26 49-26t49 26l126 162q20 26 11 44.5t-42 18.5h-80v1024h80zm-1663-1279l54 27q12 5 211 5 44 0 132-2t132-2q36 0 107.5.5t107.5.5h293q6 0 21 .5t20.5 0 16-3 17.5-9 15-17.5l42-1q4 0 14 .5t14 .5q2 112 2 336 0 80-5 109-39 14-68 18-25-44-54-128-3-9-11-48t-14.5-73.5-7.5-35.5q-6-8-12-12.5t-15.5-6-13-2.5-18-.5-16.5.5q-17 0-66.5-.5t-74.5-.5-64 2-71 6q-9 81-8 136 0 94 2 388t2 455q0 16-2.5 71.5t0 91.5 12.5 69q40 21 124 42.5t120 37.5q5 40 5 50 0 14-3 29l-34 1q-76 2-218-8t-207-10q-50 0-151 9t-152 9q-3-51-3-52v-9q17-27 61.5-43t98.5-29 78-27q19-42 19-383 0-101-3-303t-3-303v-117q0-2 .5-15.5t.5-25-1-25.5-3-24-5-14q-11-12-162-12-33 0-93 12t-80 26q-19 13-34 72.5t-31.5 111-42.5 53.5q-42-26-56-44v-383z"/> </svg>';
                },
                25223(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"><path d="M1534 189v73q0 29-18.5 61t-42.5 32q-50 0-54 1-26 6-32 31-3 11-3 64v1152q0 25-18 43t-43 18h-108q-25 0-43-18t-18-43v-1218h-143v1218q0 25-17.5 43t-43.5 18h-108q-26 0-43.5-18t-17.5-43v-496q-147-12-245-59-126-58-192-179-64-117-64-259 0-166 88-286 88-118 209-159 111-37 417-37h479q25 0 43 18t18 43z"/></svg>';
                },
                95331(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 24 24"> <path stroke-width="0" d="M22,20.6L3.4,2H8V0H0v8h2V3.4L20.6,22H16v2h8v-8h-2V20.6z M16,0v2h4.7l-6.3,6.3l1.4,1.4L22,3.5V8h2V0H16z M8.3,14.3L2,20.6V16H0v8h8v-2H3.5l6.3-6.3L8.3,14.3z"/> </svg>';
                },
                34345(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M896 960v448q0 26-19 45t-45 19-45-19l-144-144-332 332q-10 10-23 10t-23-10l-114-114q-10-10-10-23t10-23l332-332-144-144q-19-19-19-45t19-45 45-19h448q26 0 45 19t19 45zm755-672q0 13-10 23l-332 332 144 144q19 19 19 45t-19 45-45 19h-448q-26 0-45-19t-19-45v-448q0-26 19-45t45-19 45 19l144 144 332-332q10-10 23-10t23 10l114 114q10 10 10 23z"/> </svg>';
                },
                85487(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1600 736v192q0 40-28 68t-68 28h-1216q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h1216q40 0 68 28t28 68z"/> </svg>';
                },
                25249(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M576 576q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1024 384v448h-1408v-192l320-320 160 160 512-512zm96-704h-1600q-13 0-22.5 9.5t-9.5 22.5v1216q0 13 9.5 22.5t22.5 9.5h1600q13 0 22.5-9.5t9.5-22.5v-1216q0-13-9.5-22.5t-22.5-9.5zm160 32v1216q0 66-47 113t-113 47h-1600q-66 0-113-47t-47-113v-1216q0-66 47-113t113-47h1600q66 0 113 47t47 113z"/> </svg>';
                },
                38471(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M352 832q0 14-9 23l-288 288q-9 9-23 9-13 0-22.5-9.5t-9.5-22.5v-576q0-13 9.5-22.5t22.5-9.5q14 0 23 9l288 288q9 9 9 23zm1440 480v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z"/> </svg>';
                },
                10580(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M384 544v576q0 13-9.5 22.5t-22.5 9.5q-14 0-23-9l-288-288q-9-9-9-23t9-23l288-288q9-9 23-9 13 0 22.5 9.5t9.5 22.5zm1408 768v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1088q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1088q13 0 22.5 9.5t9.5 22.5zm0-384v192q0 13-9.5 22.5t-22.5 9.5h-1728q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1728q13 0 22.5 9.5t9.5 22.5z"/> </svg>';
                },
                28972(e) {
                    e.exports =
                        '<svg viewBox="0 0 18.151 18.151" xmlns="http://www.w3.org/2000/svg"> <g> <path stroke-width="0" d="M6.237,16.546H3.649V1.604h5.916v5.728c0.474-0.122,0.968-0.194,1.479-0.194 c0.042,0,0.083,0.006,0.125,0.006V0H2.044v18.15h5.934C7.295,17.736,6.704,17.19,6.237,16.546z"/> <path stroke-width="0" d="M11.169,8.275c-2.723,0-4.938,2.215-4.938,4.938s2.215,4.938,4.938,4.938s4.938-2.215,4.938-4.938 S13.892,8.275,11.169,8.275z M11.169,16.81c-1.983,0-3.598-1.612-3.598-3.598c0-1.983,1.614-3.597,3.598-3.597 s3.597,1.613,3.597,3.597C14.766,15.198,13.153,16.81,11.169,16.81z"/> <polygon stroke-width="0" points="11.792,11.073 10.502,11.073 10.502,12.578 9.03,12.578 9.03,13.868 10.502,13.868 10.502,15.352 11.792,15.352 11.792,13.868 13.309,13.868 13.309,12.578 11.792,12.578 "/> </g> </svg>';
                },
                40732(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 432 432"> <g> <polygon points="203.688,96 0,96 0,144 155.688,144 "/> <polygon points="155.719,288 0,288 0,336 203.719,336 "/> <path d="M97.844,230.125c-3.701-3.703-5.856-8.906-5.856-14.141s2.154-10.438,5.856-14.141l9.844-9.844H0v48h107.719 L97.844,230.125z"/> <polygon points="232,176 232,96 112,216 232,336 232,256 432,256 432,176"/> </g> </svg>';
                },
                39822(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 312 312"> <g transform="translate(0.000000,312.000000) scale(0.100000,-0.100000)" stroke="none"> <path d="M50 3109 c0 -7 -11 -22 -25 -35 l-25 -23 0 -961 0 -961 32 -29 32 -30 501 -2 500 -3 3 -502 2 -502 31 -30 31 -31 958 0 958 0 23 25 c13 13 30 25 37 25 9 0 12 199 12 960 0 686 -3 960 -11 960 -6 0 -24 12 -40 28 l-29 27 -503 5 -502 5 -5 502 -5 503 -28 29 c-15 16 -27 34 -27 40 0 8 -274 11 -960 11 -710 0 -960 -3 -960 -11z m1738 -698 l2 -453 -40 -40 c-22 -22 -40 -43 -40 -47 0 -4 36 -42 79 -85 88 -87 82 -87 141 -23 l26 27 455 -2 454 -3 0 -775 0 -775 -775 0 -775 0 -3 450 -2 449 47 48 47 48 -82 80 c-44 44 -84 80 -87 80 -3 0 -25 -18 -48 -40 l-41 -40 -456 2 -455 3 -3 765 c-1 421 0 771 3 778 3 10 164 12 777 10 l773 -3 3 -454z"/> <path d="M607 2492 c-42 -42 -77 -82 -77 -87 0 -6 86 -96 190 -200 105 -104 190 -197 190 -205 0 -8 -41 -56 -92 -107 -65 -65 -87 -94 -77 -98 8 -3 138 -4 289 -3 l275 3 3 275 c1 151 0 281 -3 289 -4 10 -35 -14 -103 -82 -54 -53 -103 -97 -109 -97 -7 0 -99 88 -206 195 -107 107 -196 195 -198 195 -3 0 -39 -35 -82 -78z"/> <path d="M1470 1639 c-47 -49 -87 -91 -89 -94 -5 -6 149 -165 160 -165 9 0 189 179 189 188 0 12 -154 162 -165 161 -6 0 -48 -41 -95 -90z"/> <path d="M1797 1303 c-9 -8 -9 -568 0 -576 4 -4 50 36 103 88 54 52 101 95 106 95 5 0 95 -85 199 -190 104 -104 194 -190 200 -190 6 0 46 36 90 80 l79 79 -197 196 c-108 108 -197 199 -197 203 0 4 45 52 99 106 55 55 98 103 95 108 -6 10 -568 11 -577 1z"/> </g> </svg>';
                },
                62724(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 48 48"> <path d="M6 42h4v-4h-4v4zm4-28h-4v4h4v-4zm-4 20h4v-4h-4v4zm8 8h4v-4h-4v4zm-4-36h-4v4h4v-4zm8 0h-4v4h4v-4zm16 0h-4v4h4v-4zm-8 8h-4v4h4v-4zm0-8h-4v4h4v-4zm12 28h4v-4h-4v4zm-16 8h4v-4h-4v4zm-16-16h36v-4h-36v4zm32-20v4h4v-4h-4zm0 12h4v-4h-4v4zm-16 16h4v-4h-4v4zm8 8h4v-4h-4v4zm8 0h4v-4h-4v4z"/> <path d="M0 0h48v48h-48z" fill="none"/> </svg>';
                },
                4087(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 48 48"> <path d="M6 18h4v-4h-4v4zm0-8h4v-4h-4v4zm8 32h4v-4h-4v4zm0-16h4v-4h-4v4zm-8 0h4v-4h-4v4zm0 16h4v-4h-4v4zm0-8h4v-4h-4v4zm8-24h4v-4h-4v4zm24 24h4v-4h-4v4zm-16 8h4v-36h-4v36zm16 0h4v-4h-4v4zm0-16h4v-4h-4v4zm0-20v4h4v-4h-4zm0 12h4v-4h-4v4zm-8-8h4v-4h-4v4zm0 32h4v-4h-4v4zm0-16h4v-4h-4v4z"/> <path d="M0 0h48v48h-48z" fill="none"/> </svg>';
                },
                16500(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm1280 512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zm-1280-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm1280 512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h960q40 0 68 28t28 68z"/> </svg>';
                },
                59203(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M512 1248v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm-640-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm-640-1024v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm640 512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68zm0-512v192q0 40-28 68t-68 28h-320q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h320q40 0 68 28t28 68z"/> </svg>';
                },
                88145(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45z"/> </svg>';
                },
                21702(e) {
                    e.exports =
                        '<svg viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg"> <path d="M5.09668 6.99707H7.17358L4.17358 3.99707L1.17358 6.99707H3.09668V17.0031H1.15881L4.15881 20.0031L7.15881 17.0031H5.09668V6.99707Z"/> <path d="M22.8412 7H8.84119V5H22.8412V7Z"/> <path d="M22.8412 11H8.84119V9H22.8412V11Z"/> <path d="M8.84119 15H22.8412V13H8.84119V15Z"/> <path d="M22.8412 19H8.84119V17H22.8412V19Z"/> </svg>';
                },
                40364(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1520 1216q0-40-28-68l-208-208q-28-28-68-28-42 0-72 32 3 3 19 18.5t21.5 21.5 15 19 13 25.5 3.5 27.5q0 40-28 68t-68 28q-15 0-27.5-3.5t-25.5-13-19-15-21.5-21.5-18.5-19q-33 31-33 73 0 40 28 68l206 207q27 27 68 27 40 0 68-26l147-146q28-28 28-67zm-703-705q0-40-28-68l-206-207q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l208 208q27 27 68 27 42 0 72-31-3-3-19-18.5t-21.5-21.5-15-19-13-25.5-3.5-27.5q0-40 28-68t68-28q15 0 27.5 3.5t25.5 13 19 15 21.5 21.5 18.5 19q33-31 33-73zm895 705q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-206-207q-83-83-83-203 0-123 88-209l-88-88q-86 88-208 88-120 0-204-84l-208-208q-84-84-84-204t85-203l147-146q83-83 203-83 121 0 204 85l206 207q83 83 83 203 0 123-88 209l88 88q86-88 208-88 120 0 204 84l208 208q84 84 84 204z"/> </svg>';
                },
                33178(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M503 1271l-256 256q-10 9-23 9-12 0-23-9-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23zm169 41v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm-224-224q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm1264 128q0 120-85 203l-147 146q-83 83-203 83-121 0-204-85l-334-335q-21-21-42-56l239-18 273 274q27 27 68 27.5t68-26.5l147-146q28-28 28-67 0-40-28-68l-274-275 18-239q35 21 56 42l336 336q84 86 84 204zm-617-724l-239 18-273-274q-28-28-68-28-39 0-68 27l-147 146q-28 28-28 67 0 40 28 68l274 274-18 240q-35-21-56-42l-336-336q-84-86-84-204 0-120 85-203l147-146q83-83 203-83 121 0 204 85l334 335q21 21 42 56zm633 84q0 14-9 23t-23 9h-320q-14 0-23-9t-9-23 9-23 23-9h320q14 0 23 9t9 23zm-544-544v320q0 14-9 23t-23 9-23-9-9-23v-320q0-14 9-23t23-9 23 9 9 23zm407 151l-256 256q-11 9-23 9t-23-9q-9-10-9-23t9-23l256-256q10-9 23-9t23 9q9 10 9 23t-9 23z"/> </svg>';
                },
                8681(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path stroke-width="0" d="M381 1620q0 80-54.5 126t-135.5 46q-106 0-172-66l57-88q49 45 106 45 29 0 50.5-14.5t21.5-42.5q0-64-105-56l-26-56q8-10 32.5-43.5t42.5-54 37-38.5v-1q-16 0-48.5 1t-48.5 1v53h-106v-152h333v88l-95 115q51 12 81 49t30 88zm2-627v159h-362q-6-36-6-54 0-51 23.5-93t56.5-68 66-47.5 56.5-43.5 23.5-45q0-25-14.5-38.5t-39.5-13.5q-46 0-81 58l-85-59q24-51 71.5-79.5t105.5-28.5q73 0 123 41.5t50 112.5q0 50-34 91.5t-75 64.5-75.5 50.5-35.5 52.5h127v-60h105zm1409 319v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm-1408-899v99h-335v-99h107q0-41 .5-122t.5-121v-12h-2q-8 17-50 54l-71-76 136-127h106v404h108zm1408 387v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-14 9-23t23-9h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z"/> </svg>';
                },
                1513(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path stroke-width="0" d="M384 1408q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm0-512q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm-1408-928q0 80-56 136t-136 56-136-56-56-136 56-136 136-56 136 56 56 136zm1408 416v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5zm0-512v192q0 13-9.5 22.5t-22.5 9.5h-1216q-13 0-22.5-9.5t-9.5-22.5v-192q0-13 9.5-22.5t22.5-9.5h1216q13 0 22.5 9.5t9.5 22.5z"/> </svg>';
                },
                94460(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M448 1536h896v-256h-896v256zm0-640h896v-384h-160q-40 0-68-28t-28-68v-160h-640v640zm1152 64q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm128 0v416q0 13-9.5 22.5t-22.5 9.5h-224v160q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-160h-224q-13 0-22.5-9.5t-9.5-22.5v-416q0-79 56.5-135.5t135.5-56.5h64v-544q0-40 28-68t68-28h672q40 0 88 20t76 48l152 152q28 28 48 76t20 88v256h64q79 0 135.5 56.5t56.5 135.5z"/> </svg>';
                },
                19780(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1664 256v448q0 26-19 45t-45 19h-448q-42 0-59-40-17-39 14-69l138-138q-148-137-349-137-104 0-198.5 40.5t-163.5 109.5-109.5 163.5-40.5 198.5 40.5 198.5 109.5 163.5 163.5 109.5 198.5 40.5q119 0 225-52t179-147q7-10 23-12 14 0 25 9l137 138q9 8 9.5 20.5t-7.5 22.5q-109 132-264 204.5t-327 72.5q-156 0-298-61t-245-164-164-245-61-298 61-298 164-245 245-164 298-61q147 0 284.5 55.5t244.5 156.5l130-129q29-31 70-14 39 17 39 59z"/> </svg>';
                },
                6309(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1664 896q0 156-61 298t-164 245-245 164-298 61q-172 0-327-72.5t-264-204.5q-7-10-6.5-22.5t8.5-20.5l137-138q10-9 25-9 16 2 23 12 73 95 179 147t225 52q104 0 198.5-40.5t163.5-109.5 109.5-163.5 40.5-198.5-40.5-198.5-109.5-163.5-163.5-109.5-198.5-40.5q-98 0-188 35.5t-160 101.5l137 138q31 30 14 69-17 40-59 40h-448q-26 0-45-19t-19-45v-448q0-42 40-59 39-17 69 14l130 129q107-101 244.5-156.5t284.5-55.5q156 0 298 61t245 164 164 245 61 298z"/> </svg>';
                },
                2251(e) {
                    e.exports =
                        '<svg viewBox="0 0 500 500" xmlns="http://www.w3.org/2000/svg"> <path clip-rule="evenodd" d="M306.39,154.09c19.628,4.543,35.244,21.259,39.787,39.523 c1.551,8.54,8.998,14.989,17.904,14.989c9.991,0,18.168-8.175,18.168-18.17c0-13.083-10.991-32.98-25.985-47.881 c-14.719-14.537-32.252-24.802-46.695-24.802c-9.991,0-18.172,8.45-18.172,18.446C291.396,145.094,297.847,152.546,306.39,154.09z M56.629,392.312c-14.09,14.08-14.09,36.979,0,51.059c14.08,14.092,36.981,14.092,50.965,0l104.392-104.303 c24.347,15.181,53.062,23.991,83.953,23.991c87.857,0,158.995-71.142,158.995-158.999c0-87.854-71.138-158.995-158.995-158.995 c-87.856,0-158.995,71.141-158.995,158.995c0,30.802,8.819,59.606,23.992,83.953L56.629,392.312z M182.371,204.06 c0-62.687,50.875-113.568,113.568-113.568s113.569,50.881,113.569,113.568c0,62.694-50.876,113.569-113.569,113.569 S182.371,266.754,182.371,204.06z" fill-rule="evenodd"/> </svg>';
                },
                88858(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M553 1399l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23t-10 23l-393 393 393 393q10 10 10 23t-10 23zm591-1067l-373 1291q-4 13-15.5 19.5t-23.5 2.5l-62-17q-13-4-19.5-15.5t-2.5-24.5l373-1291q4-13 15.5-19.5t23.5-2.5l62 17q13 4 19.5 15.5t2.5 24.5zm657 651l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23t-10 23z"/> </svg>';
                },
                16054(e) {
                    e.exports =
                        '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"> <path d="M24.89 32h4.18L18.86 6h-3.71L4.93 32h4.18l2.25-6h11.29l2.24 6zM12.86 22L17 10.95 21.14 22h-8.28zm30.31 1.17L27 39.34 19.66 32l-2.83 2.83L27 45l19-19-2.83-2.83z"/> </svg>';
                },
                41087(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 270 270"> <path d="m240.443652,220.45085l-47.410809,0l0,-10.342138c13.89973,-8.43655 25.752896,-19.844464 34.686646,-33.469923c11.445525,-17.455846 17.496072,-37.709239 17.496072,-58.570077c0,-59.589197 -49.208516,-108.068714 -109.693558,-108.068714s-109.69263,48.479517 -109.69263,108.069628c0,20.860839 6.050547,41.113316 17.497001,58.570077c8.93375,13.625459 20.787845,25.032458 34.686646,33.469008l0,10.342138l-47.412666,0c-10.256959,0 -18.571354,8.191376 -18.571354,18.296574c0,10.105198 8.314395,18.296574 18.571354,18.296574l65.98402,0c10.256959,0 18.571354,-8.191376 18.571354,-18.296574l0,-39.496814c0,-7.073455 -4.137698,-13.51202 -10.626529,-16.537358c-25.24497,-11.772016 -41.557118,-37.145704 -41.557118,-64.643625c0,-39.411735 32.545369,-71.476481 72.549922,-71.476481c40.004553,0 72.550851,32.064746 72.550851,71.476481c0,27.497006 -16.312149,52.87161 -41.557118,64.643625c-6.487902,3.026253 -10.6256,9.464818 -10.6256,16.537358l0,39.496814c0,10.105198 8.314395,18.296574 18.571354,18.296574l65.982163,0c10.256959,0 18.571354,-8.191376 18.571354,-18.296574c0,-10.105198 -8.314395,-18.296574 -18.571354,-18.296574z"/> </svg>';
                },
                46430(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M576 1376v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm-512-768v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm512 384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm0-384v-192q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v192q0 14 9 23t23 9h320q14 0 23-9t9-23zm128-320v1088q0 66-47 113t-113 47h-1344q-66 0-113-47t-47-113v-1088q0-66 47-113t113-47h1344q66 0 113 47t47 113z"/> </svg>';
                },
                78606(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 352v1088q0 42-39 59-13 5-25 5-27 0-45-19l-403-403v166q0 119-84.5 203.5t-203.5 84.5h-704q-119 0-203.5-84.5t-84.5-203.5v-704q0-119 84.5-203.5t203.5-84.5h704q119 0 203.5 84.5t84.5 203.5v165l403-402q18-19 45-19 12 0 25 5 39 17 39 59z"/> </svg>';
                },
                61764(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1395 736q0 13-10 23l-466 466q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l393 393 393-393q10-10 23-10t23 10l50 50q10 10 10 23z"/> </svg>';
                },
                5886(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1203 544q0 13-10 23l-393 393 393 393q10 10 10 23t-10 23l-50 50q-10 10-23 10t-23-10l-466-466q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l50 50q10 10 10 23z"/> </svg>';
                },
                26957(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1171 960q0 13-10 23l-466 466q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l393-393-393-393q-10-10-10-23t10-23l50-50q10-10 23-10t23 10l466 466q10 10 10 23z"/> </svg>';
                },
                86979(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1395 1184q0 13-10 23l-50 50q-10 10-23 10t-23-10l-393-393-393 393q-10 10-23 10t-23-10l-50-50q-10-10-10-23t10-23l466-466q10-10 23-10t23 10l466 466q10 10 10 23z"/> </svg>';
                },
                9678(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M704 1376v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm256 0v-704q0-14-9-23t-23-9h-64q-14 0-23 9t-9 23v704q0 14 9 23t23 9h64q14 0 23-9t9-23zm-544-992h448l-48-117q-7-9-17-11h-317q-10 2-17 11zm928 32v64q0 14-9 23t-23 9h-96v948q0 83-47 143.5t-113 60.5h-832q-66 0-113-58.5t-47-141.5v-952h-96q-14 0-23-9t-9-23v-64q0-14 9-23t23-9h309l70-167q15-37 54-63t79-26h320q40 0 79 26t54 63l70 167h309q14 0 23 9t9 23z"/> </svg>';
                },
                39606(e) {
                    e.exports =
                        '<svg viewBox="0 0 14 14" xmlns="http://www.w3.org/2000/svg"> <g stroke="none" stroke-width="1"> <path d="M14,1.4 L12.6,0 L7,5.6 L1.4,0 L0,1.4 L5.6,7 L0,12.6 L1.4,14 L7,8.4 L12.6,14 L14,12.6 L8.4,7 L14,1.4 Z"/> </g> </svg>';
                },
                20435(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-896q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h896q26 0 45 19t19 45zm256-384v128q0 26-19 45t-45 19h-1408q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1408q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-640q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h640q26 0 45 19t19 45z"/> </svg>';
                },
                12005(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1472 930v318q0 119-84.5 203.5t-203.5 84.5h-832q-119 0-203.5-84.5t-84.5-203.5v-832q0-119 84.5-203.5t203.5-84.5h832q63 0 117 25 15 7 18 23 3 17-9 29l-49 49q-10 10-23 10-3 0-9-2-23-6-45-6h-832q-66 0-113 47t-47 113v832q0 66 47 113t113 47h832q66 0 113-47t47-113v-254q0-13 9-22l64-64q10-10 23-10 6 0 12 3 20 8 20 29zm231-489l-814 814q-24 24-57 24t-57-24l-430-430q-24-24-24-57t24-57l110-110q24-24 57-24t57 24l263 263 647-647q24-24 57-24t57 24l110 110q24 24 24 57t-24 57z"/> </svg>';
                },
                49295(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 10 10"> <path d="M.941 4.523a.75.75 0 1 1 1.06-1.06l3.006 3.005 3.005-3.005a.75.75 0 1 1 1.06 1.06l-3.549 3.55a.75.75 0 0 1-1.168-.136L.941 4.523z"/> </svg>';
                },
                12637(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 24 24" > <circle cx="12" cy="12" r="2.2"/> <circle cx="12" cy="5" r="2.2"/> <circle cx="12" cy="19" r="2.2"/> </svg>';
                },
                68115(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1664 960q-152-236-381-353 61 104 61 225 0 185-131.5 316.5t-316.5 131.5-316.5-131.5-131.5-316.5q0-121 61-225-229 117-381 353 133 205 333.5 326.5t434.5 121.5 434.5-121.5 333.5-326.5zm-720-384q0-20-14-34t-34-14q-125 0-214.5 89.5t-89.5 214.5q0 20 14 34t34 14 34-14 14-34q0-86 61-147t147-61q20 0 34-14t14-34zm848 384q0 34-20 69-140 230-376.5 368.5t-499.5 138.5-499.5-139-376.5-368q-20-35-20-69t20-69q140-229 376.5-368t499.5-139 499.5 139 376.5 368q20 35 20 69z"/> </svg>';
                },
                68490(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1152 512v-472q22 14 36 28l408 408q14 14 28 36h-472zm-128 32q0 40 28 68t68 28h544v1056q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1600q0-40 28-68t68-28h800v544z"/> </svg>';
                },
                23948(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1728 608v704q0 92-66 158t-158 66h-1216q-92 0-158-66t-66-158v-960q0-92 66-158t158-66h320q92 0 158 66t66 158v32h672q92 0 158 66t66 158z"/> </svg>';
                },
                22144(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1152 1376v-160q0-14-9-23t-23-9h-96v-512q0-14-9-23t-23-9h-320q-14 0-23 9t-9 23v160q0 14 9 23t23 9h96v320h-96q-14 0-23 9t-9 23v160q0 14 9 23t23 9h448q14 0 23-9t9-23zm-128-896v-160q0-14-9-23t-23-9h-192q-14 0-23 9t-9 23v160q0 14 9 23t23 9h192q14 0 23-9t9-23zm640 416q0 209-103 385.5t-279.5 279.5-385.5 103-385.5-103-279.5-279.5-103-385.5 103-385.5 279.5-279.5 385.5-103 385.5 103 279.5 279.5 103 385.5z"/> </svg>';
                },
                2895(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zm256-384v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zm-384-384v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z"/> </svg>';
                },
                69072(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"><path d="M640 768h512v-192q0-106-75-181t-181-75-181 75-75 181v192zm832 96v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h32v-192q0-184 132-316t316-132 316 132 132 316v192h32q40 0 68 28t28 68z"/></svg>';
                },
                92475(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 32 32"> <path d="M27 4l-15 15-7-7-5 5 12 12 20-20z"/> </svg>';
                },
                93324(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"><path d="M491 1536l91-91-235-235-91 91v107h128v128h107zm523-928q0-22-22-22-10 0-17 7l-542 542q-7 7-7 17 0 22 22 22 10 0 17-7l542-542q7-7 7-17zm-54-192l416 416-832 832h-416v-416zm683 96q0 53-37 90l-166 166-416-416 166-165q36-38 90-38 53 0 91 38l235 234q37 39 37 91z"/></svg>';
                },
                47680(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"><path d="M1600 736v192q0 40-28 68t-68 28h-416v416q0 40-28 68t-68 28h-192q-40 0-68-28t-28-68v-416h-416q-40 0-68-28t-28-68v-192q0-40 28-68t68-28h416v-416q0-40 28-68t68-28h192q40 0 68 28t28 68v416h416q40 0 68 28t28 68z"/></svg>';
                },
                55793(e) {
                    e.exports =
                        '<svg viewBox="0 0 13 13" xmlns="http://www.w3.org/2000/svg"> <path d="M5.9814 11.8049C5.59087 11.4144 5.59087 10.7812 5.9814 10.3907L10.224 6.14806C10.6146 5.75754 11.2477 5.75754 11.6383 6.14806C12.0288 6.53859 12.0288 7.17175 11.6383 7.56228L7.39561 11.8049C7.00509 12.1954 6.37192 12.1954 5.9814 11.8049Z"/> <path d="M0.707107 12.0208C0.316582 11.6303 0.316582 10.9971 0.707107 10.6066L10.6066 0.707121C10.9971 0.316597 11.6303 0.316596 12.0208 0.707121C12.4113 1.09764 12.4113 1.73081 12.0208 2.12133L2.12132 12.0208C1.7308 12.4114 1.09763 12.4114 0.707107 12.0208Z"/> </svg>';
                },
                93894(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1792 1344v128q0 26-19 45t-45 19h-1664q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1664q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1280q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1280q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1536q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1536q26 0 45 19t19 45zm0-384v128q0 26-19 45t-45 19h-1152q-26 0-45-19t-19-45v-128q0-26 19-45t45-19h1152q26 0 45 19t19 45z"/> </svg>';
                },
                84916(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M512 1536h768v-384h-768v384zm896 0h128v-896q0-14-10-38.5t-20-34.5l-281-281q-10-10-34-20t-39-10v416q0 40-28 68t-68 28h-576q-40 0-68-28t-28-68v-416h-128v1280h128v-416q0-40 28-68t68-28h832q40 0 68 28t28 68v416zm-384-928v-320q0-13-9.5-22.5t-22.5-9.5h-192q-13 0-22.5 9.5t-9.5 22.5v320q0 13 9.5 22.5t22.5 9.5h192q13 0 22.5-9.5t9.5-22.5zm640 32v928q0 40-28 68t-68 28h-1344q-40 0-68-28t-28-68v-1344q0-40 28-68t68-28h928q40 0 88 20t76 48l280 280q28 28 48 76t20 88z"/> </svg>';
                },
                58315(e) {
                    e.exports =
                        '<svg viewBox="0 0 48 48" xmlns="http://www.w3.org/2000/svg"> <path stroke="null" d="m42.276011,26.302547c0.098397,-0.76605 0.172194,-1.54407 0.172194,-2.33406s-0.073797,-1.56801 -0.172194,-2.33406l5.202718,-3.961917c0.467384,-0.359086 0.602679,-1.005441 0.29519,-1.532101l-4.919828,-8.29489c-0.307489,-0.51469 -0.947067,-0.730142 -1.500548,-0.51469l-6.125186,2.405877c-1.266856,-0.945594 -2.656707,-1.747553 -4.157255,-2.357999l-0.922468,-6.343855c-0.110696,-0.562568 -0.614979,-1.005441 -1.229957,-1.005441l-9.839656,0c-0.614979,0 -1.119261,0.442873 -1.217657,1.005441l-0.922468,6.343855c-1.500548,0.610446 -2.890399,1.400436 -4.157255,2.357999l-6.125186,-2.405877c-0.553481,-0.203482 -1.193058,0 -1.500548,0.51469l-4.919828,8.29489c-0.307489,0.51469 -0.172194,1.161045 0.29519,1.532101l5.190419,3.961917c-0.098397,0.76605 -0.172194,1.54407 -0.172194,2.33406s0.073797,1.56801 0.172194,2.33406l-5.190419,3.961917c-0.467384,0.359086 -0.602679,1.005441 -0.29519,1.532101l4.919828,8.29489c0.307489,0.51469 0.947067,0.730142 1.500548,0.51469l6.125186,-2.405877c1.266856,0.945594 2.656707,1.747553 4.157255,2.357999l0.922468,6.343855c0.098397,0.562568 0.602679,1.005441 1.217657,1.005441l9.839656,0c0.614979,0 1.119261,-0.442873 1.217657,-1.005441l0.922468,-6.343855c1.500548,-0.610446 2.890399,-1.400436 4.157255,-2.357999l6.125186,2.405877c0.553481,0.203482 1.193058,0 1.500548,-0.51469l4.919828,-8.29489c0.307489,-0.51469 0.172194,-1.161045 -0.29519,-1.532101l-5.190419,-3.961917zm-18.277162,6.044617c-4.759934,0 -8.609699,-3.746465 -8.609699,-8.378677s3.849766,-8.378677 8.609699,-8.378677s8.609699,3.746465 8.609699,8.378677s-3.849766,8.378677 -8.609699,8.378677z"/> </svg>';
                },
                27669(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1728 576v256q0 26-19 45t-45 19h-64q-26 0-45-19t-19-45v-256q0-106-75-181t-181-75-181 75-75 181v192h96q40 0 68 28t28 68v576q0 40-28 68t-68 28h-960q-40 0-68-28t-28-68v-576q0-40 28-68t68-28h672v-192q0-185 131.5-316.5t316.5-131.5 316.5 131.5 131.5 316.5z"/> </svg>';
                },
                1274(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1639 1056q0 5-1 7-64 268-268 434.5t-478 166.5q-146 0-282.5-55t-243.5-157l-129 129q-19 19-45 19t-45-19-19-45v-448q0-26 19-45t45-19h448q26 0 45 19t19 45-19 45l-137 137q71 66 161 102t187 36q134 0 250-65t186-179q11-17 53-117 8-23 30-23h192q13 0 22.5 9.5t9.5 22.5zm25-800v448q0 26-19 45t-45 19h-448q-26 0-45-19t-19-45 19-45l138-138q-148-137-349-137-134 0-250 65t-186 179q-11 17-53 117-8 23-30 23h-199q-13 0-22.5-9.5t-9.5-22.5v-7q65-268 270-434.5t480-166.5q146 0 284 55.5t245 156.5l130-129q19-19 45-19t45 19 19 45z"/> </svg>';
                },
                32039(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1344 1472q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm256 0q0-26-19-45t-45-19-45 19-19 45 19 45 45 19 45-19 19-45zm128-224v320q0 40-28 68t-68 28h-1472q-40 0-68-28t-28-68v-320q0-40 28-68t68-28h427q21 56 70.5 92t110.5 36h256q61 0 110.5-36t70.5-92h427q40 0 68 28t28 68zm-325-648q-17 40-59 40h-256v448q0 26-19 45t-45 19h-256q-26 0-45-19t-19-45v-448h-256q-42 0-59-40-17-39 14-69l448-448q18-19 45-19t45 19l448 448q31 30 14 69z"/> </svg>';
                },
                42215(e) {
                    e.exports =
                        '<svg xmlns=\'http://www.w3.org/2000/svg\' viewBox="0 0 1792 1792"> <path d="M1216 320q0 26-19 45t-45 19h-128v1024h128q26 0 45 19t19 45-19 45l-256 256q-19 19-45 19t-45-19l-256-256q-19-19-19-45t19-45 45-19h128v-1024h-128q-26 0-45-19t-19-45 19-45l256-256q19-19 45-19t45 19l256 256q19 19 19 45z"/> </svg>';
                },
                64364(e) {
                    e.exports = { "copy-format": "نسخ التنسيق" };
                },
                99982(e) {
                    e.exports = { "copy-format": "Kopírovat formát" };
                },
                20746(e) {
                    e.exports = { "copy-format": "Format kopierenт" };
                },
                37215(e) {
                    e.exports = { "copy-format": "Copiar formato" };
                },
                88559(e) {
                    e.exports = { "copy-format": "کپی کردن قالب" };
                },
                69346(e) {
                    e.exports = { "copy-format": "Format de copie" };
                },
                6127(e) {
                    e.exports = { "copy-format": "העתק עיצוב" };
                },
                74340(e) {
                    e.exports = { "copy-format": "Formátum másolás" };
                },
                29999(e) {
                    e.exports = { "copy-format": "salin format" };
                },
                52210(e) {
                    e.exports = { "copy-format": "Copia il formato" };
                },
                60420(e) {
                    e.exports = { "copy-format": "copyformat" };
                },
                52096(e) {
                    e.exports = { "copy-format": "복사 형식" };
                },
                32257(e) {
                    e.exports = { "copy-format": "opmaak kopiëren" };
                },
                94887(e) {
                    e.exports = { "copy-format": "format kopii" };
                },
                14704(e) {
                    e.exports = { "copy-format": "Copiar formato" };
                },
                65108(e) {
                    e.exports = { "copy-format": "Копировать формат" };
                },
                44704(e) {
                    e.exports = { "copy-format": "Kopyalama Biçimi" };
                },
                13100(e) {
                    e.exports = { "copy-format": "复制格式" };
                },
                59483(e) {
                    e.exports = { "copy-format": "複製格式" };
                },
                7713(e) {
                    e.exports = { "Line height": "ارتفاع الخط" };
                },
                79457(e) {
                    e.exports = { "Line height": "Výška čáry" };
                },
                95551(e) {
                    e.exports = { "Line height": "Zeilenhöhe" };
                },
                86184(e) {
                    e.exports = { "Line height": "Altura de la línea" };
                },
                43418(e) {
                    e.exports = { "Line height": "ارتفاع خط" };
                },
                65643(e) {
                    e.exports = { "Line height": "Hauteur de ligne" };
                },
                96250(e) {
                    e.exports = { "Line height": "גובה שורה" };
                },
                8754(e) {
                    e.exports = { "Line height": "Vonal magassága" };
                },
                99271(e) {
                    e.exports = { "Line height": "Tinggi baris" };
                },
                26080(e) {
                    e.exports = { "Line height": "Altezza linea" };
                },
                23267(e) {
                    e.exports = { "Line height": "ラインの高さ" };
                },
                70074(e) {
                    e.exports = { "Line height": "선 높이" };
                },
                51419(e) {
                    e.exports = { "Line height": "Lijnhoogte" };
                },
                38179(e) {
                    e.exports = { "Line height": "Wysokość linii" };
                },
                61707(e) {
                    e.exports = { "Line height": "Altura da linha" };
                },
                15035(e) {
                    e.exports = { "Line height": "Высота линии" };
                },
                28048(e) {
                    e.exports = { "Line height": "Çizgi yüksekliği" };
                },
                72647(e) {
                    e.exports = { "Line height": "线高" };
                },
                65107(e) {
                    e.exports = { "Line height": "ความสูงเส้น" };
                },
                97871(e) {
                    e.exports = { Spellcheck: "التدقيق الإملائي" };
                },
                30689(e) {
                    e.exports = { Spellcheck: "Kontrola pravopisu" };
                },
                80242(e) {
                    e.exports = { Spellcheck: "Rechtschreibprüfung" };
                },
                18338(e) {
                    e.exports = { Spellcheck: "Corrección ortográfica" };
                },
                30402(e) {
                    e.exports = { Spellcheck: "غلطیابی املایی" };
                },
                64941(e) {
                    e.exports = { Spellcheck: "Vérification Orthographique" };
                },
                58543(e) {
                    e.exports = { Spellcheck: "בדיקת איות" };
                },
                63504(e) {
                    e.exports = { Spellcheck: "Helyesírás-ellenőrzés" };
                },
                44927(e) {
                    e.exports = { Spellcheck: "Spellchecking" };
                },
                79211(e) {
                    e.exports = { Spellcheck: "Controllo ortografico" };
                },
                8903(e) {
                    e.exports = { Spellcheck: "スペルチェック" };
                },
                68537(e) {
                    e.exports = { Spellcheck: "맞춤법 검사" };
                },
                91597(e) {
                    e.exports = { Spellcheck: "Spellingcontrole" };
                },
                52608(e) {
                    e.exports = { Spellcheck: "Sprawdzanie pisowni" };
                },
                51529(e) {
                    e.exports = { Spellcheck: "Verificação ortográfica" };
                },
                72924(e) {
                    e.exports = { Spellcheck: "Проверка орфографии" };
                },
                19366(e) {
                    e.exports = { Spellcheck: "Yazım denetimi" };
                },
                54398(e) {
                    e.exports = { Spellcheck: "拼写检查" };
                },
                84052(e) {
                    e.exports = { Spellcheck: "สะกดคำ" };
                },
                54942(e) {
                    e.exports = { symbols: "رمز" };
                },
                91982(e) {
                    e.exports = { symbols: "symbol" };
                },
                67793(e) {
                    e.exports = { symbols: "Symbol" };
                },
                73246(e) {
                    e.exports = { symbols: "Símbolo" };
                },
                83233(e) {
                    e.exports = { symbols: "سمبل" };
                },
                40695(e) {
                    e.exports = { symbols: "caractère" };
                },
                18732(e) {
                    e.exports = { symbols: "תו מיוחד" };
                },
                14389(e) {
                    e.exports = { symbols: "Szimbólum" };
                },
                49571(e) {
                    e.exports = { symbols: "simbol" };
                },
                59462(e) {
                    e.exports = { symbols: "Simbolo" };
                },
                53146(e) {
                    e.exports = { symbols: "symbol" };
                },
                70124(e) {
                    e.exports = { symbols: "기호" };
                },
                62202(e) {
                    e.exports = { symbols: "symbool" };
                },
                56803(e) {
                    e.exports = { symbols: "symbol" };
                },
                17431(e) {
                    e.exports = { symbols: "Símbolo" };
                },
                14556(e) {
                    e.exports = { symbols: "символ" };
                },
                87539(e) {
                    e.exports = { symbols: "Sembol" };
                },
                34929(e) {
                    e.exports = { symbols: "符号" };
                },
                47996(e) {
                    e.exports = { symbols: "符號" };
                },
                52378(e) {
                    "use strict";
                    e.exports = { assert() {} };
                },
            },
            i = {};
        function s(e) {
            var o = i[e];
            if (void 0 !== o) return o.exports;
            var r = (i[e] = { exports: {} });
            return t[e].call(r.exports, r, r.exports, s), r.exports;
        }
        (s.m = t),
            (e = []),
            (s.O = (t, i, o, r) => {
                if (!i) {
                    var n = 1 / 0;
                    for (d = 0; e.length > d; d++) {
                        (i = e[d][0]), (o = e[d][1]), (r = e[d][2]);
                        for (var a = !0, l = 0; i.length > l; l++)
                            (!1 & r || n >= r) &&
                            Object.keys(s.O).every((e) => s.O[e](i[l]))
                                ? i.splice(l--, 1)
                                : ((a = !1), n > r && (n = r));
                        if (a) {
                            e.splice(d--, 1);
                            var c = o();
                            void 0 !== c && (t = c);
                        }
                    }
                    return t;
                }
                r = r || 0;
                for (var d = e.length; d > 0 && e[d - 1][2] > r; d--)
                    e[d] = e[d - 1];
                e[d] = [i, o, r];
            }),
            (s.n = (e) => {
                var t = e && e.__esModule ? () => e.default : () => e;
                return s.d(t, { a: t }), t;
            }),
            (s.d = (e, t) => {
                for (var i in t)
                    s.o(t, i) &&
                        !s.o(e, i) &&
                        Object.defineProperty(e, i, {
                            enumerable: !0,
                            get: t[i],
                        });
            }),
            (s.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)),
            (s.r = (e) => {
                "undefined" != typeof Symbol &&
                    Symbol.toStringTag &&
                    Object.defineProperty(e, Symbol.toStringTag, {
                        value: "Module",
                    }),
                    Object.defineProperty(e, "__esModule", { value: !0 });
            }),
            (() => {
                var e = { 670: 0 };
                s.O.j = (t) => 0 === e[t];
                var t = (t, i) => {
                        var o,
                            r,
                            n = i[0],
                            a = i[1],
                            l = i[2],
                            c = 0;
                        if (n.some((t) => 0 !== e[t])) {
                            for (o in a) s.o(a, o) && (s.m[o] = a[o]);
                            if (l) var d = l(s);
                        }
                        for (t && t(i); n.length > c; c++)
                            s.o(e, (r = n[c])) && e[r] && e[r][0](), (e[r] = 0);
                        return s.O(d);
                    },
                    i = (self.webpackChunkjodit_pro =
                        self.webpackChunkjodit_pro || []);
                i.forEach(t.bind(null, 0)),
                    (i.push = t.bind(null, i.push.bind(i)));
            })();
        var o = s(1120);
        return s.O(o);
    })();
});
